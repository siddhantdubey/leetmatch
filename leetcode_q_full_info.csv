title_slug,tags,difficulty
count-valid-paths-in-a-tree,"['Math', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Number Theory']",Hard
valid-boomerang,"['Array', 'Math', 'Geometry']",Easy
the-maze-iii,"['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",Hard
number-of-ways-to-stay-in-the-same-place-after-some-steps,['Dynamic Programming'],Hard
flatten,[],N/A
string-transformation,"['Math', 'String', 'Dynamic Programming', 'String Matching']",Hard
maximize-total-tastiness-of-purchased-fruits,"['Array', 'Dynamic Programming']",Medium
bulls-and-cows,"['Hash Table', 'String', 'Counting']",Medium
minimize-the-difference-between-target-and-chosen-elements,"['Array', 'Dynamic Programming', 'Matrix']",Medium
longest-palindrome,"['Hash Table', 'String', 'Greedy']",Easy
unique-binary-search-trees-ii,"['Dynamic Programming', 'Backtracking', 'Tree', 'Binary Search Tree', 'Binary Tree']",Medium
maximum-building-height,"['Array', 'Math', 'Sorting']",Hard
get-maximum-in-generated-array,"['Array', 'Simulation']",Easy
number-of-substrings-with-only-1s,"['Math', 'String']",Medium
reverse-linked-list,"['Linked List', 'Recursion']",Easy
minimum-number-of-taps-to-open-to-water-a-garden,"['Array', 'Dynamic Programming', 'Greedy']",Hard
first-letter-to-appear-twice,"['Hash Table', 'String', 'Bit Manipulation', 'Counting']",Easy
longest-subarray-of-1s-after-deleting-one-element,"['Array', 'Dynamic Programming', 'Sliding Window']",Medium
minimum-moves-to-spread-stones-over-grid,"['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",Medium
minimum-health-to-beat-game,"['Array', 'Greedy']",Medium
online-election,"['Array', 'Hash Table', 'Binary Search', 'Design']",Medium
minimum-time-to-make-array-sum-at-most-x,"['Array', 'Dynamic Programming', 'Sorting']",Hard
maximum-xor-after-operations,"['Array', 'Math', 'Bit Manipulation']",Medium
transform-to-chessboard,"['Array', 'Math', 'Bit Manipulation', 'Matrix']",Hard
binary-tree-longest-consecutive-sequence,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
binary-tree-preorder-traversal,"['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",Easy
minimize-max-distance-to-gas-station,"['Array', 'Binary Search']",Hard
make-a-square-with-the-same-color,"['Array', 'Matrix', 'Enumeration']",Easy
minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits,"['String', 'Greedy', 'Binary Indexed Tree', 'Segment Tree']",Hard
stone-game-v,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",Hard
find-duplicate-subtrees,"['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
design-excel-sum-formula,"['Array', 'Graph', 'Design', 'Topological Sort', 'Matrix']",Hard
reverse-prefix-of-word,"['Two Pointers', 'String']",Easy
monotone-increasing-digits,"['Math', 'Greedy']",Medium
find-nearest-right-node-in-binary-tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",Medium
number-of-substrings-with-fixed-ratio,"['Hash Table', 'Math', 'String', 'Prefix Sum']",Medium
maximum-size-of-a-set-after-removals,"['Array', 'Hash Table', 'Greedy']",Medium
find-n-unique-integers-sum-up-to-zero,"['Array', 'Math']",Easy
count-subarrays-with-median-k,"['Array', 'Hash Table', 'Prefix Sum']",Hard
number-of-closed-islands,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
maximum-number-of-non-overlapping-palindrome-substrings,"['String', 'Dynamic Programming']",Hard
flip-string-to-monotone-increasing,"['String', 'Dynamic Programming']",Medium
roman-to-integer,"['Hash Table', 'Math', 'String']",Easy
minimum-number-of-operations-to-make-array-continuous,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",Hard
minimum-time-takes-to-reach-destination-without-drowning,"['Array', 'Breadth-First Search', 'Matrix']",Hard
minimum-amount-of-time-to-collect-garbage,"['Array', 'String', 'Prefix Sum']",Medium
n-repeated-element-in-size-2n-array,"['Array', 'Hash Table']",Easy
special-array-with-x-elements-greater-than-or-equal-x,"['Array', 'Binary Search', 'Sorting']",Easy
constrained-subset-sum,[],N/A
count-alternating-subarrays,"['Array', 'Math']",Medium
spiral-matrix-ii,"['Array', 'Matrix', 'Simulation']",Medium
longest-increasing-subsequence-ii,"['Array', 'Divide and Conquer', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree', 'Queue', 'Monotonic Queue']",Hard
distribute-candies,"['Array', 'Hash Table']",Easy
reveal-cards-in-increasing-order,"['Array', 'Queue', 'Sorting', 'Simulation']",Medium
diagonal-traverse-ii,"['Array', 'Sorting', 'Heap (Priority Queue)']",Medium
time-based-key-value-store,"['Hash Table', 'String', 'Binary Search', 'Design']",Medium
number-of-arithmetic-triplets,"['Array', 'Hash Table', 'Two Pointers', 'Enumeration']",Easy
reordered-power-of-2,"['Hash Table', 'Math', 'Sorting', 'Counting', 'Enumeration']",Medium
reformat-the-string,['String'],Easy
first-unique-character-in-a-string,"['Hash Table', 'String', 'Queue', 'Counting']",Easy
divide-intervals-into-minimum-number-of-groups,"['Array', 'Two Pointers', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Prefix Sum']",Medium
construct-binary-search-tree-from-preorder-traversal,"['Array', 'Stack', 'Tree', 'Binary Search Tree', 'Monotonic Stack', 'Binary Tree']",Medium
missing-number-in-arithmetic-progression,"['Array', 'Math']",Easy
sliding-window-median,"['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",Hard
count-substrings-with-only-one-distinct-letter,"['Math', 'String']",Easy
find-the-index-of-permutation,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Medium
isomorphic-strings,"['Hash Table', 'String']",Easy
minimum-edge-weight-equilibrium-queries-in-a-tree,"['Array', 'Tree', 'Graph', 'Strongly Connected Component']",Hard
max-stack,"['Linked List', 'Stack', 'Design', 'Doubly-Linked List', 'Ordered Set']",Hard
mirror-reflection,"['Math', 'Geometry', 'Number Theory']",Medium
find-maximal-uncovered-ranges,"['Array', 'Sorting']",Medium
robot-room-cleaner,"['Backtracking', 'Interactive']",Hard
find-indices-with-index-and-value-difference-ii,"['Array', 'Two Pointers']",Medium
cracking-the-safe,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",Hard
add-bold-tag-in-string,"['Array', 'Hash Table', 'String', 'Trie', 'String Matching']",Medium
special-positions-in-a-binary-matrix,"['Array', 'Matrix']",Easy
most-profitable-path-in-a-tree,"['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",Medium
determine-color-of-a-chessboard-square,"['Math', 'String']",Easy
minimum-operations-to-reduce-x-to-zero,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window', 'Prefix Sum']",Medium
stone-game-iv,"['Math', 'Dynamic Programming', 'Game Theory']",Hard
shortest-impossible-sequence-of-rolls,"['Array', 'Hash Table', 'Greedy']",Hard
goat-latin,['String'],Easy
construct-k-palindrome-strings,"['Hash Table', 'String', 'Greedy', 'Counting']",Medium
minDistance,[],N/A
largest-number-after-digit-swaps-by-parity,"['Sorting', 'Heap (Priority Queue)']",Easy
plus-one-linked-list,"['Linked List', 'Math']",Medium
permutation-sequence,"['Math', 'Recursion']",Hard
delete-columns-to-make-sorted-iii,"['Array', 'String', 'Dynamic Programming']",Hard
design-compressed-string-iterator,"['Array', 'String', 'Design', 'Iterator']",Easy
count-nodes-with-the-highest-score,"['Array', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
course-schedule-iv,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Medium
element-appearing-more-than-25-in-sorted-array,['Array'],Easy
surface-area-of-3d-shapes,"['Array', 'Math', 'Geometry', 'Matrix']",Easy
minimum-cost-to-equalize-array,"['Array', 'Greedy', 'Enumeration']",Hard
find-target-indices-after-sorting-array,"['Array', 'Binary Search', 'Sorting']",Easy
describe-the-painting,"['Array', 'Hash Table', 'Sorting', 'Prefix Sum']",Medium
apply-operations-to-make-all-array-elements-equal-to-zero,"['Array', 'Prefix Sum']",Medium
minimum-bit-flips-to-convert-number,['Bit Manipulation'],Easy
count-the-number-of-vowel-strings-in-range,"['Array', 'String']",Easy
apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k,"['Math', 'Greedy', 'Enumeration']",Medium
uniquePaths2,[],N/A
4sum,"['Array', 'Two Pointers', 'Sorting']",Medium
encode-n-ary-tree-to-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",Hard
day-of-the-year,"['Math', 'String']",Easy
maximum-binary-string-after-change,"['String', 'Greedy']",Medium
create-sorted-array-through-instructions,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Hard
non-negative-integers-without-consecutive-ones,['Dynamic Programming'],Hard
shuffle-an-array,"['Array', 'Math', 'Randomized']",Medium
number-of-submatrices-that-sum-to-target,"['Array', 'Hash Table', 'Matrix', 'Prefix Sum']",Hard
minimum-cost-homecoming-of-a-robot-in-a-grid,"['Array', 'Greedy']",Medium
maximum-bags-with-full-capacity-of-rocks,"['Array', 'Greedy', 'Sorting']",Medium
minimum-average-difference,"['Array', 'Prefix Sum']",Medium
bus-routes,"['Array', 'Hash Table', 'Breadth-First Search']",Hard
rearrange-characters-to-make-target-string,"['Hash Table', 'String', 'Counting']",Easy
minimum-fuel-cost-to-report-to-the-capital,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",Medium
make-two-arrays-equal-by-reversing-sub-arrays,[],N/A
check-if-binary-string-has-at-most-one-segment-of-ones,['String'],Easy
maximum-gcd-sum-of-a-subarray,"['Array', 'Math', 'Binary Search', 'Number Theory']",Hard
longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Ordered Set', 'Monotonic Queue']",Medium
find-words-containing-character,"['Array', 'String']",Easy
minimum-time-to-repair-cars,"['Array', 'Binary Search']",Medium
shortest-path-to-get-all-keys,"['Array', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",Hard
construct-product-matrix,"['Array', 'Matrix', 'Prefix Sum']",Medium
the-k-th-lexicographical-string-of-all-happy-strings-of-length-n,"['String', 'Backtracking']",Medium
count-number-of-maximum-bitwise-or-subsets,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",Medium
robot-collisions,"['Array', 'Stack', 'Sorting', 'Simulation']",Hard
longest-substring-without-repeating-characters,"['Hash Table', 'String', 'Sliding Window']",Medium
digit-count-in-range,"['Math', 'Dynamic Programming']",Hard
length-of-last-word,['String'],Easy
cinema-seat-allocation,"['Array', 'Hash Table', 'Greedy', 'Bit Manipulation']",Medium
subtree-of-another-tree,"['Tree', 'Depth-First Search', 'String Matching', 'Binary Tree', 'Hash Function']",Easy
count-the-number-of-incremovable-subarrays-ii,"['Array', 'Two Pointers', 'Binary Search']",Hard
number-of-sub-arrays-with-odd-sum,"['Array', 'Math', 'Dynamic Programming', 'Prefix Sum']",Medium
replace-question-marks-in-string-to-minimize-its-value,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",Medium
sort-integers-by-the-number-of-1-bits,"['Array', 'Bit Manipulation', 'Sorting', 'Counting']",Easy
replace-all-digits-with-characters,['String'],Easy
high-access-employees,"['Array', 'Hash Table', 'String', 'Sorting']",Medium
kth-distinct-string-in-an-array,"['Array', 'Hash Table', 'String', 'Counting']",Easy
super-washing-machines,"['Array', 'Greedy']",Hard
smallest-k-length-subsequence-with-occurrences-of-a-letter,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",Hard
distribute-candies-among-children-i,"['Math', 'Combinatorics', 'Enumeration']",Easy
contains-duplicate-ii,"['Array', 'Hash Table', 'Sliding Window']",Easy
count-elements-with-strictly-smaller-and-greater-elements,"['Array', 'Sorting']",Easy
maximum-number-of-moves-in-a-grid,"['Array', 'Dynamic Programming', 'Matrix']",Medium
maximum-average-subarray-i,"['Array', 'Sliding Window']",Easy
subtree-removal-game-with-fibonacci-tree,"['Math', 'Dynamic Programming', 'Tree', 'Binary Tree', 'Game Theory']",Hard
k-concatenation-maximum-sum,"['Array', 'Dynamic Programming']",Medium
minimum-number-of-days-to-disconnect-island,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Strongly Connected Component']",Hard
shortest-word-distance-ii,"['Array', 'Hash Table', 'Two Pointers', 'String', 'Design']",Medium
employee-free-time,"['Array', 'Sorting', 'Heap (Priority Queue)']",Hard
smallest-greater-multiple-made-of-two-digits,"['Math', 'Enumeration']",Medium
minimize-maximum-value-in-a-grid,"['Array', 'Union Find', 'Graph', 'Topological Sort', 'Sorting', 'Matrix']",Hard
find-longest-special-substring-that-occurs-thrice-i,"['Hash Table', 'String', 'Binary Search', 'Sliding Window', 'Counting']",Medium
word-ladder-ii,"['Hash Table', 'String', 'Backtracking', 'Breadth-First Search']",Hard
top-k-frequent-elements,"['Array', 'Hash Table', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting', 'Quickselect']",Medium
validate-binary-search-tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
watering-plants-ii,"['Array', 'Two Pointers', 'Simulation']",Medium
sentence-similarity-ii,"['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find']",Medium
k-inverse-pairs-array,['Dynamic Programming'],Hard
surrounded-regions,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
number-of-equal-numbers-blocks,"['Array', 'Binary Search', 'Interactive']",Medium
number-of-good-pairs,"['Array', 'Hash Table', 'Math', 'Counting']",Easy
minimum-difference-between-highest-and-lowest-of-k-scores,"['Array', 'Sliding Window', 'Sorting']",Easy
number-of-rectangles-that-can-form-the-largest-square,['Array'],Easy
set-matrix-zeroes,"['Array', 'Hash Table', 'Matrix']",Medium
combinations,['Backtracking'],Medium
shortest-distance-to-a-character,"['Array', 'Two Pointers', 'String']",Easy
the-maze-ii,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",Medium
prime-number-of-set-bits-in-binary-representation,"['Math', 'Bit Manipulation']",Easy
valid-triangle-number,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",Medium
destroy-sequential-targets,"['Array', 'Hash Table', 'Counting']",Medium
snakes-and-ladders,"['Array', 'Breadth-First Search', 'Matrix']",Medium
check-if-the-number-is-fascinating,"['Hash Table', 'Math']",Easy
minimum-number-of-operations-to-convert-time,"['String', 'Greedy']",Easy
check-distances-between-same-letters,"['Array', 'Hash Table', 'String']",Easy
determine-if-two-strings-are-close,"['Hash Table', 'String', 'Sorting', 'Counting']",Medium
search-suggestions-system,"['Array', 'String', 'Binary Search', 'Trie', 'Sorting', 'Heap (Priority Queue)']",Medium
difference-between-maximum-and-minimum-price-sum,"['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search']",Hard
longest-palindromic-subsequence-ii,"['String', 'Dynamic Programming']",Medium
minimum-number-of-moves-to-make-palindrome,"['Two Pointers', 'String', 'Greedy', 'Binary Indexed Tree']",Hard
max-increase-to-keep-city-skyline,"['Array', 'Greedy', 'Matrix']",Medium
print-in-order,['Concurrency'],Easy
groups-of-special-equivalent-strings,"['Array', 'Hash Table', 'String', 'Sorting']",Medium
mini-parser,"['String', 'Stack', 'Depth-First Search']",Medium
delete-duplicate-folders-in-system,"['Array', 'Hash Table', 'String', 'Trie', 'Hash Function']",Hard
maximum-number-of-k-divisible-components,"['Tree', 'Depth-First Search']",Hard
longest-unequal-adjacent-groups-subsequence-ii,"['Array', 'String', 'Dynamic Programming']",Medium
partition-array-such-that-maximum-difference-is-k,"['Array', 'Greedy', 'Sorting']",Medium
design-authentication-manager,"['Hash Table', 'Design']",Medium
maximum-xor-for-each-query,"['Array', 'Bit Manipulation', 'Prefix Sum']",Medium
fizz-buzz-multithreaded,['Concurrency'],Medium
find-the-minimum-and-maximum-number-of-nodes-between-critical-points,['Linked List'],Medium
maximum-number-of-tasks-you-can-assign,"['Array', 'Binary Search', 'Greedy', 'Queue', 'Sorting', 'Monotonic Queue']",Hard
choose-numbers-from-two-arrays-in-range,"['Array', 'Dynamic Programming']",Hard
find-the-student-that-will-replace-the-chalk,"['Array', 'Binary Search', 'Simulation', 'Prefix Sum']",Medium
check-if-string-is-decomposable-into-value-equal-substrings,['String'],Easy
divide-array-into-increasing-sequences,"['Array', 'Counting']",Hard
merge2,[],N/A
maximum-alternating-subsequence-sum,"['Array', 'Dynamic Programming']",Medium
find-the-longest-equal-subarray,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",Medium
maximum-sum-of-3-non-overlapping-subarrays,"['Array', 'Dynamic Programming']",Hard
maximum-number-of-coins-you-can-get,"['Array', 'Math', 'Greedy', 'Sorting', 'Game Theory']",Medium
online-stock-span,"['Stack', 'Design', 'Monotonic Stack', 'Data Stream']",Medium
bitwise-or-of-all-subsequence-sums,"['Array', 'Math', 'Bit Manipulation', 'Brainteaser']",Medium
remove-duplicates-from-sorted-array-ii,"['Array', 'Two Pointers']",Medium
maximum-number-of-pairs-in-array,"['Array', 'Hash Table', 'Counting']",Easy
maximum-sum-with-exactly-k-elements,"['Array', 'Greedy']",Easy
find-k-th-smallest-pair-distance,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Hard
assign-cookies,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Easy
beautiful-pairs,"['Array', 'Math', 'Divide and Conquer', 'Geometry', 'Sorting', 'Ordered Set']",Hard
divide-an-array-into-subarrays-with-minimum-cost-ii,"['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",Hard
h-index-ii,"['Array', 'Binary Search']",Medium
kth-ancestor-of-a-tree-node,"['Binary Search', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design']",Hard
build-binary-expression-tree-from-infix-expression,"['String', 'Stack', 'Tree', 'Binary Tree']",Hard
booking-concert-tickets-in-groups,"['Binary Search', 'Design', 'Binary Indexed Tree', 'Segment Tree']",Hard
count-of-smaller-numbers-after-self,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Hard
sort-colors,"['Array', 'Two Pointers', 'Sorting']",Medium
number-of-ways-to-reach-destination-in-the-grid,"['Math', 'Dynamic Programming', 'Combinatorics']",Hard
number-of-valid-subarrays,"['Array', 'Stack', 'Monotonic Stack']",Hard
most-common-word,"['Array', 'Hash Table', 'String', 'Counting']",Easy
arithmetic-slices,"['Array', 'Dynamic Programming']",Medium
find-the-minimum-possible-sum-of-a-beautiful-array,"['Math', 'Greedy']",Medium
simple-bank-system,"['Array', 'Hash Table', 'Design', 'Simulation']",Medium
find-smallest-common-element-in-all-rows,"['Array', 'Hash Table', 'Binary Search', 'Matrix', 'Counting']",Medium
jump-game-vi,"['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",Medium
count-the-number-of-k-big-indices,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Hard
coin-change-2,[],N/A
search-in-rotated-sorted-array,"['Array', 'Binary Search']",Medium
maximum-difference-between-increasing-elements,['Array'],Easy
optimal-division,"['Array', 'Math', 'Dynamic Programming']",Medium
find-missing-observations,"['Array', 'Math', 'Simulation']",Medium
design-a-leaderboard,"['Hash Table', 'Design', 'Sorting']",Medium
subarrays-distinct-element-sum-of-squares-i,"['Array', 'Hash Table']",Easy
uncrossed-lines,"['Array', 'Dynamic Programming']",Medium
palindrome-linked-list,"['Linked List', 'Two Pointers', 'Stack', 'Recursion']",Easy
rank-transform-of-a-matrix,"['Array', 'Union Find', 'Graph', 'Topological Sort', 'Sorting', 'Matrix']",Hard
double-modular-exponentiation,"['Array', 'Math', 'Simulation']",Medium
count-number-of-distinct-integers-after-reverse-operations,"['Array', 'Hash Table', 'Math']",Medium
numbers-at-most-n-given-digit-set,"['Array', 'Math', 'String', 'Binary Search', 'Dynamic Programming']",Hard
univalued-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
number-of-equivalent-domino-pairs,"['Array', 'Hash Table', 'Counting']",Easy
robot-return-to-origin,"['String', 'Simulation']",Easy
power-of-two,"['Math', 'Bit Manipulation', 'Recursion']",Easy
stone-game,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",Medium
shortest-way-to-form-string,"['Two Pointers', 'String', 'Greedy']",Medium
count-symmetric-integers,"['Math', 'Enumeration']",Easy
valid-palindrome-ii,"['Two Pointers', 'String', 'Greedy']",Easy
out-of-boundary-paths,['Dynamic Programming'],Medium
equal-rational-numbers,"['Math', 'String']",Hard
minimum-changes-to-make-k-semi-palindromes,"['Two Pointers', 'String', 'Dynamic Programming']",Hard
course-schedule,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Medium
intersection-of-two-arrays,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",Easy
sum-of-left-leaves,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
stone-game-viii,"['Array', 'Math', 'Dynamic Programming', 'Prefix Sum', 'Game Theory']",Hard
kth-smallest-element-in-a-sorted-matrix,"['Array', 'Binary Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",Medium
longest-non-decreasing-subarray-from-two-arrays,"['Array', 'Dynamic Programming']",Medium
number-of-common-factors,"['Math', 'Enumeration', 'Number Theory']",Easy
reverse-substrings-between-each-pair-of-parentheses,"['String', 'Stack']",Medium
maximum-height-by-stacking-cuboids,"['Array', 'Dynamic Programming', 'Sorting']",Hard
minimum-cost-to-make-at-least-one-valid-path-in-a-grid,"['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",Hard
maximum-profit-of-operating-a-centennial-wheel,"['Array', 'Simulation']",Medium
find-all-numbers-disappeared-in-an-array,"['Array', 'Hash Table']",Easy
remove-palindromic-subsequences,"['Two Pointers', 'String']",Easy
find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows,"['Array', 'Binary Search', 'Heap (Priority Queue)', 'Matrix']",Hard
employee-importance,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Medium
find-distance-in-a-binary-tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
minimum-total-cost-to-make-arrays-unequal,"['Array', 'Hash Table', 'Greedy', 'Counting']",Hard
count-distinct-numbers-on-board,"['Array', 'Hash Table', 'Math', 'Simulation']",Easy
minimum-number-of-steps-to-make-two-strings-anagram,"['Hash Table', 'String', 'Counting']",Medium
largest-1-bordered-square,"['Array', 'Dynamic Programming', 'Matrix']",Medium
maximize-the-number-of-partitions-after-operations,"['String', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
longest-line-of-consecutive-one-in-matrix,"['Array', 'Dynamic Programming', 'Matrix']",Medium
split-array-into-consecutive-subsequences,"['Array', 'Hash Table', 'Greedy', 'Heap (Priority Queue)']",Medium
maximum-subarray,"['Array', 'Divide and Conquer', 'Dynamic Programming']",Medium
add-two-numbers,"['Linked List', 'Math', 'Recursion']",Medium
minimum-speed-to-arrive-on-time,"['Array', 'Binary Search']",Medium
make-the-string-great,"['String', 'Stack']",Easy
find-score-of-an-array-after-marking-all-elements,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",Medium
reachable-nodes-with-restrictions,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
two-sum,"['Array', 'Hash Table']",Easy
count-number-of-bad-pairs,"['Array', 'Hash Table']",Medium
parse-lisp-expression,"['Hash Table', 'String', 'Stack', 'Recursion']",Hard
count-ways-to-build-good-strings,['Dynamic Programming'],Medium
frequency-of-the-most-frequent-element,"['Array', 'Binary Search', 'Greedy', 'Sliding Window', 'Sorting', 'Prefix Sum']",Medium
smallest-string-starting-from-leaf,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
longest-common-subsequence-between-sorted-arrays,"['Array', 'Hash Table', 'Counting']",Medium
campus-bikes,"['Array', 'Greedy', 'Sorting']",Medium
closest-room,"['Array', 'Binary Search', 'Sorting']",Hard
fruit-into-baskets,"['Array', 'Hash Table', 'Sliding Window']",Medium
greatest-common-divisor-of-strings,"['Math', 'String']",Easy
partition-list,"['Linked List', 'Two Pointers']",Medium
number-of-black-blocks,"['Array', 'Hash Table', 'Enumeration']",Medium
angle-between-hands-of-a-clock,['Math'],Medium
synonymous-sentences,"['Array', 'Hash Table', 'String', 'Backtracking', 'Union Find']",Medium
complete-binary-tree-inserter,"['Tree', 'Breadth-First Search', 'Design', 'Binary Tree']",Medium
next-greater-element-iii,"['Math', 'Two Pointers', 'String']",Medium
a-number-after-a-double-reversal,['Math'],Easy
partition-array-into-three-parts-with-equal-sum,"['Array', 'Greedy']",Easy
binary-tree-inorder-traversal,"['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",Easy
jewels-and-stones,"['Hash Table', 'String']",Easy
minimum-score-of-a-path-between-two-cities,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
truncate-sentence,"['Array', 'String']",Easy
possible-bipartition,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
bulb-switcher,"['Math', 'Brainteaser']",Medium
shortest-path-in-a-hidden-grid,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Interactive']",Medium
pizza-with-3n-slices,"['Array', 'Dynamic Programming', 'Greedy', 'Heap (Priority Queue)']",Hard
maximum-number-of-weeks-for-which-you-can-work,"['Array', 'Greedy']",Medium
maximum-number-of-operations-with-the-same-score-ii,"['Array', 'Dynamic Programming', 'Memoization']",Medium
the-k-weakest-rows-in-a-matrix,"['Array', 'Binary Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",Easy
construct-the-longest-new-string,"['Math', 'Dynamic Programming', 'Greedy', 'Brainteaser']",Medium
maximum-subsequence-score,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Medium
apply-operations-to-make-two-strings-equal,"['String', 'Dynamic Programming']",Medium
linked-list-cycle-ii,"['Hash Table', 'Linked List', 'Two Pointers']",Medium
second-largest-digit-in-a-string,"['Hash Table', 'String']",Easy
count-visited-nodes-in-a-directed-graph,"['Dynamic Programming', 'Graph', 'Memoization']",Hard
apply-operations-on-array-to-maximize-sum-of-squares,"['Array', 'Hash Table', 'Greedy', 'Bit Manipulation']",Hard
earliest-second-to-mark-indices-ii,"['Array', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",Hard
maximum-nesting-depth-of-two-valid-parentheses-strings,"['String', 'Stack']",Medium
number-of-people-aware-of-a-secret,"['Dynamic Programming', 'Queue', 'Simulation']",Medium
all-paths-from-source-lead-to-destination,"['Graph', 'Topological Sort']",Medium
letter-tile-possibilities,"['Hash Table', 'String', 'Backtracking', 'Counting']",Medium
four-divisors,"['Array', 'Math']",Medium
sum-of-all-odd-length-subarrays,"['Array', 'Math', 'Prefix Sum']",Easy
coin-path,"['Array', 'Dynamic Programming']",Hard
maximum-candies-you-can-get-from-boxes,"['Array', 'Breadth-First Search', 'Graph']",Hard
pathSum,[],N/A
number-of-ways-to-buy-pens-and-pencils,"['Math', 'Enumeration']",Medium
check-if-word-is-valid-after-substitutions,"['String', 'Stack']",Medium
maximum-number-of-ones,"['Greedy', 'Heap (Priority Queue)']",Hard
count-artifacts-that-can-be-extracted,"['Array', 'Hash Table', 'Simulation']",Medium
range-addition-ii,"['Array', 'Math']",Easy
closest-node-to-path-in-tree,"['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Hard
best-sightseeing-pair,"['Array', 'Dynamic Programming']",Medium
largest-color-value-in-a-directed-graph,"['Hash Table', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Counting']",Hard
matchsticks-to-square,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
find-xor-beauty-of-array,"['Array', 'Math', 'Bit Manipulation']",Medium
longestCommonLength,[],N/A
minimum-subsequence-in-non-increasing-order,"['Array', 'Greedy', 'Sorting']",Easy
design-graph-with-shortest-path-calculator,"['Graph', 'Design', 'Heap (Priority Queue)', 'Shortest Path']",Hard
maximum-strength-of-k-disjoint-subarrays,"['Array', 'Dynamic Programming', 'Prefix Sum']",Hard
check-if-all-the-integers-in-a-range-are-covered,"['Array', 'Hash Table', 'Prefix Sum']",Easy
minimum-addition-to-make-integer-beautiful,"['Math', 'Greedy']",Medium
check-if-string-is-a-prefix-of-array,"['Array', 'Two Pointers', 'String']",Easy
maximum-value-of-a-string-in-an-array,"['Array', 'String']",Easy
implement-rand10-using-rand7,"['Math', 'Rejection Sampling', 'Randomized', 'Probability and Statistics']",Medium
escape-the-spreading-fire,"['Array', 'Binary Search', 'Breadth-First Search', 'Matrix']",Hard
delete-operation-for-two-strings,"['String', 'Dynamic Programming']",Medium
minimum-number-of-pushes-to-type-word-i,"['Math', 'String', 'Greedy']",Easy
camelcase-matching,"['Array', 'Two Pointers', 'String', 'Trie', 'String Matching']",Medium
swap-for-longest-repeated-character-substring,"['Hash Table', 'String', 'Sliding Window']",Medium
count-items-matching-a-rule,"['Array', 'String']",Easy
two-sum-ii-input-array-is-sorted,"['Array', 'Two Pointers', 'Binary Search']",Medium
invert-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
maximum-genetic-difference-query,"['Array', 'Bit Manipulation', 'Trie']",Hard
number-of-days-between-two-dates,"['Math', 'String']",Easy
sum-of-number-and-its-reverse,"['Math', 'Enumeration']",Medium
sum-of-values-at-indices-with-k-set-bits,"['Array', 'Bit Manipulation']",Easy
maximize-area-of-square-hole-in-grid,"['Array', 'Sorting']",Medium
minimum-interval-to-include-each-query,"['Array', 'Binary Search', 'Line Sweep', 'Sorting', 'Heap (Priority Queue)']",Hard
number-of-islands-ii,"['Array', 'Hash Table', 'Union Find']",Hard
valid-palindrome-iii,"['String', 'Dynamic Programming']",Hard
palindrome-partitioning-iv,"['String', 'Dynamic Programming']",Hard
minimum-cost-to-convert-string-i,"['Array', 'String', 'Graph', 'Shortest Path']",Medium
longest-happy-string,"['String', 'Greedy', 'Heap (Priority Queue)']",Medium
largest-number-after-mutating-substring,"['Array', 'String', 'Greedy']",Medium
second-minimum-node-in-a-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Easy
maximum-number-of-operations-with-the-same-score-i,"['Array', 'Simulation']",Easy
subsequence-with-the-minimum-score,"['Two Pointers', 'String', 'Binary Search']",Hard
count-substrings-starting-and-ending-with-given-character,"['Math', 'String', 'Counting']",Medium
partition-array-according-to-given-pivot,"['Array', 'Two Pointers', 'Simulation']",Medium
groups-of-strings,"['String', 'Bit Manipulation', 'Union Find']",Hard
insert-into-a-sorted-circular-linked-list,['Linked List'],Medium
longest-string-chain,"['Array', 'Hash Table', 'Two Pointers', 'String', 'Dynamic Programming']",Medium
minimum-cost-to-set-cooking-time,"['Math', 'Enumeration']",Medium
word-abbreviation,"['Array', 'String', 'Greedy', 'Trie', 'Sorting']",Hard
minimum-length-of-anagram-concatenation,"['Hash Table', 'String', 'Counting']",Medium
occurrences-after-bigram,['String'],Easy
find-all-the-lonely-nodes,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
check-if-there-is-a-path-with-equal-number-of-0s-and-1s,"['Array', 'Dynamic Programming', 'Matrix']",Medium
minimum-difficulty-of-a-job-schedule,"['Array', 'Dynamic Programming']",Hard
binary-gap,['Bit Manipulation'],Easy
play-with-chips,[],N/A
deepest-leaves-sum,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
number-of-music-playlists,"['Math', 'Dynamic Programming', 'Combinatorics']",Hard
number-of-zero-filled-subarrays,"['Array', 'Math']",Medium
number-of-good-ways-to-split-a-string,"['Hash Table', 'String', 'Dynamic Programming', 'Bit Manipulation']",Medium
minimum-operations-to-collect-elements,"['Array', 'Hash Table', 'Bit Manipulation']",Easy
power-of-three,"['Math', 'Recursion']",Easy
perform-string-shifts,"['Array', 'Math', 'String']",Easy
count-of-range-sum,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Hard
frog-position-after-t-seconds,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",Hard
strobogrammatic-number-ii,"['Array', 'String', 'Recursion']",Medium
height-of-binary-tree-after-subtree-removal-queries,"['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Hard
longest-substring-with-at-most-two-distinct-characters,"['Hash Table', 'String', 'Sliding Window']",Medium
process-tasks-using-servers,"['Array', 'Heap (Priority Queue)']",Medium
total-appeal-of-a-string,"['Hash Table', 'String', 'Dynamic Programming']",Hard
insufficient-nodes-in-root-to-leaf-paths,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
minimum-cost-to-reach-city-with-discounts,"['Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
smallest-subtree-with-all-the-deepest-nodes,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
get-watched-videos-by-your-friends,"['Array', 'Hash Table', 'Breadth-First Search', 'Graph', 'Sorting']",Medium
count-special-quadruplets,"['Array', 'Hash Table', 'Enumeration']",Easy
filter-restaurants-by-vegan-friendly-price-and-distance,"['Array', 'Sorting']",Medium
remove-all-occurrences-of-a-substring,['String'],Medium
range-addition,"['Array', 'Prefix Sum']",Medium
cells-with-odd-values-in-a-matrix,"['Array', 'Math', 'Simulation']",Easy
shopping-offers,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",Medium
grid-game,"['Array', 'Matrix', 'Prefix Sum']",Medium
redundant-connection-ii,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Hard
last-visited-integers,"['Array', 'Simulation']",Easy
count-asterisks,['String'],Easy
maximum-number-of-visible-points,"['Array', 'Math', 'Geometry', 'Sliding Window', 'Sorting']",Hard
balance-a-binary-search-tree,"['Divide and Conquer', 'Greedy', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
minimum-number-of-groups-to-create-a-valid-assignment,"['Array', 'Hash Table', 'Greedy']",Medium
remove-invalid-parentheses,"['String', 'Backtracking', 'Breadth-First Search']",Hard
strange-printer-ii,"['Array', 'Graph', 'Topological Sort', 'Matrix']",Hard
check-if-two-expression-trees-are-equivalent,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
find-the-maximum-number-of-elements-in-subset,"['Array', 'Hash Table', 'Enumeration']",Medium
rectangle-area-ii,"['Array', 'Segment Tree', 'Line Sweep', 'Ordered Set']",Hard
reverse-vowels-of-a-string,"['Two Pointers', 'String']",Easy
move-pieces-to-obtain-a-string,"['Two Pointers', 'String']",Medium
number-of-single-divisor-triplets,['Math'],Medium
valid-arrangement-of-pairs,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",Hard
delete-the-middle-node-of-a-linked-list,"['Linked List', 'Two Pointers']",Medium
count-nodes-that-are-great-enough,"['Divide and Conquer', 'Tree', 'Depth-First Search', 'Binary Tree']",Hard
count-collisions-of-monkeys-on-a-polygon,"['Math', 'Recursion']",Medium
smallest-missing-non-negative-integer-after-operations,"['Array', 'Hash Table', 'Math', 'Greedy']",Medium
summary-ranges,['Array'],Easy
largest-unique-number,"['Array', 'Hash Table', 'Sorting']",Easy
minCut,[],N/A
shuffle-string,"['Array', 'String']",Easy
restoreIpAddresses,[],N/A
minimum-relative-loss-after-buying-chocolates,"['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",Hard
sorting-three-groups,"['Array', 'Binary Search', 'Dynamic Programming']",Medium
check-if-matrix-is-x-matrix,"['Array', 'Matrix']",Easy
minimum-number-of-visited-cells-in-a-grid,"['Array', 'Dynamic Programming', 'Stack', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix', 'Monotonic Stack']",Hard
shortest-path-visiting-all-nodes,"['Dynamic Programming', 'Bit Manipulation', 'Breadth-First Search', 'Graph', 'Bitmask']",Hard
time-to-cross-a-bridge,"['Array', 'Heap (Priority Queue)', 'Simulation']",Hard
shortest-word-distance-iii,"['Array', 'String']",Medium
number-of-1-bits,"['Divide and Conquer', 'Bit Manipulation']",Easy
how-many-apples-can-you-put-into-the-basket,"['Array', 'Greedy', 'Sorting']",Easy
circle-and-rectangle-overlapping,"['Math', 'Geometry']",Medium
number-of-segments-in-a-string,['String'],Easy
count-submatrices-with-all-ones,"['Array', 'Dynamic Programming', 'Stack', 'Matrix', 'Monotonic Stack']",Medium
climbing-stairs,"['Math', 'Dynamic Programming', 'Memoization']",Easy
most-frequent-ids,"['Array', 'Hash Table', 'Heap (Priority Queue)', 'Ordered Set']",Medium
check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
threeSum2,[],N/A
maximum-score-from-removing-substrings,"['String', 'Stack', 'Greedy']",Medium
minimum-weighted-subgraph-with-the-required-paths,"['Graph', 'Shortest Path']",Hard
game-of-life,"['Array', 'Matrix', 'Simulation']",Medium
minimum-value-to-get-positive-step-by-step-sum,"['Array', 'Prefix Sum']",Easy
simplified-fractions,"['Math', 'String', 'Number Theory']",Medium
lucky-numbers-in-a-matrix,"['Array', 'Matrix']",Easy
kth-largest-element-in-an-array,"['Array', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",Medium
subarray-sum-equals-k,"['Array', 'Hash Table', 'Prefix Sum']",Medium
binary-tree-postorder-traversal,"['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",Easy
to-lower-case,['String'],Easy
sum-of-digits-of-string-after-convert,"['String', 'Simulation']",Easy
consecutive-numbers-sum,"['Math', 'Enumeration']",Hard
find-all-anagrams-in-a-string,"['Hash Table', 'String', 'Sliding Window']",Medium
break-a-palindrome,"['String', 'Greedy']",Medium
corporate-flight-bookings,"['Array', 'Prefix Sum']",Medium
minimum-replacements-to-sort-the-array,"['Array', 'Math', 'Greedy']",Hard
check-if-move-is-legal,"['Array', 'Matrix', 'Enumeration']",Medium
n-ary-tree-level-order-traversal,"['Tree', 'Breadth-First Search']",Medium
prime-arrangements,['Math'],Easy
nested-list-weight-sum-ii,"['Stack', 'Depth-First Search', 'Breadth-First Search']",Medium
substring-with-concatenation-of-all-words,"['Hash Table', 'String', 'Sliding Window']",Hard
special-permutations,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Medium
longest-common-subsequence,"['String', 'Dynamic Programming']",Medium
count-of-matches-in-tournament,"['Math', 'Simulation']",Easy
number-of-ways-to-build-sturdy-brick-wall,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Medium
max-chunks-to-make-sorted,"['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",Medium
find-all-possible-stable-binary-arrays-i,"['Dynamic Programming', 'Prefix Sum']",Medium
rle-iterator,"['Array', 'Design', 'Counting', 'Iterator']",Medium
minimum-increment-to-make-array-unique,"['Array', 'Greedy', 'Sorting', 'Counting']",Medium
flip-binary-tree-to-match-preorder-traversal,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
find-the-longest-semi-repetitive-substring,"['String', 'Sliding Window']",Medium
lowest-common-ancestor-of-a-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
sort-integers-by-the-power-value,"['Dynamic Programming', 'Memoization', 'Sorting']",Medium
find-kth-bit-in-nth-binary-string,"['String', 'Recursion', 'Simulation']",Medium
delete-characters-to-make-fancy-string,['String'],Easy
count-square-sum-triples,"['Math', 'Enumeration']",Easy
armstrong-number,['Math'],Easy
count-number-of-special-subsequences,"['Array', 'Dynamic Programming']",Hard
the-latest-time-to-catch-a-bus,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
find-the-middle-index-in-array,"['Array', 'Prefix Sum']",Easy
longest-even-odd-subarray-with-threshold,"['Array', 'Sliding Window']",Easy
query-kth-smallest-trimmed-number,"['Array', 'String', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Radix Sort', 'Quickselect']",Medium
airplane-seat-assignment-probability,"['Math', 'Dynamic Programming', 'Brainteaser', 'Probability and Statistics']",Medium
find-the-pivot-integer,"['Math', 'Prefix Sum']",Easy
shortest-uncommon-substring-in-an-array,"['Array', 'Hash Table', 'String', 'Trie']",Medium
find-the-index-of-the-large-integer,"['Array', 'Binary Search', 'Interactive']",Medium
unique-paths-iii,"['Array', 'Backtracking', 'Bit Manipulation', 'Matrix']",Hard
lexicographical-numbers,"['Depth-First Search', 'Trie']",Medium
count-of-integers,"['Math', 'String', 'Dynamic Programming']",Hard
sell-diminishing-valued-colored-balls,"['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Medium
house-robber-ii,"['Array', 'Dynamic Programming']",Medium
guess-the-number-using-bitwise-questions-ii,"['Bit Manipulation', 'Interactive']",Medium
container-with-most-water,"['Array', 'Two Pointers', 'Greedy']",Medium
reaching-points,['Math'],Hard
count-subarrays-with-fixed-bounds,"['Array', 'Queue', 'Sliding Window', 'Monotonic Queue']",Hard
maximum-employees-to-be-invited-to-a-meeting,"['Depth-First Search', 'Graph', 'Topological Sort']",Hard
find-a-good-subset-of-the-matrix,"['Array', 'Greedy', 'Bit Manipulation', 'Matrix']",Hard
ways-to-make-a-fair-array,"['Array', 'Prefix Sum']",Medium
range-module,"['Design', 'Segment Tree', 'Ordered Set']",Hard
recover-binary-search-tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
three-consecutive-odds,['Array'],Easy
check-if-array-pairs-are-divisible-by-k,"['Array', 'Hash Table', 'Counting']",Medium
number-of-subarrays-having-even-product,"['Array', 'Math', 'Dynamic Programming']",Medium
the-maze,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Medium
maximum-number-of-potholes-that-can-be-fixed,"['String', 'Greedy', 'Sorting']",Medium
replace-words,"['Array', 'Hash Table', 'String', 'Trie']",Medium
find-the-highest-altitude,"['Array', 'Prefix Sum']",Easy
count-unreachable-pairs-of-nodes-in-an-undirected-graph,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
hand-of-straights,"['Array', 'Hash Table', 'Greedy', 'Sorting']",Medium
building-boxes,"['Math', 'Binary Search', 'Greedy']",Hard
partitioning-into-minimum-number-of-deci-binary-numbers,"['String', 'Greedy']",Medium
minimize-the-total-price-of-the-trips,"['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",Hard
shortest-cycle-in-a-graph,"['Breadth-First Search', 'Graph']",Hard
count-the-number-of-good-subarrays,"['Array', 'Hash Table', 'Sliding Window']",Medium
minimum-distance-to-the-target-element,['Array'],Easy
number-of-valid-words-for-each-puzzle,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Trie']",Hard
maximum-number-of-balloons,"['Hash Table', 'String', 'Counting']",Easy
find-numbers-with-even-number-of-digits,['Array'],Easy
existence-of-a-substring-in-a-string-and-its-reverse,"['Hash Table', 'String']",Easy
number-of-ways-to-reconstruct-a-tree,"['Tree', 'Graph']",Hard
count-increasing-quadruplets,"['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Enumeration', 'Prefix Sum']",Hard
sum-of-subsequence-widths,"['Array', 'Math', 'Sorting']",Hard
decode-xored-array,"['Array', 'Bit Manipulation']",Easy
minimum-size-subarray-sum,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",Medium
happy-students,"['Array', 'Sorting', 'Enumeration']",Medium
n-ary-tree-preorder-traversal,"['Stack', 'Tree', 'Depth-First Search']",Easy
minimum-number-of-refueling-stops,"['Array', 'Dynamic Programming', 'Greedy', 'Heap (Priority Queue)']",Hard
linked-list-in-binary-tree,"['Linked List', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
sort-even-and-odd-indices-independently,"['Array', 'Sorting']",Easy
student-attendance-record-i,['String'],Easy
different-ways-to-add-parentheses,"['Math', 'String', 'Dynamic Programming', 'Recursion', 'Memoization']",Medium
count-the-number-of-special-characters-ii,"['Hash Table', 'String']",Medium
remove-adjacent-almost-equal-characters,"['String', 'Dynamic Programming', 'Greedy']",Medium
is-subsequence,"['Two Pointers', 'String', 'Dynamic Programming']",Easy
check-if-strings-can-be-made-equal-with-operations-ii,"['Hash Table', 'String', 'Sorting']",Medium
extra-characters-in-a-string,"['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Trie']",Medium
unique-word-abbreviation,"['Array', 'Hash Table', 'String', 'Design']",Medium
convert-the-temperature,['Math'],Easy
increment-submatrices-by-one,"['Array', 'Matrix', 'Prefix Sum']",Medium
remove-covered-intervals,"['Array', 'Sorting']",Medium
create-components-with-same-value,"['Array', 'Math', 'Tree', 'Depth-First Search', 'Enumeration']",Hard
maximal-rectangle,"['Array', 'Dynamic Programming', 'Stack', 'Matrix', 'Monotonic Stack']",Hard
minimum-total-distance-traveled,"['Array', 'Dynamic Programming', 'Sorting']",Hard
minimum-number-of-increments-on-subarrays-to-form-a-target-array,"['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",Hard
number-of-paths-with-max-score,"['Array', 'Dynamic Programming', 'Matrix']",Hard
moving-average-from-data-stream,"['Array', 'Design', 'Queue', 'Data Stream']",Easy
shortest-unsorted-continuous-subarray,"['Array', 'Two Pointers', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",Medium
find-the-integer-added-to-array-i,['Array'],Easy
gcd-sort-of-an-array,"['Array', 'Math', 'Union Find', 'Sorting', 'Number Theory']",Hard
cut-off-trees-for-golf-event,"['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",Hard
maximum-value-of-an-ordered-triplet-ii,['Array'],Medium
find-all-groups-of-farmland,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Medium
reformat-date,['String'],Easy
count-the-number-of-ideal-arrays,"['Math', 'Dynamic Programming', 'Combinatorics', 'Number Theory']",Hard
maximum-product-of-the-length-of-two-palindromic-substrings,"['String', 'Rolling Hash', 'Hash Function']",Hard
binary-tree-cameras,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",Hard
intersection-of-multiple-arrays,"['Array', 'Hash Table', 'Sorting', 'Counting']",Easy
maximum-population-year,"['Array', 'Counting', 'Prefix Sum']",Easy
kids-with-the-greatest-number-of-candies,['Array'],Easy
redundant-connection,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
continuous-subarray-sum,"['Array', 'Hash Table', 'Math', 'Prefix Sum']",Medium
design-hashmap,"['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']",Easy
short-encoding-of-words,"['Array', 'Hash Table', 'String', 'Trie']",Medium
number-of-recent-calls,"['Design', 'Queue', 'Data Stream']",Easy
intersection-of-three-sorted-arrays,"['Array', 'Hash Table', 'Binary Search', 'Counting']",Easy
parallel-courses,"['Graph', 'Topological Sort']",Medium
evaluate-division,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Shortest Path']",Medium
apply-bitwise-operations-to-make-strings-equal,"['String', 'Bit Manipulation']",Medium
maximum-average-subarray-ii,"['Array', 'Binary Search', 'Prefix Sum']",Hard
count-ways-to-make-array-with-product,"['Array', 'Math', 'Dynamic Programming', 'Combinatorics', 'Number Theory']",Hard
all-divisions-with-the-highest-score-of-a-binary-array,['Array'],Medium
spiral-matrix,"['Array', 'Matrix', 'Simulation']",Medium
find-the-divisibility-array-of-a-string,"['Array', 'Math', 'String']",Medium
pass-the-pillow,"['Math', 'Simulation']",Easy
count-the-number-of-good-partitions,"['Array', 'Hash Table', 'Math', 'Combinatorics']",Hard
find-the-difference-of-two-arrays,"['Array', 'Hash Table']",Easy
frog-jump,"['Array', 'Dynamic Programming']",Hard
graph-connectivity-with-threshold,"['Array', 'Math', 'Union Find', 'Number Theory']",Hard
maximum-number-of-robots-within-budget,"['Array', 'Binary Search', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Prefix Sum']",Hard
array-transformation,"['Array', 'Simulation']",Easy
construct-the-lexicographically-largest-valid-sequence,"['Array', 'Backtracking']",Medium
pacific-atlantic-water-flow,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Medium
count-beautiful-substrings-ii,"['Hash Table', 'Math', 'String', 'Number Theory', 'Prefix Sum']",Hard
seat-reservation-manager,"['Design', 'Heap (Priority Queue)']",Medium
lfu-cache,"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",Hard
cheapest-flights-within-k-stops,"['Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
check-if-an-array-is-consecutive,"['Array', 'Hash Table', 'Sorting']",Easy
largest-subarray-length-k,"['Array', 'Greedy']",Easy
take-k-of-each-character-from-left-and-right,"['Hash Table', 'String', 'Sliding Window']",Medium
find-the-substring-with-maximum-cost,"['Array', 'Hash Table', 'String', 'Dynamic Programming']",Medium
maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold,"['Array', 'Binary Search', 'Matrix', 'Prefix Sum']",Medium
find-the-peaks,"['Array', 'Enumeration']",Easy
rings-and-rods,"['Hash Table', 'String']",Easy
print-immutable-linked-list-in-reverse,"['Linked List', 'Two Pointers', 'Stack', 'Recursion']",Medium
remove-all-ones-with-row-and-column-flips,"['Array', 'Math', 'Bit Manipulation', 'Matrix']",Medium
minimum-time-to-type-word-using-special-typewriter,"['String', 'Greedy']",Easy
remove-nodes-from-linked-list,"['Linked List', 'Stack', 'Recursion', 'Monotonic Stack']",Medium
finding-the-users-active-minutes,"['Array', 'Hash Table']",Medium
find-greatest-common-divisor-of-array,"['Array', 'Math', 'Number Theory']",Easy
slowest-key,"['Array', 'String']",Easy
next-greater-element-ii,"['Array', 'Stack', 'Monotonic Stack']",Medium
two-out-of-three,"['Array', 'Hash Table', 'Bit Manipulation']",Easy
median-of-a-row-wise-sorted-matrix,"['Array', 'Binary Search', 'Matrix']",Medium
design-bitset,"['Array', 'Hash Table', 'String', 'Design']",Medium
statistics-from-a-large-sample,"['Array', 'Math', 'Probability and Statistics']",Medium
car-fleet,"['Array', 'Stack', 'Sorting', 'Monotonic Stack']",Medium
kth-smallest-product-of-two-sorted-arrays,"['Array', 'Binary Search']",Hard
fair-candy-swap,"['Array', 'Hash Table', 'Binary Search', 'Sorting']",Easy
arithmetic-slices-ii-subsequence,"['Array', 'Dynamic Programming']",Hard
count-triplets-that-can-form-two-arrays-of-equal-xor,"['Array', 'Hash Table', 'Math', 'Bit Manipulation', 'Prefix Sum']",Medium
construct-binary-tree-from-inorder-and-postorder-traversal,"['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",Medium
find-the-k-or-of-an-array,"['Array', 'Bit Manipulation']",Easy
remove-boxes,"['Array', 'Dynamic Programming', 'Memoization']",Hard
minimum-moves-to-reach-target-score,"['Math', 'Greedy']",Medium
beautiful-arrangement,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
greatest-common-divisor-traversal,"['Array', 'Math', 'Union Find', 'Number Theory']",Hard
reconstruct-a-2-row-binary-matrix,"['Array', 'Greedy', 'Matrix']",Medium
paths-in-matrix-whose-sum-is-divisible-by-k,"['Array', 'Dynamic Programming', 'Matrix']",Hard
valid-word-square,"['Array', 'Matrix']",Easy
matrix-cells-in-distance-order,"['Array', 'Math', 'Geometry', 'Sorting', 'Matrix']",Easy
final-value-of-variable-after-performing-operations,"['Array', 'String', 'Simulation']",Easy
count-pairs-of-equal-substrings-with-minimum-difference,"['Hash Table', 'String', 'Greedy']",Medium
count-substrings-that-differ-by-one-character,"['Hash Table', 'String', 'Dynamic Programming']",Medium
minimum-operations-to-make-array-equal-ii,"['Array', 'Math', 'Greedy']",Medium
minimum-degree-of-a-connected-trio-in-a-graph,['Graph'],Hard
average-waiting-time,"['Array', 'Simulation']",Medium
largest-plus-sign,"['Array', 'Dynamic Programming']",Medium
find-pivot-index,"['Array', 'Prefix Sum']",Easy
minimum-number-of-frogs-croaking,"['String', 'Counting']",Medium
maximal-network-rank,['Graph'],Medium
find-a-peak-element-ii,"['Array', 'Binary Search', 'Matrix']",Medium
split-bst,"['Tree', 'Binary Search Tree', 'Recursion', 'Binary Tree']",Medium
the-time-when-the-network-becomes-idle,"['Array', 'Breadth-First Search', 'Graph']",Medium
leaf-similar-trees,"['Tree', 'Depth-First Search', 'Binary Tree']",Easy
random-pick-with-weight,"['Array', 'Math', 'Binary Search', 'Prefix Sum', 'Randomized']",Medium
remove-duplicates-from-sorted-list,['Linked List'],Easy
check-if-a-string-can-break-another-string,"['String', 'Greedy', 'Sorting']",Medium
cloneGraph,[],N/A
best-poker-hand,"['Array', 'Hash Table', 'Counting']",Easy
sum-of-scores-of-built-strings,"['String', 'Binary Search', 'Rolling Hash', 'Suffix Array', 'String Matching', 'Hash Function']",Hard
contains-duplicate-iii,"['Array', 'Sliding Window', 'Sorting', 'Bucket Sort', 'Ordered Set']",Hard
maximum-product-after-k-increments,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
vertical-order-traversal-of-a-binary-tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Sorting', 'Binary Tree']",Hard
rotate-string,"['String', 'String Matching']",Easy
can-place-flowers,"['Array', 'Greedy']",Easy
finding-the-number-of-visible-mountains,"['Array', 'Stack', 'Sorting', 'Monotonic Stack']",Medium
profitable-schemes,"['Array', 'Dynamic Programming']",Hard
maximum-number-of-groups-with-increasing-length,"['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting']",Hard
minimum-cost-to-buy-apples,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
minimum-cost-tree-from-leaf-values,"['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",Medium
partition-string-into-substrings-with-values-at-most-k,"['String', 'Dynamic Programming', 'Greedy']",Medium
count-houses-in-a-circular-street,"['Array', 'Interactive']",Easy
total-cost-to-hire-k-workers,"['Array', 'Two Pointers', 'Heap (Priority Queue)', 'Simulation']",Medium
binary-tree-level-order-traversal-ii,"['Tree', 'Breadth-First Search', 'Binary Tree']",Medium
third-maximum-number,"['Array', 'Sorting']",Easy
minimum-number-of-operations-to-make-word-k-periodic,"['Hash Table', 'String', 'Counting']",Medium
k-divisible-elements-subarrays,"['Array', 'Hash Table', 'Trie', 'Rolling Hash', 'Hash Function', 'Enumeration']",Medium
longest-mountain-in-array,"['Array', 'Two Pointers', 'Dynamic Programming', 'Enumeration']",Medium
three-divisors,"['Math', 'Enumeration', 'Number Theory']",Easy
find-first-palindromic-string-in-the-array,"['Array', 'Two Pointers', 'String']",Easy
sort-features-by-popularity,"['Array', 'Hash Table', 'String', 'Sorting']",Medium
inorder-successor-in-bst,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
count-univalue-subtrees,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
alternating-digit-sum,['Math'],Easy
word-squares,"['Array', 'String', 'Backtracking', 'Trie']",Hard
number-of-sets-of-k-non-overlapping-line-segments,"['Math', 'Dynamic Programming', 'Combinatorics']",Medium
maximum-value-after-insertion,"['String', 'Greedy']",Medium
right-triangles,"['Array', 'Hash Table', 'Math', 'Combinatorics', 'Counting']",Medium
minimum-size-subarray-in-infinite-array,"['Array', 'Hash Table', 'Sliding Window', 'Prefix Sum']",Medium
concatenation-of-consecutive-binary-numbers,"['Math', 'Bit Manipulation', 'Simulation']",Medium
cycle-length-queries-in-a-tree,"['Array', 'Tree', 'Binary Tree']",Hard
longest-chunked-palindrome-decomposition,"['Two Pointers', 'String', 'Dynamic Programming', 'Greedy', 'Rolling Hash', 'Hash Function']",Hard
sum-of-beauty-in-the-array,['Array'],Medium
sum-of-digits-in-base-k,['Math'],Easy
delete-columns-to-make-sorted,"['Array', 'String']",Easy
maximum-number-of-integers-to-choose-from-a-range-ii,"['Array', 'Binary Search', 'Greedy', 'Sorting']",Medium
reverse-words-in-a-string-ii,"['Two Pointers', 'String']",Medium
painting-the-walls,"['Array', 'Dynamic Programming']",Hard
color-the-triangle-red,"['Array', 'Math']",Hard
random-pick-with-blacklist,"['Array', 'Hash Table', 'Math', 'Binary Search', 'Sorting', 'Randomized']",Hard
max-value-of-equation,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",Hard
minimize-malware-spread,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Hard
number-of-ways-to-split-a-string,"['Math', 'String']",Medium
inorder-successor-in-bst-ii,"['Tree', 'Binary Search Tree', 'Binary Tree']",Medium
correct-a-binary-tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
minimize-malware-spread-ii,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Hard
longest-harmonious-subsequence,"['Array', 'Hash Table', 'Sliding Window', 'Sorting', 'Counting']",Easy
convert-an-array-into-a-2d-array-with-conditions,"['Array', 'Hash Table']",Medium
longest-square-streak-in-an-array,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",Medium
make-array-strictly-increasing,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",Hard
get-biggest-three-rhombus-sums-in-a-grid,"['Array', 'Math', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Prefix Sum']",Medium
shortest-path-with-alternating-colors,"['Breadth-First Search', 'Graph']",Medium
find-the-original-array-of-prefix-xor,"['Array', 'Bit Manipulation']",Medium
two-furthest-houses-with-different-colors,"['Array', 'Greedy']",Easy
operations-on-tree,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design']",Medium
projection-area-of-3d-shapes,"['Array', 'Math', 'Geometry', 'Matrix']",Easy
encode-string-with-shortest-length,"['String', 'Dynamic Programming']",Hard
number-of-ships-in-a-rectangle,"['Array', 'Divide and Conquer', 'Interactive']",Hard
keys-and-rooms,"['Depth-First Search', 'Breadth-First Search', 'Graph']",Medium
count-sub-islands,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
n-th-tribonacci-number,"['Math', 'Dynamic Programming', 'Memoization']",Easy
count-elements-with-maximum-frequency,"['Array', 'Hash Table', 'Counting']",Easy
minimum-sum-of-mountain-triplets-ii,['Array'],Medium
minimum-cost-of-buying-candies-with-discount,"['Array', 'Greedy', 'Sorting']",Easy
minimum-recolors-to-get-k-consecutive-black-blocks,"['String', 'Sliding Window']",Easy
valid-mountain-array,['Array'],Easy
path-in-zigzag-labelled-binary-tree,"['Math', 'Tree', 'Binary Tree']",Medium
trim-a-binary-search-tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
check-whether-two-strings-are-almost-equivalent,"['Hash Table', 'String', 'Counting']",Easy
minimum-time-to-visit-disappearing-nodes,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
minimum-remove-to-make-valid-parentheses,"['String', 'Stack']",Medium
pour-water-between-buckets-to-make-water-levels-equal,"['Array', 'Binary Search']",Medium
partition-equal-subset-sum,"['Array', 'Dynamic Programming']",Medium
maximum-sum-of-two-non-overlapping-subarrays,"['Array', 'Dynamic Programming', 'Sliding Window']",Medium
k-th-smallest-in-lexicographical-order,['Trie'],Hard
maximum-number-of-vowels-in-a-substring-of-given-length,"['String', 'Sliding Window']",Medium
count-the-number-of-special-characters-i,"['Hash Table', 'String']",Easy
two-sum-iv-input-is-a-bst,"['Hash Table', 'Two Pointers', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",Easy
advantage-shuffle,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Medium
find-the-safest-path-in-a-grid,"['Array', 'Binary Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
convert,[],N/A
tree-diameter,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Medium
number-of-enclaves,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
closest-binary-search-tree-value-ii,"['Two Pointers', 'Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Heap (Priority Queue)', 'Binary Tree']",Hard
maximum-palindromes-after-operations,"['Array', 'Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",Medium
sum-of-remoteness-of-all-cells,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
paint-house-ii,"['Array', 'Dynamic Programming']",Hard
transpose-matrix,"['Array', 'Matrix', 'Simulation']",Easy
swap-nodes-in-pairs,"['Linked List', 'Recursion']",Medium
check-if-it-is-a-good-array,"['Array', 'Math', 'Number Theory']",Hard
find-indices-with-index-and-value-difference-i,"['Array', 'Two Pointers']",Easy
count-all-valid-pickup-and-delivery-options,"['Math', 'Dynamic Programming', 'Combinatorics']",Hard
number-of-corner-rectangles,"['Array', 'Math', 'Dynamic Programming', 'Matrix']",Medium
closest-prime-numbers-in-range,"['Math', 'Number Theory']",Medium
count-subarrays-with-more-ones-than-zeros,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Medium
build-array-where-you-can-find-the-maximum-exactly-k-comparisons,"['Dynamic Programming', 'Prefix Sum']",Hard
smallest-string-with-swaps,"['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Sorting']",Medium
best-team-with-no-conflicts,"['Array', 'Dynamic Programming', 'Sorting']",Medium
bulb-switcher-ii,"['Math', 'Bit Manipulation', 'Depth-First Search', 'Breadth-First Search']",Medium
minimum-cost-to-reach-destination-in-time,"['Array', 'Dynamic Programming', 'Graph']",Hard
determine-the-minimum-sum-of-a-k-avoiding-array,"['Math', 'Greedy']",Medium
car-fleet-ii,"['Array', 'Math', 'Stack', 'Heap (Priority Queue)', 'Monotonic Stack']",Hard
reverse-nodes-in-even-length-groups,['Linked List'],Medium
equal-tree-partition,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
validate-ip-address,['String'],Medium
maximum-deletions-on-a-string,"['String', 'Dynamic Programming', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
get-the-maximum-score,"['Array', 'Two Pointers', 'Dynamic Programming', 'Greedy']",Hard
remove-all-adjacent-duplicates-in-string-ii,"['String', 'Stack']",Medium
check-if-number-has-equal-digit-count-and-digit-value,"['Hash Table', 'String', 'Counting']",Easy
minimum-deletions-to-make-array-divisible,"['Array', 'Math', 'Sorting', 'Heap (Priority Queue)', 'Number Theory']",Hard
minimize-maximum-of-array,"['Array', 'Binary Search', 'Dynamic Programming', 'Greedy', 'Prefix Sum']",Medium
make-array-empty,"['Array', 'Binary Search', 'Greedy', 'Binary Indexed Tree', 'Segment Tree', 'Sorting', 'Ordered Set']",Hard
perfect-rectangle,"['Array', 'Line Sweep']",Hard
check-if-there-is-a-valid-parentheses-string-path,"['Array', 'Dynamic Programming', 'Matrix']",Hard
find-resultant-array-after-removing-anagrams,"['Array', 'Hash Table', 'String', 'Sorting']",Easy
largest-combination-with-bitwise-and-greater-than-zero,"['Array', 'Hash Table', 'Bit Manipulation', 'Counting']",Medium
maximum-beauty-of-an-array-after-applying-operation,"['Array', 'Binary Search', 'Sliding Window', 'Sorting']",Medium
most-frequent-even-element,"['Array', 'Hash Table', 'Counting']",Easy
maximum-trailing-zeros-in-a-cornered-path,"['Array', 'Matrix', 'Prefix Sum']",Medium
erect-the-fence-ii,"['Array', 'Math', 'Geometry']",Hard
largest-palindrome-product,['Math'],Hard
shifting-letters-ii,"['Array', 'String', 'Prefix Sum']",Medium
length-of-longest-subarray-with-at-most-k-frequency,"['Array', 'Hash Table', 'Sliding Window']",Medium
find-mode-in-binary-search-tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Easy
append-characters-to-string-to-make-subsequence,"['Two Pointers', 'String', 'Greedy']",Medium
find-the-maximum-achievable-number,['Math'],Easy
palindromePartition2,[],N/A
maximum-strength-of-a-group,"['Array', 'Dynamic Programming', 'Backtracking', 'Greedy', 'Bit Manipulation', 'Sorting', 'Enumeration']",Medium
maximize-palindrome-length-from-subsequences,"['String', 'Dynamic Programming']",Hard
distinct-prime-factors-of-product-of-array,"['Array', 'Hash Table', 'Math', 'Number Theory']",Medium
binary-searchable-numbers-in-an-unsorted-array,"['Array', 'Binary Search']",Medium
rotate-image,"['Array', 'Math', 'Matrix']",Medium
find-the-losers-of-the-circular-game,"['Array', 'Hash Table', 'Simulation']",Easy
similar-string-groups,"['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find']",Hard
minimum-operations-to-make-numbers-non-positive,"['Array', 'Binary Search']",Hard
minimum-number-of-arrows-to-burst-balloons,"['Array', 'Greedy', 'Sorting']",Medium
ransom-note,"['Hash Table', 'String', 'Counting']",Easy
design-circular-queue,"['Array', 'Linked List', 'Design', 'Queue']",Medium
sum-of-distances-in-tree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",Hard
special-binary-string,"['String', 'Recursion']",Hard
remove-zero-sum-consecutive-nodes-from-linked-list,"['Hash Table', 'Linked List']",Medium
largest-element-in-an-array-after-merge-operations,"['Array', 'Greedy']",Medium
word-pattern,"['Hash Table', 'String']",Easy
maximum-distance-in-arrays,"['Array', 'Greedy']",Medium
lemonade-change,"['Array', 'Greedy']",Easy
guess-the-number-using-bitwise-questions-i,"['Bit Manipulation', 'Interactive']",Medium
partition-array-for-maximum-sum,"['Array', 'Dynamic Programming']",Medium
maximum-number-of-alloys,"['Array', 'Binary Search']",Medium
count-complete-subarrays-in-an-array,"['Array', 'Hash Table', 'Sliding Window']",Medium
number-of-ways-to-rearrange-sticks-with-k-sticks-visible,"['Math', 'Dynamic Programming', 'Combinatorics']",Hard
minimum-number-of-days-to-eat-n-oranges,"['Dynamic Programming', 'Memoization']",Hard
most-stones-removed-with-same-row-or-column,"['Hash Table', 'Depth-First Search', 'Union Find', 'Graph']",Medium
maximum-number-of-words-you-can-type,"['Hash Table', 'String']",Easy
reverse-subarray-to-maximize-array-value,"['Array', 'Math', 'Greedy']",Hard
rearrange-array-to-maximize-prefix-score,"['Array', 'Greedy', 'Sorting', 'Prefix Sum']",Medium
invalid-transactions,"['Array', 'Hash Table', 'String', 'Sorting']",Medium
minimumTotal2,[],N/A
path-crossing,"['Hash Table', 'String']",Easy
construct-target-array-with-multiple-sums,"['Array', 'Heap (Priority Queue)']",Hard
minimum-cost-of-a-path-with-special-roads,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
strings-differ-by-one-character,"['Hash Table', 'String', 'Rolling Hash', 'Hash Function']",Medium
stamping-the-grid,"['Array', 'Greedy', 'Matrix', 'Prefix Sum']",Hard
minimum-genetic-mutation,"['Hash Table', 'String', 'Breadth-First Search']",Medium
number-of-divisible-substrings,"['Hash Table', 'String', 'Counting', 'Prefix Sum']",Medium
range-sum-of-bst,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Easy
check-if-a-string-contains-all-binary-codes-of-size-k,"['Hash Table', 'String', 'Bit Manipulation', 'Rolling Hash', 'Hash Function']",Medium
valid-sudoku,"['Array', 'Hash Table', 'Matrix']",Medium
number-of-unique-good-subsequences,"['String', 'Dynamic Programming']",Hard
license-key-formatting,['String'],Easy
strobogrammatic-number,"['Hash Table', 'Two Pointers', 'String']",Easy
number-of-ways-of-cutting-a-pizza,"['Array', 'Dynamic Programming', 'Memoization', 'Matrix']",Hard
find-the-closest-palindrome,"['Math', 'String']",Hard
find-latest-group-of-size-m,"['Array', 'Binary Search', 'Simulation']",Medium
reverse-odd-levels-of-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
shortest-completing-word,"['Array', 'Hash Table', 'String']",Easy
check-completeness-of-a-binary-tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",Medium
delete-node-in-a-bst,"['Tree', 'Binary Search Tree', 'Binary Tree']",Medium
k-highest-ranked-items-within-a-price-range,"['Array', 'Breadth-First Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",Medium
maximize-number-of-nice-divisors,"['Math', 'Recursion']",Hard
split-array-into-maximum-number-of-subarrays,"['Array', 'Greedy', 'Bit Manipulation']",Medium
most-popular-video-creator,"['Array', 'Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)']",Medium
ant-on-the-boundary,"['Array', 'Simulation', 'Prefix Sum']",Easy
maximum-points-inside-the-square,"['Array', 'Hash Table', 'String', 'Binary Search', 'Sorting']",Medium
delivering-boxes-from-storage-to-ports,"['Array', 'Dynamic Programming', 'Segment Tree', 'Queue', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",Hard
points-that-intersect-with-cars,"['Array', 'Hash Table', 'Prefix Sum']",Easy
graph-valid-tree,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
maximum-swap,"['Math', 'Greedy']",Medium
maximum-white-tiles-covered-by-a-carpet,"['Array', 'Binary Search', 'Greedy', 'Sorting', 'Prefix Sum']",Medium
detect-capital,['String'],Easy
day-of-the-week,['Math'],Easy
maximum-subarray-sum-after-one-operation,"['Array', 'Dynamic Programming']",Medium
next-greater-element-i,"['Array', 'Hash Table', 'Stack', 'Monotonic Stack']",Easy
count-zero-request-servers,"['Array', 'Hash Table', 'Sliding Window', 'Sorting']",Medium
maximum-strong-pair-xor-ii,"['Array', 'Hash Table', 'Bit Manipulation', 'Trie', 'Sliding Window']",Hard
isInterleave,[],N/A
maximum-number-of-removable-characters,"['Array', 'Two Pointers', 'String', 'Binary Search']",Medium
length-of-longest-fibonacci-subsequence,"['Array', 'Hash Table', 'Dynamic Programming']",Medium
clumsy-factorial,"['Math', 'Stack', 'Simulation']",Medium
convert-binary-number-in-a-linked-list-to-integer,"['Linked List', 'Math']",Easy
peeking-iterator,"['Array', 'Design', 'Iterator']",Medium
global-and-local-inversions,"['Array', 'Math']",Medium
buy-two-chocolates,"['Array', 'Sorting']",Easy
count-servers-that-communicate,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix', 'Counting']",Medium
maximum-profitable-triplets-with-increasing-prices-i,"['Array', 'Binary Indexed Tree', 'Segment Tree']",Medium
design-bounded-blocking-queue,['Concurrency'],Medium
substring-with-largest-variance,"['Array', 'Dynamic Programming']",Hard
the-wording-game,"['Array', 'Math', 'Two Pointers', 'String', 'Game Theory']",Hard
egg-drop-with-2-eggs-and-n-floors,"['Math', 'Dynamic Programming']",Medium
longest-nice-subarray,"['Array', 'Bit Manipulation', 'Sliding Window']",Medium
maximum-frequency-stack,"['Hash Table', 'Stack', 'Design', 'Ordered Set']",Hard
shortest-common-supersequence,"['String', 'Dynamic Programming']",Hard
checking-existence-of-edge-length-limited-paths,"['Array', 'Two Pointers', 'Union Find', 'Graph', 'Sorting']",Hard
additive-number,"['String', 'Backtracking']",Medium
find-unique-binary-string,"['Array', 'Hash Table', 'String', 'Backtracking']",Medium
non-overlapping-intervals,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",Medium
split-concatenated-strings,"['Array', 'String', 'Greedy']",Medium
minimum-cost-to-make-array-equal,"['Array', 'Binary Search', 'Greedy', 'Sorting', 'Prefix Sum']",Hard
stepping-numbers,"['Backtracking', 'Breadth-First Search']",Medium
create-maximum-number,"['Array', 'Two Pointers', 'Stack', 'Greedy', 'Monotonic Stack']",Hard
most-frequent-subtree-sum,"['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
add-minimum-number-of-rungs,"['Array', 'Greedy']",Medium
couples-holding-hands,"['Greedy', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Hard
sort-the-matrix-diagonally,"['Array', 'Sorting', 'Matrix']",Medium
find-first-and-last-position-of-element-in-sorted-array,"['Array', 'Binary Search']",Medium
jump-game,"['Array', 'Dynamic Programming', 'Greedy']",Medium
account-balance-after-rounded-purchase,['Math'],Easy
maximum-product-of-splitted-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
maximum-enemy-forts-that-can-be-captured,"['Array', 'Two Pointers']",Easy
brace-expansion-ii,"['String', 'Backtracking', 'Stack', 'Breadth-First Search']",Hard
binary-tree-tilt,"['Tree', 'Depth-First Search', 'Binary Tree']",Easy
the-number-of-the-smallest-unoccupied-chair,"['Array', 'Hash Table', 'Heap (Priority Queue)']",Medium
my-calendar-iii,"['Binary Search', 'Design', 'Segment Tree', 'Ordered Set']",Hard
find-polygon-with-the-largest-perimeter,"['Array', 'Greedy', 'Sorting', 'Prefix Sum']",Medium
minimum-array-length-after-pair-removals,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Greedy', 'Counting']",Medium
student-attendance-record-ii,['Dynamic Programming'],Hard
count-common-words-with-one-occurrence,"['Array', 'Hash Table', 'String', 'Counting']",Easy
maximum-distance-between-a-pair-of-values,"['Array', 'Two Pointers', 'Binary Search']",Medium
maximum-consecutive-floors-without-special-floors,"['Array', 'Sorting']",Medium
number-of-days-in-a-month,['Math'],Easy
longest-well-performing-interval,"['Array', 'Hash Table', 'Stack', 'Monotonic Stack', 'Prefix Sum']",Medium
solving-questions-with-brainpower,"['Array', 'Dynamic Programming']",Medium
minimum-cost-to-cut-a-stick,"['Array', 'Dynamic Programming', 'Sorting']",Hard
number-of-subarrays-with-lcm-equal-to-k,"['Array', 'Math', 'Number Theory']",Medium
number-of-distinct-binary-strings-after-applying-operations,"['Math', 'String']",Medium
maximum-equal-frequency,"['Array', 'Hash Table']",Hard
arranging-coins,"['Math', 'Binary Search']",Easy
basic-calculator,"['Math', 'String', 'Stack', 'Recursion']",Hard
divide-chocolate,"['Array', 'Binary Search']",Hard
encrypt-and-decrypt-strings,"['Array', 'Hash Table', 'String', 'Design', 'Trie']",Hard
most-beautiful-item-for-each-query,"['Array', 'Binary Search', 'Sorting']",Medium
partition-array-into-disjoint-intervals,['Array'],Medium
design-browser-history,"['Array', 'Linked List', 'Stack', 'Design', 'Doubly-Linked List', 'Data Stream']",Medium
first-missing-positive,"['Array', 'Hash Table']",Hard
process-restricted-friend-requests,"['Union Find', 'Graph']",Hard
best-time-to-buy-and-sell-stock-iv,"['Array', 'Dynamic Programming']",Hard
zigzag-iterator,"['Array', 'Design', 'Queue', 'Iterator']",Medium
design-video-sharing-platform,"['Hash Table', 'Stack', 'Design', 'Ordered Set']",Hard
lowest-common-ancestor-of-a-binary-tree-iii,"['Hash Table', 'Two Pointers', 'Tree', 'Binary Tree']",Medium
smallest-subarrays-with-maximum-bitwise-or,"['Array', 'Binary Search', 'Bit Manipulation', 'Sliding Window']",Medium
range-frequency-queries,"['Array', 'Hash Table', 'Binary Search', 'Design', 'Segment Tree']",Medium
largest-values-from-labels,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Counting']",Medium
cherry-pickup,"['Array', 'Dynamic Programming', 'Matrix']",Hard
paths-in-maze-that-lead-to-same-room,['Graph'],Medium
delete-leaves-with-a-given-value,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
tree-of-coprimes,"['Array', 'Math', 'Tree', 'Depth-First Search', 'Number Theory']",Hard
minimum-operations-to-reduce-an-integer-to-0,"['Dynamic Programming', 'Greedy', 'Bit Manipulation']",Medium
house-robber-iii,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
maximum-path-quality-of-a-graph,"['Array', 'Backtracking', 'Graph']",Hard
check-array-formation-through-concatenation,"['Array', 'Hash Table']",Easy
target-sum,"['Array', 'Dynamic Programming', 'Backtracking']",Medium
number-of-connected-components-in-an-undirected-graph,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
minimum-rounds-to-complete-all-tasks,"['Array', 'Hash Table', 'Greedy', 'Counting']",Medium
flip-columns-for-maximum-number-of-equal-rows,"['Array', 'Hash Table', 'Matrix']",Medium
minimum-adjacent-swaps-to-reach-the-kth-smallest-number,"['Two Pointers', 'String', 'Greedy']",Medium
add-two-polynomials-represented-as-linked-lists,"['Linked List', 'Math', 'Two Pointers']",Medium
binary-string-with-substrings-representing-1-to-n,['String'],Medium
vowels-of-all-substrings,"['Math', 'String', 'Dynamic Programming', 'Combinatorics']",Medium
harshad-number,['Math'],Easy
minimum-cost-to-hire-k-workers,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Hard
check-for-contradictions-in-equations,"['Array', 'Depth-First Search', 'Union Find', 'Graph']",Hard
maximum-compatibility-score-sum,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
binary-tree-paths,"['String', 'Backtracking', 'Tree', 'Depth-First Search', 'Binary Tree']",Easy
number-of-islands,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
count-total-number-of-colored-cells,['Math'],Medium
time-needed-to-rearrange-a-binary-string,"['String', 'Dynamic Programming', 'Simulation']",Medium
surroundedRegions,[],N/A
confusing-number-ii,"['Math', 'Backtracking']",Hard
make-array-zero-by-subtracting-equal-amounts,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",Easy
minimize-the-maximum-of-two-arrays,"['Math', 'Binary Search', 'Number Theory']",Medium
water-bottles-ii,"['Math', 'Simulation']",Medium
count-houses-in-a-circular-street-ii,[],Hard
reorder-list,"['Linked List', 'Two Pointers', 'Stack', 'Recursion']",Medium
all-possible-full-binary-trees,"['Dynamic Programming', 'Tree', 'Recursion', 'Memoization', 'Binary Tree']",Medium
longest-common-prefix,"['String', 'Trie']",Easy
thousand-separator,['String'],Easy
equalize-strings-by-adding-or-removing-characters-at-ends,"['String', 'Binary Search', 'Dynamic Programming', 'Sliding Window', 'Hash Function']",Medium
decoded-string-at-index,"['String', 'Stack']",Medium
smallest-range,[],N/A
merge-bsts-to-create-single-bst,"['Hash Table', 'Binary Search', 'Tree', 'Depth-First Search', 'Binary Tree']",Hard
find-the-sum-of-encrypted-integers,"['Array', 'Math']",Easy
beautiful-towers-i,"['Array', 'Stack', 'Monotonic Stack']",Medium
delete-greatest-value-in-each-row,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Simulation']",Easy
depth-of-bst-given-insertion-order,"['Tree', 'Binary Search Tree', 'Binary Tree', 'Ordered Set']",Medium
find-minimum-in-rotated-sorted-array,"['Array', 'Binary Search']",Medium
sort-array-by-parity-ii,"['Array', 'Two Pointers', 'Sorting']",Easy
node-with-highest-edge-score,"['Hash Table', 'Graph']",Medium
minimum-height-trees,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Medium
longest-palindromic-substring,"['Two Pointers', 'String', 'Dynamic Programming']",Medium
minimum-operations-to-write-the-letter-y-on-a-grid,"['Array', 'Hash Table', 'Matrix', 'Counting']",Medium
minimum-unique-word-abbreviation,"['String', 'Backtracking', 'Bit Manipulation']",Hard
minimum-cost-for-tickets,"['Array', 'Dynamic Programming']",Medium
extract-kth-character-from-the-rope-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Easy
palindrome-number,['Math'],Easy
maximum-value-at-a-given-index-in-a-bounded-array,"['Binary Search', 'Greedy']",Medium
can-you-eat-your-favorite-candy-on-your-favorite-day,"['Array', 'Prefix Sum']",Medium
ways-to-express-an-integer-as-sum-of-powers,['Dynamic Programming'],Medium
max-number-of-k-sum-pairs,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",Medium
smallest-integer-divisible-by-k,"['Hash Table', 'Math']",Medium
subarrays-distinct-element-sum-of-squares-ii,"['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",Hard
construct-quad-tree,"['Array', 'Divide and Conquer', 'Tree', 'Matrix']",Medium
multiply-strings,"['Math', 'String', 'Simulation']",Medium
maximum-width-of-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
combination-sum-iv,"['Array', 'Dynamic Programming']",Medium
path-with-maximum-gold,"['Array', 'Backtracking', 'Matrix']",Medium
maximum-score-after-splitting-a-string,"['String', 'Prefix Sum']",Easy
find-the-value-of-the-partition,"['Array', 'Sorting']",Medium
ternary-expression-parser,"['String', 'Stack', 'Recursion']",Medium
simplify-path,"['String', 'Stack']",Medium
map-sum-pairs,"['Hash Table', 'String', 'Design', 'Trie']",Medium
maximum-and-sum-of-array,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
determine-whether-matrix-can-be-obtained-by-rotation,"['Array', 'Matrix']",Easy
number-of-distinct-roll-sequences,"['Dynamic Programming', 'Memoization']",Hard
maximum-earnings-from-taxi,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",Medium
lru-cache,"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",Medium
maximize-the-topmost-element-after-k-moves,"['Array', 'Greedy']",Medium
check-if-a-parentheses-string-can-be-valid,"['String', 'Stack', 'Greedy']",Medium
handshakes-that-dont-cross,"['Math', 'Dynamic Programming']",Hard
4sum-ii,"['Array', 'Hash Table']",Medium
find-smallest-letter-greater-than-target,"['Array', 'Binary Search']",Easy
card-flipping-game,"['Array', 'Hash Table']",Medium
distribute-coins-in-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
change-the-root-of-a-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
design-twitter,"['Hash Table', 'Linked List', 'Design', 'Heap (Priority Queue)']",Medium
dota2-senate,"['String', 'Greedy', 'Queue']",Medium
unique-number-of-occurrences,"['Array', 'Hash Table']",Easy
number-of-spaces-cleaning-robot-cleaned,"['Array', 'Matrix', 'Simulation']",Medium
remove-trailing-zeros-from-a-string,['String'],Easy
elimination-game,"['Math', 'Recursion']",Medium
tag-validator,"['String', 'Stack']",Hard
tweet-counts-per-frequency,"['Hash Table', 'Binary Search', 'Design', 'Sorting', 'Ordered Set']",Medium
detect-cycles-in-2d-grid,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
total-distance-traveled,"['Math', 'Simulation']",Easy
fraction-addition-and-subtraction,"['Math', 'String', 'Simulation']",Medium
maximum-strictly-increasing-cells-in-a-matrix,"['Array', 'Binary Search', 'Dynamic Programming', 'Memoization', 'Sorting', 'Matrix']",Hard
verbal-arithmetic-puzzle,"['Array', 'Math', 'String', 'Backtracking']",Hard
matrix-block-sum,"['Array', 'Matrix', 'Prefix Sum']",Medium
design-log-storage-system,"['Hash Table', 'String', 'Design', 'Ordered Set']",Medium
build-an-array-with-stack-operations,"['Array', 'Stack', 'Simulation']",Medium
stream-of-characters,"['Array', 'String', 'Design', 'Trie', 'Data Stream']",Hard
minimum-amount-of-time-to-fill-cups,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Easy
minimum-operations-to-convert-number,"['Array', 'Breadth-First Search']",Medium
minimum-number-of-operations-to-make-string-sorted,"['Math', 'String', 'Combinatorics']",Hard
largest-merge-of-two-strings,"['Two Pointers', 'String', 'Greedy']",Medium
maximum-number-of-events-that-can-be-attended,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Medium
sliding-subarray-beauty,"['Array', 'Hash Table', 'Sliding Window']",Medium
max-consecutive-ones-iii,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",Medium
reach-a-number,"['Math', 'Binary Search']",Medium
longest-subsequence-repeated-k-times,"['String', 'Backtracking', 'Greedy', 'Counting', 'Enumeration']",Hard
largest-submatrix-with-rearrangements,"['Array', 'Greedy', 'Sorting', 'Matrix']",Medium
restore-the-array-from-adjacent-pairs,"['Array', 'Hash Table']",Medium
find-elements-in-a-contaminated-binary-tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",Medium
reformat-phone-number,['String'],Easy
remove-element,"['Array', 'Two Pointers']",Easy
nth-magical-number,"['Math', 'Binary Search']",Hard
divide-an-array-into-subarrays-with-minimum-cost-i,"['Array', 'Sorting', 'Enumeration']",Easy
amount-of-new-area-painted-each-day,"['Array', 'Segment Tree', 'Ordered Set']",Hard
match-substring-after-replacement,"['Array', 'Hash Table', 'String', 'String Matching']",Hard
binary-watch,"['Backtracking', 'Bit Manipulation']",Easy
insert-delete-getrandom-o1-duplicates-allowed,"['Array', 'Hash Table', 'Math', 'Design', 'Randomized']",Hard
minimum-initial-energy-to-finish-tasks,"['Array', 'Greedy', 'Sorting']",Hard
partition-labels,"['Hash Table', 'Two Pointers', 'String', 'Greedy']",Medium
can-make-palindrome-from-substring,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",Medium
longest-absolute-file-path,"['String', 'Stack', 'Depth-First Search']",Medium
check-if-all-1s-are-at-least-length-k-places-away,['Array'],Easy
number-of-employees-who-met-the-target,['Array'],Easy
queries-on-a-permutation-with-key,"['Array', 'Binary Indexed Tree', 'Simulation']",Medium
increasing-triplet-subsequence,"['Array', 'Greedy']",Medium
longest-subarray-with-maximum-bitwise-and,"['Array', 'Bit Manipulation', 'Brainteaser']",Medium
find-building-where-alice-and-bob-can-meet,"['Array', 'Binary Search', 'Stack', 'Binary Indexed Tree', 'Segment Tree', 'Heap (Priority Queue)', 'Monotonic Stack']",Hard
minimum-string-length-after-removing-substrings,"['String', 'Stack', 'Simulation']",Easy
xor-operation-in-an-array,"['Math', 'Bit Manipulation']",Easy
row-with-maximum-ones,"['Array', 'Matrix']",Easy
smallest-good-base,"['Math', 'Binary Search']",Hard
minimum-non-zero-product-of-the-array-elements,"['Math', 'Greedy', 'Recursion']",Medium
decrypt-string-from-alphabet-to-integer-mapping,['String'],Easy
max-chunks-to-make-sorted-ii,"['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",Hard
maximum-twin-sum-of-a-linked-list,"['Linked List', 'Two Pointers', 'Stack']",Medium
number-of-ways-to-split-array,"['Array', 'Prefix Sum']",Medium
count-the-number-of-good-subsequences,"['Hash Table', 'Math', 'String', 'Combinatorics', 'Counting']",Medium
evaluate-reverse-polish-notation,"['Array', 'Math', 'Stack']",Medium
self-crossing,"['Array', 'Math', 'Geometry']",Hard
the-number-of-good-subsets,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
removing-minimum-number-of-magic-beans,"['Array', 'Greedy', 'Sorting', 'Enumeration', 'Prefix Sum']",Medium
design-a-todo-list,"['Array', 'Hash Table', 'String', 'Design', 'Sorting']",Medium
squirrel-simulation,"['Array', 'Math']",Medium
parallel-courses-iii,"['Array', 'Dynamic Programming', 'Graph', 'Topological Sort']",Hard
find-champion-ii,['Graph'],Medium
find-and-replace-pattern,"['Array', 'Hash Table', 'String']",Medium
numbers-with-same-consecutive-differences,"['Backtracking', 'Breadth-First Search']",Medium
count-the-number-of-fair-pairs,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
strong-password-checker,"['String', 'Greedy', 'Heap (Priority Queue)']",Hard
minimum-falling-path-sum-ii,"['Array', 'Dynamic Programming', 'Matrix']",Hard
remove-max-number-of-edges-to-keep-graph-fully-traversable,"['Union Find', 'Graph']",Hard
buildings-with-an-ocean-view,"['Array', 'Stack', 'Monotonic Stack']",Medium
maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k,"['Binary Search', 'Dynamic Programming', 'Bit Manipulation']",Medium
subsets,"['Array', 'Backtracking', 'Bit Manipulation']",Medium
design-search-autocomplete-system,"['String', 'Design', 'Trie', 'Sorting', 'Heap (Priority Queue)', 'Data Stream']",Hard
maximum-odd-binary-number,"['Math', 'String', 'Greedy']",Easy
maximize-number-of-subsequences-in-a-string,"['String', 'Greedy', 'Prefix Sum']",Medium
meeting-rooms-ii,"['Array', 'Two Pointers', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Prefix Sum']",Medium
minimum-obstacle-removal-to-reach-corner,"['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",Hard
minimize-result-by-adding-parentheses-to-expression,"['String', 'Enumeration']",Medium
vowel-spellchecker,"['Array', 'Hash Table', 'String']",Medium
stickers-to-spell-word,"['Array', 'String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Hard
maximum-number-of-events-that-can-be-attended-ii,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",Hard
line-reflection,"['Array', 'Hash Table', 'Math']",Medium
word-break,"['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Trie', 'Memoization']",Medium
previous-permutation-with-one-swap,"['Array', 'Greedy']",Medium
string-compression,"['Two Pointers', 'String']",Medium
permuteUnique,[],N/A
minimum-knight-moves,['Breadth-First Search'],Medium
rotated-digits,"['Math', 'Dynamic Programming']",Medium
sentence-similarity-iii,"['Array', 'Two Pointers', 'String']",Medium
reshape-the-matrix,"['Array', 'Matrix', 'Simulation']",Easy
132-pattern,"['Array', 'Binary Search', 'Stack', 'Monotonic Stack', 'Ordered Set']",Medium
insert-into-a-binary-search-tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",Medium
rotate-list,"['Linked List', 'Two Pointers']",Medium
text-justification,"['Array', 'String', 'Simulation']",Hard
super-pow,"['Math', 'Divide and Conquer']",Medium
count-good-numbers,"['Math', 'Recursion']",Medium
uniquePathWithObstacles,[],N/A
find-edges-in-shortest-paths,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Hard
increasing-subsequences,[],N/A
decremental-string-concatenation,"['Array', 'String', 'Dynamic Programming']",Medium
find-positive-integer-solution-for-a-given-equation,"['Math', 'Two Pointers', 'Binary Search', 'Interactive']",Medium
maximum-matching-of-players-with-trainers,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Medium
largest-local-values-in-a-matrix,"['Array', 'Matrix']",Easy
implement-stack-using-queues,"['Stack', 'Design', 'Queue']",Easy
determine-if-string-halves-are-alike,"['String', 'Counting']",Easy
average-of-levels-in-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
find-the-length-of-the-longest-common-prefix,"['Array', 'Hash Table', 'String', 'Trie']",Medium
copy-list-with-random-pointer,"['Hash Table', 'Linked List']",Medium
minimum-absolute-difference-between-elements-with-constraint,"['Array', 'Binary Search', 'Ordered Set']",Medium
people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list,"['Array', 'Hash Table', 'String']",Medium
steps-to-make-array-non-decreasing,"['Array', 'Linked List', 'Stack', 'Monotonic Stack']",Medium
counting-words-with-a-given-prefix,"['Array', 'String', 'String Matching']",Easy
sort-list,"['Linked List', 'Two Pointers', 'Divide and Conquer', 'Sorting', 'Merge Sort']",Medium
minimum-number-of-steps-to-make-two-strings-anagram-ii,"['Hash Table', 'String', 'Counting']",Medium
longest-substring-of-one-repeating-character,"['Array', 'String', 'Segment Tree', 'Ordered Set']",Hard
excel-sheet-column-number,"['Math', 'String']",Easy
sort-characters-by-frequency,"['Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting']",Medium
maximum-xor-of-two-non-overlapping-subtrees,"['Tree', 'Depth-First Search', 'Graph', 'Trie']",Hard
minimum-cost-to-merge-stones,"['Array', 'Dynamic Programming', 'Prefix Sum']",Hard
maximize-happiness-of-selected-children,"['Array', 'Greedy', 'Sorting']",Medium
number-of-wonderful-substrings,"['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",Medium
image-overlap,"['Array', 'Matrix']",Medium
minimum-area-rectangle,"['Array', 'Hash Table', 'Math', 'Geometry', 'Sorting']",Medium
find-pattern-in-infinite-stream-ii,"['Array', 'Sliding Window', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
count-the-number-of-powerful-integers,"['Math', 'String', 'Dynamic Programming']",Hard
guess-the-word,"['Array', 'Math', 'String', 'Interactive', 'Game Theory']",Hard
find-permutation,"['Array', 'String', 'Stack', 'Greedy']",Medium
find-minimum-in-rotated-sorted-array-ii,"['Array', 'Binary Search']",Hard
add-two-numbers-ii,"['Linked List', 'Math', 'Stack']",Medium
count-vowel-substrings-of-a-string,"['Hash Table', 'String']",Easy
count-number-of-pairs-with-absolute-difference-k,"['Array', 'Hash Table', 'Counting']",Easy
minimum-moves-to-equal-array-elements,"['Array', 'Math']",Medium
merge-two-binary-trees,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
best-time-to-buy-and-sell-stock-with-cooldown,"['Array', 'Dynamic Programming']",Medium
make-array-non-decreasing-or-non-increasing,"['Dynamic Programming', 'Greedy']",Hard
minimum-operations-to-make-the-array-alternating,"['Array', 'Hash Table', 'Greedy', 'Counting']",Medium
integer-to-english-words,"['Math', 'String', 'Recursion']",Hard
removing-stars-from-a-string,"['String', 'Stack', 'Simulation']",Medium
minimum-xor-sum-of-two-arrays,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
high-five,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",Easy
power-of-heroes,"['Array', 'Math', 'Dynamic Programming', 'Sorting', 'Prefix Sum']",Hard
minimum-number-of-coins-to-be-added,"['Array', 'Greedy', 'Sorting']",Medium
maximum-binary-tree-ii,"['Tree', 'Binary Tree']",Medium
shortest-bridge,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Medium
longest-substring-of-all-vowels-in-order,"['String', 'Sliding Window']",Medium
capacity-to-ship-packages-within-d-days,"['Array', 'Binary Search']",Medium
detect-pattern-of-length-m-repeated-k-or-more-times,"['Array', 'Enumeration']",Easy
trapping-rain-water,"['Array', 'Two Pointers', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",Hard
serialize-and-deserialize-bst,"['String', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Search Tree', 'Binary Tree']",Medium
maximum-number-of-ways-to-partition-an-array,"['Array', 'Hash Table', 'Counting', 'Enumeration', 'Prefix Sum']",Hard
maximum-profit-in-job-scheduling,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",Hard
remove-nth-node-from-end-of-list,"['Linked List', 'Two Pointers']",Medium
longest-uncommon-subsequence-i,['String'],Easy
maximize-value-of-function-in-a-ball-passing-game,"['Array', 'Dynamic Programming', 'Bit Manipulation']",Hard
widest-pair-of-indices-with-equal-range-sum,"['Array', 'Hash Table', 'Prefix Sum']",Medium
find-all-possible-recipes-from-given-supplies,"['Array', 'Hash Table', 'String', 'Graph', 'Topological Sort']",Medium
decrease-elements-to-make-array-zigzag,"['Array', 'Greedy']",Medium
divisor-game,"['Math', 'Dynamic Programming', 'Brainteaser', 'Game Theory']",Easy
maximum-absolute-sum-of-any-subarray,"['Array', 'Dynamic Programming']",Medium
check-if-array-is-sorted-and-rotated,['Array'],Easy
shortest-distance-to-target-string-in-a-circular-array,"['Array', 'String']",Easy
count-nodes-equal-to-average-of-subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
valid-number,['String'],Hard
naming-a-company,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Enumeration']",Hard
alphabet-board-path,"['Hash Table', 'String']",Medium
unique-substrings-in-wraparound-string,"['String', 'Dynamic Programming']",Medium
integer-replacement,"['Dynamic Programming', 'Greedy', 'Bit Manipulation', 'Memoization']",Medium
minimum-array-end,['Bit Manipulation'],Medium
course-schedule-iii,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Hard
height-checker,"['Array', 'Sorting', 'Counting Sort']",Easy
number-of-changing-keys,['String'],Easy
least-number-of-unique-integers-after-k-removals,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Counting']",Medium
nth-digit,"['Math', 'Binary Search']",Medium
average-salary-excluding-the-minimum-and-maximum-salary,"['Array', 'Sorting']",Easy
walls-and-gates,"['Array', 'Breadth-First Search', 'Matrix']",Medium
basic-calculator-ii,"['Math', 'String', 'Stack']",Medium
build-array-from-permutation,"['Array', 'Simulation']",Easy
flood-fill,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Easy
eliminate-maximum-number-of-monsters,"['Array', 'Greedy', 'Sorting']",Medium
design-a-file-sharing-system,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Data Stream']",Medium
cat-and-mouse-ii,"['Array', 'Math', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Matrix', 'Game Theory']",Hard
circular-array-loop,"['Array', 'Hash Table', 'Two Pointers']",Medium
masking-personal-information,['String'],Medium
diagonal-traverse,"['Array', 'Matrix', 'Simulation']",Medium
wiggle-subsequence,"['Array', 'Dynamic Programming', 'Greedy']",Medium
sumNumbers,[],N/A
count-lattice-points-inside-a-circle,"['Array', 'Hash Table', 'Math', 'Geometry', 'Enumeration']",Medium
count-largest-group,"['Hash Table', 'Math']",Easy
gray-code,"['Math', 'Backtracking', 'Bit Manipulation']",Medium
count-paths-that-can-form-a-palindrome-in-a-tree,"['Dynamic Programming', 'Bit Manipulation', 'Tree', 'Depth-First Search', 'Bitmask']",Hard
construct-binary-tree-from-preorder-and-inorder-traversal,"['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",Medium
collecting-chocolates,"['Array', 'Enumeration']",Medium
amount-of-time-for-binary-tree-to-be-infected,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
h-index,"['Array', 'Sorting', 'Counting Sort']",Medium
minimum-path-cost-in-a-grid,"['Array', 'Dynamic Programming', 'Matrix']",Medium
brick-wall,"['Array', 'Hash Table']",Medium
minimum-number-of-coins-for-fruits-ii,"['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",Hard
serialize-and-deserialize-n-ary-tree,"['String', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Hard
smallest-value-after-replacing-with-sum-of-prime-factors,"['Math', 'Simulation', 'Number Theory']",Medium
elements-in-array-after-removing-and-replacing-elements,['Array'],Medium
find-the-smallest-divisor-given-a-threshold,"['Array', 'Binary Search']",Medium
minimum-one-bit-operations-to-make-integers-zero,"['Dynamic Programming', 'Bit Manipulation', 'Memoization']",Hard
lowest-common-ancestor-of-a-binary-tree-ii,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
find-the-longest-balanced-substring-of-a-binary-string,['String'],Easy
sum-of-nodes-with-even-valued-grandparent,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
sum-of-total-strength-of-wizards,"['Array', 'Stack', 'Monotonic Stack', 'Prefix Sum']",Hard
all-elements-in-two-binary-search-trees,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Sorting', 'Binary Tree']",Medium
queens-that-can-attack-the-king,"['Array', 'Matrix', 'Simulation']",Medium
falling-squares,"['Array', 'Segment Tree', 'Ordered Set']",Hard
number-of-valid-words-in-a-sentence,['String'],Easy
apply-discount-to-prices,['String'],Medium
maximum-number-of-points-with-cost,"['Array', 'Dynamic Programming']",Medium
minimum-operations-to-make-a-subsequence,"['Array', 'Hash Table', 'Binary Search', 'Greedy']",Hard
longest-repeating-character-replacement,"['Hash Table', 'String', 'Sliding Window']",Medium
maximum-number-of-achievable-transfer-requests,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",Hard
combination-sum-iii,"['Array', 'Backtracking']",Medium
get-equal-substrings-within-budget,"['String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",Medium
minimum-cost-to-convert-string-ii,"['Array', 'String', 'Dynamic Programming', 'Graph', 'Trie', 'Shortest Path']",Hard
perfect-number,['Math'],Easy
count-the-number-of-k-free-subsets,"['Array', 'Dynamic Programming', 'Sorting']",Medium
permutation-difference-between-two-strings,"['Hash Table', 'String']",Easy
count-collisions-on-a-road,"['String', 'Stack', 'Simulation']",Medium
task-scheduler,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",Medium
check-if-grid-satisfies-conditions,"['Array', 'Matrix']",Easy
minimum-substring-partition-of-equal-character-frequency,"['Hash Table', 'String', 'Dynamic Programming', 'Counting']",Medium
count-beautiful-substrings-i,"['Hash Table', 'Math', 'String', 'Enumeration', 'Number Theory', 'Prefix Sum']",Medium
neither-minimum-nor-maximum,"['Array', 'Sorting']",Easy
longest-substring-with-at-least-k-repeating-characters,"['Hash Table', 'String', 'Divide and Conquer', 'Sliding Window']",Medium
accounts-merge,"['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Sorting']",Medium
minimum-deletion-cost-to-avoid-repeating-letters,[],N/A
maximum-number-of-points-from-grid-queries,"['Array', 'Two Pointers', 'Breadth-First Search', 'Union Find', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",Hard
minimum-deletions-to-make-string-k-special,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",Medium
minimum-length-of-string-after-deleting-similar-ends,"['Two Pointers', 'String']",Medium
string-compression-ii,"['String', 'Dynamic Programming']",Hard
next-greater-numerically-balanced-number,"['Math', 'Backtracking', 'Enumeration']",Medium
3sum-smaller,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
split-a-circular-linked-list,"['Linked List', 'Two Pointers']",Medium
finding-pairs-with-a-certain-sum,"['Array', 'Hash Table', 'Design']",Medium
reverse-words-in-a-string,"['Two Pointers', 'String']",Medium
minimum-moves-to-capture-the-queen,"['Array', 'Enumeration']",Medium
sequentially-ordinal-rank-tracker,"['Design', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",Hard
maximum-sum-bst-in-binary-tree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Hard
sparse-matrix-multiplication,"['Array', 'Hash Table', 'Matrix']",Medium
find-missing-and-repeated-values,"['Array', 'Hash Table', 'Math', 'Matrix']",Easy
building-h2o,['Concurrency'],Medium
minimum-numbers-of-function-calls-to-make-target-array,"['Array', 'Greedy', 'Bit Manipulation']",Medium
generalized-abbreviation,"['String', 'Backtracking', 'Bit Manipulation']",Medium
cat-and-mouse,"['Math', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Game Theory']",Hard
minimum-number-of-days-to-make-m-bouquets,"['Array', 'Binary Search']",Medium
number-of-subarrays-with-gcd-equal-to-k,"['Array', 'Math', 'Number Theory']",Medium
diet-plan-performance,"['Array', 'Sliding Window']",Easy
longest-ideal-subsequence,"['Hash Table', 'String', 'Dynamic Programming']",Medium
merge-triplets-to-form-target-triplet,"['Array', 'Greedy']",Medium
sort-the-students-by-their-kth-score,"['Array', 'Sorting', 'Matrix']",Medium
minimum-number-of-coins-for-fruits,"['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",Medium
paint-house-iii,"['Array', 'Dynamic Programming']",Hard
maximum-strong-pair-xor-i,"['Array', 'Hash Table', 'Bit Manipulation', 'Trie', 'Sliding Window']",Easy
minimum-increment-operations-to-make-array-beautiful,"['Array', 'Dynamic Programming']",Medium
maximum-score-of-a-node-sequence,"['Array', 'Graph', 'Sorting', 'Enumeration']",Hard
find-if-array-can-be-sorted,"['Array', 'Bit Manipulation', 'Sorting']",Medium
minPathSum,[],N/A
k-diff-pairs-in-an-array,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
maximum-length-of-pair-chain,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",Medium
make-string-anti-palindrome,"['String', 'Greedy', 'Sorting']",Hard
bomb-enemy,"['Array', 'Dynamic Programming', 'Matrix']",Medium
flatten-2d-vector,"['Array', 'Two Pointers', 'Design', 'Iterator']",Medium
maximal-score-after-applying-k-operations,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
ways-to-split-array-into-good-subarrays,"['Array', 'Math', 'Dynamic Programming']",Medium
two-sum-less-than-k,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Easy
binary-number-with-alternating-bits,['Bit Manipulation'],Easy
count-vowels-permutation,['Dynamic Programming'],Hard
choose-edges-to-maximize-score-in-a-tree,"['Dynamic Programming', 'Tree', 'Depth-First Search']",Medium
replace-non-coprime-numbers-in-array,"['Array', 'Math', 'Stack', 'Number Theory']",Hard
maximum-difference-score-in-a-grid,"['Array', 'Dynamic Programming', 'Matrix']",Medium
last-stone-weight-ii,"['Array', 'Dynamic Programming']",Medium
search-a-2d-matrix,"['Array', 'Binary Search', 'Matrix']",Medium
subrectangle-queries,"['Array', 'Design', 'Matrix']",Medium
sentence-screen-fitting,"['Array', 'String', 'Dynamic Programming']",Medium
decode-the-message,"['Hash Table', 'String']",Easy
longest-common-subpath,"['Array', 'Binary Search', 'Rolling Hash', 'Suffix Array', 'Hash Function']",Hard
knight-dialer,['Dynamic Programming'],Medium
intersection-of-two-arrays-ii,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",Easy
wiggle-sort-ii,"['Array', 'Divide and Conquer', 'Sorting', 'Quickselect']",Medium
majority-element-ii,"['Array', 'Hash Table', 'Sorting', 'Counting']",Medium
reverse-nodes-in-k-group,"['Linked List', 'Recursion']",Hard
count-pairs-in-two-arrays,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
print-foobar-alternately,['Concurrency'],Medium
maximize-the-confusion-of-an-exam,"['String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",Medium
minimum-lines-to-represent-a-line-chart,"['Array', 'Math', 'Geometry', 'Sorting', 'Number Theory']",Medium
maximum-sum-score-of-array,"['Array', 'Prefix Sum']",Medium
minimum-operations-to-make-a-special-number,"['Math', 'String', 'Greedy', 'Enumeration']",Medium
kill-process,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Medium
split-a-string-into-the-max-number-of-unique-substrings,"['Hash Table', 'String', 'Backtracking']",Medium
valid-perfect-square,"['Math', 'Binary Search']",Easy
count-operations-to-obtain-zero,"['Math', 'Simulation']",Easy
type-of-triangle-ii,[],N/A
fancy-sequence,"['Math', 'Design', 'Segment Tree']",Hard
queue-reconstruction-by-height,"['Array', 'Binary Indexed Tree', 'Segment Tree', 'Sorting']",Medium
minimum-number-of-operations-to-make-array-xor-equal-to-k,"['Array', 'Bit Manipulation']",Medium
longest-unequal-adjacent-groups-subsequence-i,"['Array', 'String', 'Dynamic Programming', 'Greedy']",Easy
minimum-cost-to-connect-two-groups-of-points,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",Hard
max-difference-you-can-get-from-changing-an-integer,"['Math', 'Greedy']",Medium
web-crawler,"['String', 'Depth-First Search', 'Breadth-First Search', 'Interactive']",Medium
toeplitz-matrix,"['Array', 'Matrix']",Easy
count-k-subsequences-of-a-string-with-maximum-beauty,"['Hash Table', 'Math', 'String', 'Greedy', 'Combinatorics']",Hard
water-and-jug-problem,"['Math', 'Depth-First Search', 'Breadth-First Search']",Medium
visit-array-positions-to-maximize-score,"['Array', 'Dynamic Programming']",Medium
substrings-of-size-three-with-distinct-characters,"['Hash Table', 'String', 'Sliding Window', 'Counting']",Easy
rectangle-area,"['Math', 'Geometry']",Medium
add-digits,"['Math', 'Simulation', 'Number Theory']",Easy
maximum-students-taking-exam,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",Hard
find-the-duplicate-number,"['Array', 'Two Pointers', 'Binary Search', 'Bit Manipulation']",Medium
minimum-operations-to-make-all-array-elements-equal,"['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",Medium
allocate-mailboxes,"['Array', 'Math', 'Dynamic Programming', 'Sorting']",Hard
swap-adjacent-in-lr-string,"['Two Pointers', 'String']",Medium
cousins-in-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
check-if-every-row-and-column-contains-all-numbers,"['Array', 'Hash Table', 'Matrix']",Easy
distribute-candies-among-children-iii,"['Math', 'Combinatorics']",Hard
search-insert-position,"['Array', 'Binary Search']",Easy
sortColors,[],N/A
flip-game-ii,"['Math', 'Dynamic Programming', 'Backtracking', 'Memoization', 'Game Theory']",Medium
check-if-there-is-a-valid-path-in-a-grid,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
find-three-consecutive-integers-that-sum-to-a-given-number,"['Math', 'Simulation']",Medium
valid-permutations-for-di-sequence,"['String', 'Dynamic Programming', 'Prefix Sum']",Hard
maximum-good-subarray-sum,"['Array', 'Hash Table', 'Prefix Sum']",Medium
minimum-swaps-to-arrange-a-binary-grid,"['Array', 'Greedy', 'Matrix']",Medium
count-number-of-homogenous-substrings,"['Math', 'String']",Medium
number-of-squareful-arrays,"['Array', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Hard
closest-subsequence-sum,"['Array', 'Two Pointers', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
sum-of-root-to-leaf-binary-numbers,"['Tree', 'Depth-First Search', 'Binary Tree']",Easy
maximum-depth-of-n-ary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search']",Easy
time-needed-to-buy-tickets,"['Array', 'Queue', 'Simulation']",Easy
verifying-an-alien-dictionary,"['Array', 'Hash Table', 'String']",Easy
new-21-game,"['Math', 'Dynamic Programming', 'Sliding Window', 'Probability and Statistics']",Medium
daily-temperatures,"['Array', 'Stack', 'Monotonic Stack']",Medium
split-array-into-fibonacci-sequence,"['String', 'Backtracking']",Medium
minimum-changes-to-make-alternating-binary-string,['String'],Easy
number-of-subarrays-that-match-a-pattern-i,"['Array', 'Rolling Hash', 'String Matching', 'Hash Function']",Medium
race-car,['Dynamic Programming'],Hard
complex-number-multiplication,"['Math', 'String', 'Simulation']",Medium
bag-of-tokens,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Medium
add-to-array-form-of-integer,"['Array', 'Math']",Easy
minimum-moves-to-equal-array-elements-ii,"['Array', 'Math', 'Sorting']",Medium
finding-mk-average,"['Design', 'Queue', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",Hard
android-unlock-patterns,"['Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
maximum-or,"['Array', 'Greedy', 'Bit Manipulation', 'Prefix Sum']",Medium
minimize-deviation-in-array,"['Array', 'Greedy', 'Heap (Priority Queue)', 'Ordered Set']",Hard
print-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
maximum-width-ramp,"['Array', 'Stack', 'Monotonic Stack']",Medium
string-matching-in-an-array,"['Array', 'String', 'String Matching']",Easy
validate-binary-tree-nodes,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Binary Tree']",Medium
array-partition-i,[],N/A
divide-players-into-teams-of-equal-skill,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",Medium
running-sum-of-1d-array,"['Array', 'Prefix Sum']",Easy
least-operators-to-express-number,"['Math', 'Dynamic Programming', 'Memoization']",Hard
split-with-minimum-sum,"['Math', 'Greedy', 'Sorting']",Easy
contiguous-array,"['Array', 'Hash Table', 'Prefix Sum']",Medium
count-subarrays-where-max-element-appears-at-least-k-times,"['Array', 'Sliding Window']",Medium
score-after-flipping-matrix,"['Array', 'Greedy', 'Bit Manipulation', 'Matrix']",Medium
split-array-with-equal-sum,"['Array', 'Hash Table', 'Prefix Sum']",Hard
insert-delete-getrandom-o1,"['Array', 'Hash Table', 'Math', 'Design', 'Randomized']",Medium
the-most-similar-path-in-a-graph,"['Dynamic Programming', 'Graph']",Hard
count-good-triplets-in-an-array,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Hard
detonate-the-maximum-bombs,"['Array', 'Math', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Geometry']",Medium
count-the-hidden-sequences,"['Array', 'Prefix Sum']",Medium
selling-pieces-of-wood,"['Array', 'Dynamic Programming', 'Memoization']",Hard
circular-sentence,['String'],Easy
number-of-digit-one,"['Math', 'Dynamic Programming', 'Recursion']",Hard
find-words-that-can-be-formed-by-characters,"['Array', 'Hash Table', 'String']",Easy
grumpy-bookstore-owner,"['Array', 'Sliding Window']",Medium
friend-circles,[],N/A
check-if-it-is-a-straight-line,"['Array', 'Math', 'Geometry']",Easy
word-break-ii,"['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Backtracking', 'Trie', 'Memoization']",Hard
subarray-with-elements-greater-than-varying-threshold,"['Array', 'Stack', 'Union Find', 'Monotonic Stack']",Hard
merge-operations-to-turn-array-into-a-palindrome,"['Array', 'Two Pointers', 'Greedy']",Medium
minimum-operations-to-make-a-uni-value-grid,"['Array', 'Math', 'Sorting', 'Matrix']",Medium
sliding-puzzle,"['Array', 'Breadth-First Search', 'Matrix']",Hard
verify-preorder-sequence-in-binary-search-tree,"['Array', 'Stack', 'Tree', 'Binary Search Tree', 'Recursion', 'Monotonic Stack', 'Binary Tree']",Medium
find-the-longest-valid-obstacle-course-at-each-position,"['Array', 'Binary Search', 'Binary Indexed Tree']",Hard
find-champion-i,"['Array', 'Matrix']",Easy
convert-sorted-list-to-binary-search-tree,"['Linked List', 'Divide and Conquer', 'Tree', 'Binary Search Tree', 'Binary Tree']",Medium
jump-game-v,"['Array', 'Dynamic Programming', 'Sorting']",Hard
find-the-distance-value-between-two-arrays,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Easy
lexicographically-smallest-palindrome,"['Two Pointers', 'String', 'Greedy']",Easy
maximum-difference-between-node-and-ancestor,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
merge-strings-alternately,"['Two Pointers', 'String']",Easy
word-search-ii,"['Array', 'String', 'Backtracking', 'Trie', 'Matrix']",Hard
design-file-system,"['Hash Table', 'String', 'Design', 'Trie']",Medium
generate-random-point-in-a-circle,"['Math', 'Geometry', 'Rejection Sampling', 'Randomized']",Medium
goal-parser-interpretation,['String'],Easy
minimum-area-rectangle-ii,"['Array', 'Math', 'Geometry']",Medium
exclusive-time-of-functions,"['Array', 'Stack']",Medium
unique-morse-code-words,"['Array', 'Hash Table', 'String']",Easy
minimum-absolute-difference,"['Array', 'Sorting']",Easy
find-eventual-safe-states,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Medium
length-of-the-longest-alphabetical-continuous-substring,['String'],Medium
consecutive-characters,['String'],Easy
modify-graph-edge-weights,"['Graph', 'Heap (Priority Queue)', 'Shortest Path']",Hard
construct-the-rectangle,['Math'],Easy
sum-of-subarray-minimums,"['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",Medium
minDepth,[],N/A
sum-of-square-numbers,"['Math', 'Two Pointers', 'Binary Search']",Medium
remove-colored-pieces-if-both-neighbors-are-the-same-color,"['Math', 'String', 'Greedy', 'Game Theory']",Medium
divide-nodes-into-the-maximum-number-of-groups,"['Breadth-First Search', 'Union Find', 'Graph']",Hard
maximum-xor-with-an-element-from-array,"['Array', 'Bit Manipulation', 'Trie']",Hard
longest-nice-substring,"['Hash Table', 'String', 'Divide and Conquer', 'Bit Manipulation', 'Sliding Window']",Easy
all-paths-from-source-to-target,"['Backtracking', 'Depth-First Search', 'Breadth-First Search', 'Graph']",Medium
strictly-palindromic-number,"['Math', 'Two Pointers', 'Brainteaser']",Medium
implement-queue-using-stacks,"['Stack', 'Design', 'Queue']",Easy
kth-smallest-amount-with-single-denomination-combination,"['Array', 'Math', 'Binary Search', 'Bit Manipulation', 'Combinatorics', 'Number Theory']",Hard
non-decreasing-array,['Array'],Medium
the-earliest-moment-when-everyone-become-friends,"['Array', 'Union Find', 'Sorting']",Medium
parsing-a-boolean-expression,"['String', 'Stack', 'Recursion']",Hard
smallest-number-with-given-digit-product,"['Math', 'Greedy']",Medium
01-matrix,"['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",Medium
probability-of-a-two-boxes-having-the-same-number-of-distinct-balls,"['Array', 'Math', 'Dynamic Programming', 'Backtracking', 'Combinatorics', 'Probability and Statistics']",Hard
remove-outermost-parentheses,"['String', 'Stack']",Easy
reverse-only-letters,"['Two Pointers', 'String']",Easy
palindrome-pairs,"['Array', 'Hash Table', 'String', 'Trie']",Hard
design-movie-rental-system,"['Array', 'Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",Hard
faulty-sensor,"['Array', 'Two Pointers']",Easy
maximum-length-of-repeated-subarray,"['Array', 'Binary Search', 'Dynamic Programming', 'Sliding Window', 'Rolling Hash', 'Hash Function']",Medium
generate-parentheses,"['String', 'Dynamic Programming', 'Backtracking']",Medium
longest-alternating-subarray,"['Array', 'Enumeration']",Easy
search-in-a-sorted-array-of-unknown-size,"['Array', 'Binary Search', 'Interactive']",Medium
count-numbers-with-unique-digits-ii,"['Hash Table', 'Math', 'Dynamic Programming']",Easy
linked-list-frequency,"['Hash Table', 'Linked List', 'Counting']",Easy
solve-the-equation,"['Math', 'String', 'Simulation']",Medium
crawler-log-folder,"['Array', 'String', 'Stack']",Easy
number-of-unique-categories,"['Union Find', 'Interactive', 'Counting']",Medium
maximum-hamming-distances,"['Array', 'Bit Manipulation', 'Breadth-First Search']",Hard
bitwise-and-of-numbers-range,['Bit Manipulation'],Medium
minesweeper,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Medium
lexicographically-smallest-beautiful-string,"['String', 'Greedy']",Hard
minimize-manhattan-distances,"['Array', 'Math', 'Geometry', 'Sorting', 'Ordered Set']",Hard
smallest-number-in-infinite-set,"['Hash Table', 'Design', 'Heap (Priority Queue)']",Medium
jump-game-ix,[],N/A
latest-time-by-replacing-hidden-digits,"['String', 'Greedy']",Easy
coloring-a-border,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Medium
check-if-two-string-arrays-are-equivalent,"['Array', 'String']",Easy
encode-number,"['Math', 'String', 'Bit Manipulation']",Medium
find-largest-value-in-each-tree-row,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
tuple-with-same-product,"['Array', 'Hash Table', 'Counting']",Medium
palindrome-rearrangement-queries,"['Hash Table', 'String', 'Prefix Sum']",Hard
minimum-score-triangulation-of-polygon,"['Array', 'Dynamic Programming']",Medium
xor-queries-of-a-subarray,"['Array', 'Bit Manipulation', 'Prefix Sum']",Medium
check-if-numbers-are-ascending-in-a-sentence,['String'],Easy
find-duplicate-file-in-system,"['Array', 'Hash Table', 'String']",Medium
largest-triangle-area,"['Array', 'Math', 'Geometry']",Easy
lowest-common-ancestor-of-a-binary-search-tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
minimize-or-of-remaining-elements-using-operations,"['Array', 'Greedy', 'Bit Manipulation']",Hard
put-boxes-into-the-warehouse-i,"['Array', 'Greedy', 'Sorting']",Medium
binary-search-tree-iterator-ii,"['Stack', 'Tree', 'Design', 'Binary Search Tree', 'Binary Tree', 'Iterator']",Medium
single-number-iii,"['Array', 'Bit Manipulation']",Medium
make-number-of-distinct-characters-equal,"['Hash Table', 'String', 'Counting']",Medium
find-good-days-to-rob-the-bank,"['Array', 'Dynamic Programming', 'Prefix Sum']",Medium
kth-smallest-number-in-multiplication-table,"['Math', 'Binary Search']",Hard
magical-string,"['Two Pointers', 'String']",Medium
number-of-same-end-substrings,"['Array', 'Hash Table', 'String', 'Counting', 'Prefix Sum']",Medium
compare-version-numbers,"['Two Pointers', 'String']",Medium
buddy-strings,"['Hash Table', 'String']",Easy
minimum-number-of-operations-to-make-x-and-y-equal,"['Dynamic Programming', 'Breadth-First Search', 'Memoization']",Medium
prison-cells-after-n-days,"['Array', 'Hash Table', 'Math', 'Bit Manipulation']",Medium
find-the-k-th-lucky-number,"['Math', 'String', 'Bit Manipulation']",Medium
best-time-to-buy-and-sell-stock-ii,"['Array', 'Dynamic Programming', 'Greedy']",Medium
bricks-falling-when-hit,"['Array', 'Union Find', 'Matrix']",Hard
maximum-number-that-makes-result-of-bitwise-and-zero,"['String', 'Greedy', 'Sorting']",Medium
maximum-number-of-words-found-in-sentences,"['Array', 'String']",Easy
left-and-right-sum-differences,"['Array', 'Prefix Sum']",Easy
valid-palindrome,"['Two Pointers', 'String']",Easy
count-negative-numbers-in-a-sorted-matrix,"['Array', 'Binary Search', 'Matrix']",Easy
pour-water,"['Array', 'Simulation']",Medium
sort-array-by-moving-items-to-empty-space,"['Array', 'Greedy', 'Sorting']",Hard
path-sum-iv,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
total-hamming-distance,"['Array', 'Math', 'Bit Manipulation']",Medium
binary-tree-longest-consecutive-sequence-ii,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
implement-trie-prefix-tree,"['Hash Table', 'String', 'Design', 'Trie']",Medium
two-city-scheduling,"['Array', 'Greedy', 'Sorting']",Medium
minimum-deletions-to-make-string-balanced,"['String', 'Dynamic Programming', 'Stack']",Medium
the-kth-factor-of-n,"['Math', 'Number Theory']",Medium
sort-items-by-groups-respecting-dependencies,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Hard
apply-operations-to-make-string-empty,"['Array', 'Hash Table', 'Sorting', 'Counting']",Medium
maximum-split-of-positive-even-integers,"['Math', 'Backtracking', 'Greedy']",Medium
maximum-number-of-balls-in-a-box,"['Hash Table', 'Math', 'Counting']",Easy
sum-of-digits-in-the-minimum-number,"['Array', 'Math']",Easy
count-good-triplets,"['Array', 'Enumeration']",Easy
best-position-for-a-service-centre,"['Math', 'Geometry', 'Randomized']",Hard
stone-game-vi,"['Array', 'Math', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Game Theory']",Medium
three-equal-parts,"['Array', 'Math']",Hard
largest-number,"['Array', 'String', 'Greedy', 'Sorting']",Medium
guess-number-higher-or-lower,"['Binary Search', 'Interactive']",Easy
widest-vertical-area-between-two-points-containing-no-points,"['Array', 'Sorting']",Easy
sort-transformed-array,"['Array', 'Math', 'Two Pointers', 'Sorting']",Medium
tallest-billboard,"['Array', 'Dynamic Programming']",Hard
minimum-garden-perimeter-to-collect-enough-apples,"['Math', 'Binary Search']",Medium
merge-similar-items,"['Array', 'Hash Table', 'Sorting', 'Ordered Set']",Easy
k-items-with-the-maximum-sum,"['Math', 'Greedy']",Easy
minimum-white-tiles-after-covering-with-carpets,"['String', 'Dynamic Programming', 'Prefix Sum']",Hard
minimum-difference-in-sums-after-removal-of-elements,"['Array', 'Dynamic Programming', 'Heap (Priority Queue)']",Hard
longest-continuous-increasing-subsequence,['Array'],Easy
maximum-count-of-positive-integer-and-negative-integer,"['Array', 'Binary Search', 'Counting']",Easy
find-right-interval,"['Array', 'Binary Search', 'Sorting']",Medium
maximum-score-after-applying-operations-on-a-tree,"['Dynamic Programming', 'Tree', 'Depth-First Search']",Medium
output-contest-matches,"['String', 'Recursion', 'Simulation']",Medium
check-if-array-is-good,"['Array', 'Hash Table', 'Sorting']",Easy
isValidBST2,[],N/A
longest-arithmetic-sequence,[],N/A
sum-of-numbers-with-units-digit-k,"['Math', 'Dynamic Programming', 'Greedy', 'Enumeration']",Medium
design-in-memory-file-system,"['Hash Table', 'String', 'Design', 'Trie']",Hard
path-with-maximum-probability,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
maximum-units-on-a-truck,"['Array', 'Greedy', 'Sorting']",Easy
most-frequent-prime,"['Array', 'Hash Table', 'Math', 'Matrix', 'Counting', 'Enumeration', 'Number Theory']",Medium
maximum-number-of-non-overlapping-subarrays-with-sum-equals-target,"['Array', 'Hash Table', 'Greedy', 'Prefix Sum']",Medium
count-number-of-nice-subarrays,"['Array', 'Hash Table', 'Math', 'Sliding Window']",Medium
power-of-four,"['Math', 'Bit Manipulation', 'Recursion']",Easy
design-phone-directory,"['Array', 'Hash Table', 'Linked List', 'Design', 'Queue']",Medium
binary-tree-maximum-path-sum,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",Hard
sort-an-array,"['Array', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Merge Sort', 'Bucket Sort', 'Radix Sort', 'Counting Sort']",Medium
evaluate-boolean-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Easy
word-ladder,"['Hash Table', 'String', 'Breadth-First Search']",Hard
count-nice-pairs-in-an-array,"['Array', 'Hash Table', 'Math', 'Counting']",Medium
random-point-in-non-overlapping-rectangles,"['Array', 'Math', 'Binary Search', 'Reservoir Sampling', 'Prefix Sum', 'Ordered Set', 'Randomized']",Medium
fraction-to-recurring-decimal,"['Hash Table', 'Math', 'String']",Medium
count-words-obtained-after-adding-a-letter,"['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Sorting']",Medium
number-of-distinct-islands-ii,"['Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Hash Function']",Hard
even-odd-tree,"['Tree', 'Breadth-First Search', 'Binary Tree']",Medium
largest-magic-square,"['Array', 'Matrix', 'Prefix Sum']",Medium
number-of-beautiful-integers-in-the-range,"['Math', 'Dynamic Programming']",Hard
maximum-sum-of-an-hourglass,"['Array', 'Matrix', 'Prefix Sum']",Medium
3sum-closest,"['Array', 'Two Pointers', 'Sorting']",Medium
closest-fair-integer,"['Math', 'Enumeration']",Medium
replace-elements-with-greatest-element-on-right-side,['Array'],Easy
reverse-string,"['Two Pointers', 'String']",Easy
count-stepping-numbers-in-range,"['String', 'Dynamic Programming']",Hard
swapping-nodes-in-a-linked-list,"['Linked List', 'Two Pointers']",Medium
number-of-ways-to-build-house-of-cards,"['Math', 'Dynamic Programming']",Medium
magnetic-force-between-two-balls,"['Array', 'Binary Search', 'Sorting']",Medium
count-fertile-pyramids-in-a-land,"['Array', 'Dynamic Programming', 'Matrix']",Hard
the-k-strongest-values-in-an-array,"['Array', 'Two Pointers', 'Sorting']",Medium
last-moment-before-all-ants-fall-out-of-a-plank,"['Array', 'Brainteaser', 'Simulation']",Medium
sum-of-beauty-of-all-substrings,"['Hash Table', 'String', 'Counting']",Medium
count-complete-tree-nodes,"['Binary Search', 'Bit Manipulation', 'Tree', 'Binary Tree']",Easy
design-skiplist,"['Linked List', 'Design']",Hard
find-palindrome-with-fixed-length,"['Array', 'Math']",Medium
ones-and-zeroes,"['Array', 'String', 'Dynamic Programming']",Medium
frequency-tracker,"['Hash Table', 'Design']",Medium
powerful-integers,"['Hash Table', 'Math', 'Enumeration']",Medium
find-players-with-zero-or-one-losses,"['Array', 'Hash Table', 'Sorting', 'Counting']",Medium
cutting-ribbons,"['Array', 'Binary Search']",Medium
hexspeak,"['Math', 'String']",Easy
minimize-hamming-distance-after-swap-operations,"['Array', 'Depth-First Search', 'Union Find']",Medium
check-if-bitwise-or-has-trailing-zeros,"['Array', 'Bit Manipulation']",Easy
earliest-possible-day-of-full-bloom,"['Array', 'Greedy', 'Sorting']",Hard
single-element-in-a-sorted-array,"['Array', 'Binary Search']",Medium
partition-array-into-two-arrays-to-minimize-sum-difference,"['Array', 'Two Pointers', 'Binary Search', 'Dynamic Programming', 'Bit Manipulation', 'Ordered Set', 'Bitmask']",Hard
count-of-sub-multisets-with-bounded-sum,"['Array', 'Hash Table', 'Dynamic Programming', 'Sliding Window']",Hard
word-search,"['Array', 'String', 'Backtracking', 'Matrix']",Medium
integer-to-roman,"['Hash Table', 'Math', 'String']",Medium
maximum-number-of-removal-queries-that-can-be-processed-i,"['Array', 'Dynamic Programming']",Hard
find-the-k-sum-of-an-array,"['Array', 'Sorting', 'Heap (Priority Queue)']",Hard
zigzag-conversion,['String'],Medium
count-number-of-possible-root-nodes,"['Hash Table', 'Dynamic Programming', 'Tree', 'Depth-First Search']",Hard
number-of-subarrays-with-bounded-maximum,"['Array', 'Two Pointers']",Medium
self-dividing-numbers,['Math'],Easy
change-minimum-characters-to-satisfy-one-of-three-conditions,"['Hash Table', 'String', 'Counting', 'Prefix Sum']",Medium
distribute-repeating-integers,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Hard
minimum-ascii-delete-sum-for-two-strings,"['String', 'Dynamic Programming']",Medium
minimum-total-space-wasted-with-k-resizing-operations,"['Array', 'Dynamic Programming']",Medium
keep-multiplying-found-values-by-two,"['Array', 'Hash Table', 'Sorting', 'Simulation']",Easy
check-if-word-can-be-placed-in-crossword,"['Array', 'Matrix', 'Enumeration']",Medium
predict-the-winner,"['Array', 'Math', 'Dynamic Programming', 'Recursion', 'Game Theory']",Medium
perfect-squares,"['Math', 'Dynamic Programming', 'Breadth-First Search']",Medium
number-of-subarrays-that-match-a-pattern-ii,"['Array', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
brightest-position-on-street,"['Array', 'Prefix Sum', 'Ordered Set']",Medium
count-substrings-without-repeating-character,"['Hash Table', 'String', 'Sliding Window']",Medium
minimize-length-of-array-using-operations,"['Array', 'Math', 'Greedy', 'Number Theory']",Medium
count-prefix-and-suffix-pairs-ii,"['Array', 'String', 'Trie', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
median-of-two-sorted-arrays,"['Array', 'Binary Search', 'Divide and Conquer']",Hard
parallel-courses-ii,"['Dynamic Programming', 'Bit Manipulation', 'Graph', 'Bitmask']",Hard
minimum-number-of-buckets-required-to-collect-rainwater-from-houses,[],N/A
minimum-operations-to-exceed-threshold-value-i,['Array'],Easy
evaluate-the-bracket-pairs-of-a-string,"['Array', 'Hash Table', 'String']",Medium
minimum-number-of-operations-to-make-array-empty,"['Array', 'Hash Table', 'Greedy', 'Counting']",Medium
count-anagrams,"['Hash Table', 'Math', 'String', 'Combinatorics', 'Counting']",Hard
number-of-ways-to-separate-numbers,"['String', 'Dynamic Programming', 'Suffix Array']",Hard
split-array-largest-sum,"['Array', 'Binary Search', 'Dynamic Programming', 'Greedy', 'Prefix Sum']",Hard
construct-binary-tree-from-preorder-and-postorder-traversal,"['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",Medium
partition-string-into-minimum-beautiful-substrings,"['Hash Table', 'String', 'Dynamic Programming', 'Backtracking']",Medium
sender-with-largest-word-count,"['Array', 'Hash Table', 'String', 'Counting']",Medium
tiling-a-rectangle-with-the-fewest-squares,['Backtracking'],Hard
stock-price-fluctuation,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",Medium
find-in-mountain-array,"['Array', 'Binary Search', 'Interactive']",Hard
implement-strstr,[],N/A
split-the-array,"['Array', 'Hash Table', 'Counting']",Easy
maximize-distance-to-closest-person,['Array'],Medium
find-peak-element,"['Array', 'Binary Search']",Medium
closest-binary-search-tree-value,"['Binary Search', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Easy
maximum-product-of-word-lengths,"['Array', 'String', 'Bit Manipulation']",Medium
longest-strictly-increasing-or-strictly-decreasing-subarray,['Array'],Easy
binary-tree-vertical-order-traversal,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Sorting', 'Binary Tree']",Medium
number-complement,['Bit Manipulation'],Easy
remove-9,['Math'],Hard
count-integers-with-even-digit-sum,"['Math', 'Simulation']",Easy
bulb-switcher-iv,[],N/A
minimum-number-of-people-to-teach,"['Array', 'Hash Table', 'Greedy']",Medium
split-two-strings-to-make-palindrome,"['Two Pointers', 'String']",Medium
the-number-of-full-rounds-you-have-played,"['Math', 'String']",Medium
permutation-in-string,"['Hash Table', 'Two Pointers', 'String', 'Sliding Window']",Medium
sum-of-prefix-scores-of-strings,"['Array', 'String', 'Trie', 'Counting']",Hard
path-with-maximum-minimum-value,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",Medium
compare-strings-by-frequency-of-the-smallest-character,"['Array', 'Hash Table', 'String', 'Binary Search', 'Sorting']",Medium
longest-common-suffix-queries,"['Array', 'String', 'Trie']",Hard
find-the-punishment-number-of-an-integer,"['Math', 'Backtracking']",Medium
throne-inheritance,"['Hash Table', 'Tree', 'Depth-First Search', 'Design']",Medium
dinner-plate-stacks,"['Hash Table', 'Stack', 'Design', 'Heap (Priority Queue)']",Hard
single-number-ii,"['Array', 'Bit Manipulation']",Medium
recover-a-tree-from-preorder-traversal,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",Hard
k-radius-subarray-averages,"['Array', 'Sliding Window']",Medium
remove-digit-from-number-to-maximize-result,"['String', 'Greedy', 'Enumeration']",Easy
distinct-echo-substrings,"['String', 'Trie', 'Rolling Hash', 'Hash Function']",Hard
guess-number-higher-or-lower-ii,"['Math', 'Dynamic Programming', 'Game Theory']",Medium
words-within-two-edits-of-dictionary,"['Array', 'String']",Medium
rearrange-array-elements-by-sign,"['Array', 'Two Pointers', 'Simulation']",Medium
minimum-space-wasted-from-packaging,"['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",Hard
two-sum-iii-data-structure-design,"['Array', 'Hash Table', 'Two Pointers', 'Design', 'Data Stream']",Easy
design-a-stack-with-increment-operation,"['Array', 'Stack', 'Design']",Medium
how-many-numbers-are-smaller-than-the-current-number,"['Array', 'Hash Table', 'Sorting', 'Counting']",Easy
jump-game-iv,"['Array', 'Hash Table', 'Breadth-First Search']",Hard
find-the-sum-of-subsequence-powers,"['Array', 'Dynamic Programming', 'Sorting']",Hard
shortest-word-distance,"['Array', 'String']",Easy
number-of-visible-people-in-a-queue,"['Array', 'Stack', 'Monotonic Stack']",Hard
walking-robot-simulation,"['Array', 'Hash Table', 'Simulation']",Medium
replace-all-s-to-avoid-consecutive-repeating-characters,['String'],Easy
number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold,"['Array', 'Sliding Window']",Medium
minimum-swaps-to-group-all-1s-together,"['Array', 'Sliding Window']",Medium
flatten-a-multilevel-doubly-linked-list,"['Linked List', 'Depth-First Search', 'Doubly-Linked List']",Medium
find-k-length-substrings-with-no-repeated-characters,"['Hash Table', 'String', 'Sliding Window']",Medium
score-of-a-string,['String'],Easy
find-the-median-of-the-uniqueness-array,"['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",Hard
divide-two-integers,"['Math', 'Bit Manipulation']",Medium
minimum-insertions-to-balance-a-parentheses-string,"['String', 'Stack', 'Greedy']",Medium
delete-n-nodes-after-m-nodes-of-a-linked-list,['Linked List'],Easy
island-perimeter,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Easy
as-far-from-land-as-possible,"['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",Medium
design-circular-deque,"['Array', 'Linked List', 'Design', 'Queue']",Medium
fair-distribution-of-cookies,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
count-binary-substrings,"['Two Pointers', 'String']",Easy
find-closest-node-to-given-two-nodes,"['Depth-First Search', 'Graph']",Medium
maximum-depth-of-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
minimum-operations-to-form-subsequence-with-target-sum,"['Array', 'Greedy', 'Bit Manipulation']",Hard
minimum-time-difference,"['Array', 'Math', 'String', 'Sorting']",Medium
number-of-unequal-triplets-in-array,"['Array', 'Hash Table', 'Sorting']",Easy
2-keys-keyboard,"['Math', 'Dynamic Programming']",Medium
beautiful-towers-ii,"['Array', 'Stack', 'Monotonic Stack']",Medium
k-empty-slots,"['Array', 'Binary Indexed Tree', 'Sliding Window', 'Ordered Set']",Hard
final-prices-with-a-special-discount-in-a-shop,"['Array', 'Stack', 'Monotonic Stack']",Easy
string-transforms-into-another-string,"['Hash Table', 'String']",Hard
maximum-product-of-two-elements-in-an-array,"['Array', 'Sorting', 'Heap (Priority Queue)']",Easy
maximum-repeating-substring,"['String', 'Dynamic Programming', 'String Matching']",Easy
sum-game,"['Math', 'String', 'Greedy', 'Game Theory']",Medium
find-valid-matrix-given-row-and-column-sums,"['Array', 'Greedy', 'Matrix']",Medium
rank-transform-of-an-array,"['Array', 'Hash Table', 'Sorting']",Easy
movement-of-robots,"['Array', 'Brainteaser', 'Sorting', 'Prefix Sum']",Medium
reconstruct-original-digits-from-english,"['Hash Table', 'Math', 'String']",Medium
boundary-of-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
happy-number,"['Hash Table', 'Math', 'Two Pointers']",Easy
split-strings-by-separator,"['Array', 'String']",Easy
longest-increasing-subsequence,"['Array', 'Binary Search', 'Dynamic Programming']",Medium
group-the-people-given-the-group-size-they-belong-to,"['Array', 'Hash Table']",Medium
making-file-names-unique,"['Array', 'Hash Table', 'String']",Medium
recover-the-original-array,"['Array', 'Hash Table', 'Sorting', 'Enumeration']",Hard
convert-bst-to-greater-tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
k-th-symbol-in-grammar,"['Math', 'Bit Manipulation', 'Recursion']",Medium
subarray-sums-divisible-by-k,"['Array', 'Hash Table', 'Prefix Sum']",Medium
substrings-that-begin-and-end-with-the-same-letter,"['Hash Table', 'Math', 'String', 'Counting', 'Prefix Sum']",Medium
add-strings,"['Math', 'String', 'Simulation']",Easy
find-the-maximum-sum-of-node-values,"['Array', 'Dynamic Programming', 'Greedy', 'Bit Manipulation', 'Tree', 'Sorting']",Hard
longest-word-with-all-prefixes,"['Depth-First Search', 'Trie']",Medium
number-of-pairs-of-interchangeable-rectangles,"['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",Medium
largest-palindromic-number,"['Hash Table', 'String', 'Greedy']",Medium
replace-the-substring-for-balanced-string,"['String', 'Sliding Window']",Medium
count-primes,"['Array', 'Math', 'Enumeration', 'Number Theory']",Medium
removing-minimum-and-maximum-from-array,"['Array', 'Greedy']",Medium
longest-path-with-different-adjacent-characters,"['Array', 'String', 'Tree', 'Depth-First Search', 'Graph', 'Topological Sort']",Hard
car-pooling,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Simulation', 'Prefix Sum']",Medium
interval-list-intersections,"['Array', 'Two Pointers']",Medium
create-binary-tree-from-descriptions,"['Array', 'Hash Table', 'Tree', 'Binary Tree']",Medium
longest-arithmetic-subsequence-of-given-difference,"['Array', 'Hash Table', 'Dynamic Programming']",Medium
contains-duplicate,"['Array', 'Hash Table', 'Sorting']",Easy
decode-ways-ii,"['String', 'Dynamic Programming']",Hard
encode-and-decode-strings,"['Array', 'String', 'Design']",Medium
count-ways-to-build-rooms-in-an-ant-colony,"['Math', 'Dynamic Programming', 'Tree', 'Graph', 'Topological Sort', 'Combinatorics']",Hard
largest-sum-of-averages,"['Array', 'Dynamic Programming', 'Prefix Sum']",Medium
maximum-erasure-value,"['Array', 'Hash Table', 'Sliding Window']",Medium
minimum-operations-to-exceed-threshold-value-ii,"['Array', 'Heap (Priority Queue)', 'Simulation']",Medium
palindromePartition,[],N/A
meeting-rooms,"['Array', 'Sorting']",Easy
find-consecutive-integers-from-a-data-stream,"['Hash Table', 'Design', 'Queue', 'Counting', 'Data Stream']",Medium
find-beautiful-indices-in-the-given-array-i,"['Two Pointers', 'String', 'Binary Search', 'Rolling Hash', 'String Matching', 'Hash Function']",Medium
powx-n,"['Math', 'Recursion']",Medium
maximum-length-substring-with-two-occurrences,"['Hash Table', 'String', 'Sliding Window']",Easy
longest-word-in-dictionary-through-deleting,"['Array', 'Two Pointers', 'String', 'Sorting']",Medium
brace-expansion,"['String', 'Backtracking', 'Breadth-First Search']",Medium
diameter-of-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Easy
continuous-subarrays,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Ordered Set', 'Monotonic Queue']",Medium
range-sum-query-immutable,"['Array', 'Design', 'Prefix Sum']",Easy
find-center-of-star-graph,['Graph'],Easy
find-all-possible-stable-binary-arrays-ii,"['Dynamic Programming', 'Prefix Sum']",Hard
3sum-with-multiplicity,"['Array', 'Hash Table', 'Two Pointers', 'Sorting', 'Counting']",Medium
maximum-balanced-subsequence-sum,"['Array', 'Binary Search', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",Hard
can-i-win,"['Math', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Game Theory', 'Bitmask']",Medium
number-of-smooth-descent-periods-of-a-stock,"['Array', 'Math', 'Dynamic Programming']",Medium
count-pairs-of-connectable-servers-in-a-weighted-tree-network,"['Array', 'Tree', 'Depth-First Search']",Medium
string-without-aaa-or-bbb,"['String', 'Greedy']",Medium
root-equals-sum-of-children,"['Tree', 'Binary Tree']",Easy
check-if-there-is-a-valid-partition-for-the-array,"['Array', 'Dynamic Programming']",Medium
average-value-of-even-numbers-that-are-divisible-by-three,"['Array', 'Math']",Easy
find-the-minimum-cost-array-permutation,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
find-original-array-from-doubled-array,"['Array', 'Hash Table', 'Greedy', 'Sorting']",Medium
web-crawler-multithreaded,"['Depth-First Search', 'Breadth-First Search', 'Concurrency']",Medium
find-the-k-beauty-of-a-number,"['Math', 'String', 'Sliding Window']",Easy
the-skyline-problem,"['Array', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Line Sweep', 'Heap (Priority Queue)', 'Ordered Set']",Hard
serialize-and-deserialize-binary-tree,"['String', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",Hard
unique-substrings-with-equal-digit-frequency,"['Hash Table', 'String', 'Rolling Hash', 'Counting', 'Hash Function']",Medium
rotting-oranges,"['Array', 'Breadth-First Search', 'Matrix']",Medium
count-and-say,['String'],Medium
remove-duplicate-letters,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",Medium
beautiful-array,"['Array', 'Math', 'Divide and Conquer']",Medium
pyramid-transition-matrix,"['Bit Manipulation', 'Depth-First Search', 'Breadth-First Search']",Medium
array-with-elements-not-equal-to-average-of-neighbors,"['Array', 'Greedy', 'Sorting']",Medium
calculate-amount-paid-in-taxes,"['Array', 'Simulation']",Easy
percentage-of-letter-in-string,['String'],Easy
validate-stack-sequences,"['Array', 'Stack', 'Simulation']",Medium
domino-and-tromino-tiling,['Dynamic Programming'],Medium
double-a-number-represented-as-a-linked-list,"['Linked List', 'Math', 'Stack']",Medium
count-the-number-of-square-free-subsets,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Medium
faulty-keyboard,"['String', 'Simulation']",Easy
friends-of-appropriate-ages,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
minimum-time-for-k-virus-variants-to-spread,"['Array', 'Math', 'Binary Search', 'Geometry', 'Enumeration']",Hard
satisfiability-of-equality-equations,"['Array', 'String', 'Union Find', 'Graph']",Medium
shortest-palindrome,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
subsequence-of-size-k-with-the-largest-even-sum,"['Array', 'Greedy', 'Sorting']",Medium
number-of-distinct-averages,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",Easy
unique-length-3-palindromic-subsequences,"['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",Medium
apply-discount-every-n-orders,"['Array', 'Hash Table', 'Design']",Medium
my-calendar-i,"['Binary Search', 'Design', 'Segment Tree', 'Ordered Set']",Medium
count-the-digits-that-divide-a-number,['Math'],Easy
maximize-score-after-n-operations,"['Array', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Number Theory', 'Bitmask']",Hard
substring-xor-queries,"['Array', 'Hash Table', 'String', 'Bit Manipulation']",Medium
add-one-row-to-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
largest-time-for-given-digits,"['Array', 'String', 'Enumeration']",Medium
find-nearest-point-that-has-the-same-x-or-y-coordinate,['Array'],Easy
maximum-alternating-subarray-sum,"['Array', 'Dynamic Programming']",Medium
form-smallest-number-from-two-digit-arrays,"['Array', 'Hash Table', 'Enumeration']",Easy
last-day-where-you-can-still-cross,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Hard
largest-positive-integer-that-exists-with-its-negative,"['Array', 'Hash Table', 'Two Pointers', 'Sorting']",Easy
alice-and-bob-playing-flower-game,['Math'],Medium
most-expensive-item-that-can-not-be-bought,"['Math', 'Dynamic Programming', 'Number Theory']",Medium
range-sum-query-2d-immutable,"['Array', 'Design', 'Matrix', 'Prefix Sum']",Medium
watering-plants,"['Array', 'Simulation']",Medium
find-the-number-of-ways-to-place-people-ii,"['Array', 'Math', 'Geometry', 'Sorting', 'Enumeration']",Hard
last-substring-in-lexicographical-order,"['Two Pointers', 'String']",Hard
maximum-number-of-non-overlapping-substrings,"['String', 'Greedy']",Hard
maximum-sum-circular-subarray,"['Array', 'Divide and Conquer', 'Dynamic Programming', 'Queue', 'Monotonic Queue']",Medium
number-of-valid-move-combinations-on-chessboard,"['Array', 'String', 'Backtracking', 'Simulation']",Hard
sorting-the-sentence,"['String', 'Sorting']",Easy
richest-customer-wealth,"['Array', 'Matrix']",Easy
binary-subarrays-with-sum,"['Array', 'Hash Table', 'Sliding Window', 'Prefix Sum']",Medium
lowest-common-ancestor-of-deepest-leaves,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
ugly-number-iii,"['Math', 'Binary Search', 'Combinatorics', 'Number Theory']",Medium
minimum-time-to-eat-all-grains,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Hard
find-substring-with-given-hash-value,"['String', 'Sliding Window', 'Rolling Hash', 'Hash Function']",Hard
find-a-value-of-a-mysterious-function-closest-to-target,"['Array', 'Binary Search', 'Bit Manipulation', 'Segment Tree']",Hard
odd-even-jump,"['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack', 'Ordered Set']",Hard
sequential-digits,['Enumeration'],Medium
minimum-insertion-steps-to-make-a-string-palindrome,"['String', 'Dynamic Programming']",Hard
last-stone-weight,"['Array', 'Heap (Priority Queue)']",Easy
make-string-a-subsequence-using-cyclic-increments,"['Two Pointers', 'String']",Medium
maximum-sum-obtained-of-any-permutation,"['Array', 'Greedy', 'Sorting', 'Prefix Sum']",Medium
maximum-ice-cream-bars,"['Array', 'Greedy', 'Sorting']",Medium
minimum-score-by-changing-two-elements,"['Array', 'Greedy', 'Sorting']",Medium
best-meeting-point,"['Array', 'Math', 'Sorting', 'Matrix']",Hard
x-of-a-kind-in-a-deck-of-cards,"['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",Easy
count-nodes-equal-to-sum-of-descendants,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
nearest-exit-from-entrance-in-maze,"['Array', 'Breadth-First Search', 'Matrix']",Medium
minimumTotal,[],N/A
missing-element-in-sorted-array,"['Array', 'Binary Search']",Medium
connect,[],N/A
number-of-ways-to-paint-n-3-grid,['Dynamic Programming'],Hard
append-k-integers-with-minimal-sum,"['Array', 'Math', 'Greedy', 'Sorting']",Medium
design-tic-tac-toe,"['Array', 'Hash Table', 'Design', 'Matrix', 'Simulation']",Medium
find-the-score-of-all-prefixes-of-an-array,"['Array', 'Prefix Sum']",Medium
number-of-beautiful-pairs,"['Array', 'Math', 'Number Theory']",Easy
maximum-fruits-harvested-after-at-most-k-steps,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",Hard
neighboring-bitwise-xor,"['Array', 'Bit Manipulation']",Medium
coin-change,"['Array', 'Dynamic Programming', 'Breadth-First Search']",Medium
defuse-the-bomb,"['Array', 'Sliding Window']",Easy
relative-ranks,"['Array', 'Sorting', 'Heap (Priority Queue)']",Easy
maximum-number-of-eaten-apples,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
minimum-additions-to-make-valid-string,"['String', 'Dynamic Programming', 'Stack', 'Greedy']",Medium
shortest-path-in-a-grid-with-obstacles-elimination,"['Array', 'Breadth-First Search', 'Matrix']",Hard
design-memory-allocator,"['Array', 'Hash Table', 'Design', 'Simulation']",Medium
the-employee-that-worked-on-the-longest-task,['Array'],Easy
set-mismatch,"['Array', 'Hash Table', 'Bit Manipulation', 'Sorting']",Easy
valid-square,"['Math', 'Geometry']",Medium
optimal-account-balancing,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Hard
decode-xored-permutation,"['Array', 'Bit Manipulation']",Medium
stamping-the-sequence,"['String', 'Stack', 'Greedy', 'Queue']",Hard
maximum-total-importance-of-roads,"['Greedy', 'Graph', 'Sorting', 'Heap (Priority Queue)']",Medium
flatten-nested-list-iterator,"['Stack', 'Tree', 'Depth-First Search', 'Design', 'Queue', 'Iterator']",Medium
maximum-nesting-depth-of-the-parentheses,"['String', 'Stack']",Easy
minimum-number-of-vertices-to-reach-all-nodes,['Graph'],Medium
number-of-ways-to-reach-a-position-after-exactly-k-steps,"['Math', 'Dynamic Programming', 'Combinatorics']",Medium
generate-a-string-with-characters-that-have-odd-counts,['String'],Easy
count-ways-to-distribute-candies,['Dynamic Programming'],Hard
length-of-the-longest-valid-substring,"['Array', 'Hash Table', 'String', 'Sliding Window']",Hard
mean-of-array-after-removing-some-elements,"['Array', 'Sorting']",Easy
uniquePaths,[],N/A
maximum-total-beauty-of-the-gardens,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",Hard
make-three-strings-equal,['String'],Easy
missing-number,"['Array', 'Hash Table', 'Math', 'Binary Search', 'Bit Manipulation', 'Sorting']",Easy
remove-interval,['Array'],Medium
house-robber,"['Array', 'Dynamic Programming']",Medium
determine-if-a-cell-is-reachable-at-a-given-time,['Math'],Medium
split-array-with-same-average,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
k-similar-strings,"['String', 'Breadth-First Search']",Hard
split-a-string-in-balanced-strings,"['String', 'Greedy', 'Counting']",Easy
utf-8-validation,"['Array', 'Bit Manipulation']",Medium
fixed-point,"['Array', 'Binary Search']",Easy
max-dot-product-of-two-subsequences,"['Array', 'Dynamic Programming']",Hard
prime-in-diagonal,"['Array', 'Math', 'Matrix', 'Number Theory']",Easy
best-time-to-buy-and-sell-stock-with-transaction-fee,"['Array', 'Dynamic Programming', 'Greedy']",Medium
shifting-letters,"['Array', 'String', 'Prefix Sum']",Medium
divisible-and-non-divisible-sums-difference,['Math'],Easy
minimum-edge-reversals-so-every-node-is-reachable,"['Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph']",Hard
count-vowel-strings-in-ranges,"['Array', 'String', 'Prefix Sum']",Medium
count-pairs-of-nodes,"['Array', 'Two Pointers', 'Binary Search', 'Graph', 'Sorting']",Hard
count-the-number-of-incremovable-subarrays-i,"['Array', 'Two Pointers', 'Binary Search', 'Enumeration']",Easy
minimum-penalty-for-a-shop,"['String', 'Prefix Sum']",Medium
add-binary,"['Math', 'String', 'Bit Manipulation', 'Simulation']",Easy
cousins-in-binary-tree-ii,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
lowest-common-ancestor-of-a-binary-tree-iv,"['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
difference-between-ones-and-zeros-in-row-and-column,"['Array', 'Matrix', 'Simulation']",Medium
maximum-linear-stock-score,"['Array', 'Hash Table']",Medium
create-target-array-in-the-given-order,"['Array', 'Simulation']",Easy
rabbits-in-forest,"['Array', 'Hash Table', 'Math', 'Greedy']",Medium
count-unguarded-cells-in-the-grid,"['Array', 'Matrix', 'Simulation']",Medium
long-pressed-name,"['Two Pointers', 'String']",Easy
loud-and-rich,"['Array', 'Depth-First Search', 'Graph', 'Topological Sort']",Medium
similar-rgb-color,"['Math', 'String', 'Enumeration']",Easy
maximum-elegance-of-a-k-length-subsequence,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Hard
queries-on-number-of-points-inside-a-circle,"['Array', 'Math', 'Geometry']",Medium
difference-between-element-sum-and-digit-sum-of-an-array,"['Array', 'Math']",Easy
maximum-value-of-an-ordered-triplet-i,['Array'],Easy
check-if-all-as-appears-before-all-bs,['String'],Easy
subdomain-visit-count,"['Array', 'Hash Table', 'String', 'Counting']",Medium
minimum-sum-of-four-digit-number-after-splitting-digits,"['Math', 'Greedy', 'Sorting']",Easy
paint-fence,['Dynamic Programming'],Medium
exam-room,"['Design', 'Heap (Priority Queue)', 'Ordered Set']",Medium
super-egg-drop,"['Math', 'Binary Search', 'Dynamic Programming']",Hard
minimum-cuts-to-divide-a-circle,"['Math', 'Geometry']",Easy
split-the-array-to-make-coprime-products,"['Array', 'Hash Table', 'Math', 'Number Theory']",Hard
remove-one-element-to-make-the-array-strictly-increasing,['Array'],Easy
using-a-robot-to-print-the-lexicographically-smallest-string,"['Hash Table', 'String', 'Stack', 'Greedy']",Medium
kth-largest-element-in-a-stream,"['Tree', 'Design', 'Binary Search Tree', 'Heap (Priority Queue)', 'Binary Tree', 'Data Stream']",Easy
lonely-pixel-i,"['Array', 'Hash Table', 'Matrix']",Medium
find-closest-number-to-zero,['Array'],Easy
rearrange-words-in-a-sentence,"['String', 'Sorting']",Medium
wiggle-sort,"['Array', 'Greedy', 'Sorting']",Medium
find-k-pairs-with-smallest-sums,"['Array', 'Heap (Priority Queue)']",Medium
splitting-a-string-into-descending-consecutive-values,"['String', 'Backtracking']",Medium
minimum-time-to-finish-the-race,"['Array', 'Dynamic Programming']",Hard
shortest-string-that-contains-three-strings,"['String', 'Greedy', 'Enumeration']",Medium
calculate-money-in-leetcode-bank,['Math'],Easy
guess-the-majority-in-a-hidden-array,"['Array', 'Math', 'Interactive']",Medium
basic-calculator-iv,"['Hash Table', 'Math', 'String', 'Stack', 'Recursion']",Hard
number-of-unique-flavors-after-sharing-k-candies,"['Array', 'Hash Table', 'Sliding Window']",Medium
binary-search,"['Array', 'Binary Search']",Easy
divide-array-into-equal-pairs,"['Array', 'Hash Table', 'Bit Manipulation', 'Counting']",Easy
number-of-beautiful-partitions,"['String', 'Dynamic Programming']",Hard
categorize-box-according-to-criteria,['Math'],Easy
count-the-number-of-beautiful-subarrays,"['Array', 'Hash Table', 'Bit Manipulation', 'Prefix Sum']",Medium
shortest-path-in-binary-matrix,"['Array', 'Breadth-First Search', 'Matrix']",Medium
find-all-duplicates-in-an-array,"['Array', 'Hash Table']",Medium
range-product-queries-of-powers,"['Array', 'Bit Manipulation', 'Prefix Sum']",Medium
number-of-nodes-in-the-sub-tree-with-the-same-label,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Counting']",Medium
erect-the-fence,"['Array', 'Math', 'Geometry']",Hard
find-and-replace-in-string,"['Array', 'String', 'Sorting']",Medium
next-greater-node-in-linked-list,"['Array', 'Linked List', 'Stack', 'Monotonic Stack']",Medium
next-permutation,"['Array', 'Two Pointers']",Medium
adding-two-negabinary-numbers,"['Array', 'Math']",Medium
minimum-number-game,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",Easy
find-the-town-judge,"['Array', 'Hash Table', 'Graph']",Easy
longest-cycle-in-a-graph,"['Depth-First Search', 'Graph', 'Topological Sort']",Hard
expression-add-operators,"['Math', 'String', 'Backtracking']",Hard
merge-two-sorted-lists,"['Linked List', 'Recursion']",Easy
rearranging-fruits,"['Array', 'Hash Table', 'Greedy']",Hard
largest-number-at-least-twice-of-others,"['Array', 'Sorting']",Easy
basic-calculator-iii,"['Math', 'String', 'Stack', 'Recursion']",Hard
available-captures-for-rook,"['Array', 'Matrix', 'Simulation']",Easy
step-by-step-directions-from-a-binary-tree-node-to-another,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
circular-permutation-in-binary-representation,"['Math', 'Backtracking', 'Bit Manipulation']",Medium
isMatch,[],N/A
logger-rate-limiter,"['Hash Table', 'Design', 'Data Stream']",Easy
complement-of-base-10-integer,['Bit Manipulation'],Easy
delete-and-earn,"['Array', 'Hash Table', 'Dynamic Programming']",Medium
minimum-deletions-to-make-character-frequencies-unique,"['Hash Table', 'String', 'Greedy', 'Sorting']",Medium
linked-list-random-node,"['Linked List', 'Math', 'Reservoir Sampling', 'Randomized']",Medium
remove-all-ones-with-row-and-column-flips-ii,"['Array', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",Medium
maximum-score-of-spliced-array,"['Array', 'Dynamic Programming']",Hard
positions-of-large-groups,['String'],Easy
apply-operations-to-maximize-score,"['Array', 'Math', 'Stack', 'Greedy', 'Monotonic Stack', 'Number Theory']",Hard
make-k-subarray-sums-equal,"['Array', 'Math', 'Sorting', 'Number Theory']",Medium
reverse-integer,['Math'],Medium
count-odd-numbers-in-an-interval-range,['Math'],Easy
distribute-candies-among-children-ii,"['Math', 'Combinatorics', 'Enumeration']",Medium
diameter-of-n-ary-tree,"['Tree', 'Depth-First Search']",Medium
minimum-cost-to-split-an-array,"['Array', 'Hash Table', 'Dynamic Programming', 'Counting']",Hard
super-palindromes,"['Math', 'Enumeration']",Hard
chalkboard-xor-gam,[],N/A
sum-multiples,['Math'],Easy
hamming-distance,['Bit Manipulation'],Easy
pairs-of-songs-with-total-durations-divisible-by-60,"['Array', 'Hash Table', 'Counting']",Medium
minimize-maximum-pair-sum-in-array,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Medium
rearrange-string-k-distance-apart,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",Hard
minimum-window-substring,"['Hash Table', 'String', 'Sliding Window']",Hard
apply-operations-to-an-array,"['Array', 'Two Pointers', 'Simulation']",Easy
grid-illumination,"['Array', 'Hash Table']",Hard
reachable-nodes-in-subdivided-graph,"['Graph', 'Heap (Priority Queue)', 'Shortest Path']",Hard
analyze-user-website-visit-pattern,"['Array', 'Hash Table', 'Sorting']",Medium
cherry-pickup-ii,"['Array', 'Dynamic Programming', 'Matrix']",Hard
can-make-arithmetic-progression-from-sequence,"['Array', 'Sorting']",Easy
put-boxes-into-the-warehouse-ii,"['Array', 'Greedy', 'Sorting']",Medium
maxProfitII,[],N/A
freedom-trail,"['String', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search']",Hard
determine-if-two-events-have-conflict,"['Array', 'String']",Easy
find-longest-self-contained-substring,"['Hash Table', 'String', 'Binary Search', 'Prefix Sum']",Hard
minimum-distance-between-bst-nodes,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",Easy
alert-using-same-key-card-three-or-more-times-in-a-one-hour-period,"['Array', 'Hash Table', 'String', 'Sorting']",Medium
maximum-score-from-removing-stones,"['Math', 'Greedy', 'Heap (Priority Queue)']",Medium
remove-linked-list-elements,"['Linked List', 'Recursion']",Easy
minimize-rounding-error-to-meet-target,"['Array', 'Math', 'String', 'Greedy', 'Sorting']",Medium
convert-a-number-to-hexadecimal,"['Math', 'Bit Manipulation']",Easy
minimum-number-of-changes-to-make-binary-string-beautiful,['String'],Medium
capitalize-the-title,['String'],Easy
check-if-the-sentence-is-pangram,"['Hash Table', 'String']",Easy
maximum-points-after-collecting-coins-from-all-nodes,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Tree', 'Depth-First Search']",Hard
design-a-food-rating-system,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",Medium
intervals-between-identical-elements,"['Array', 'Hash Table', 'Prefix Sum']",Medium
heaters,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
decode-ways,"['String', 'Dynamic Programming']",Medium
minimum-time-to-revert-word-to-initial-state-ii,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
reduction-operations-to-make-the-array-elements-equal,"['Array', 'Sorting']",Medium
maximum-ascending-subarray-sum,['Array'],Easy
counting-elements,"['Array', 'Hash Table']",Easy
insertion-sort-list,"['Linked List', 'Sorting']",Medium
robot-bounded-in-circle,"['Math', 'String', 'Simulation']",Medium
longest-happy-prefix,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
kth-largest-sum-in-a-binary-tree,"['Tree', 'Breadth-First Search', 'Sorting', 'Binary Tree']",Medium
find-products-of-elements-of-big-array,"['Array', 'Binary Search', 'Bit Manipulation']",Hard
sum-of-distances,"['Array', 'Hash Table', 'Prefix Sum']",Medium
maximum-subtree-of-the-same-color,"['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search']",Medium
design-sql,"['Array', 'Hash Table', 'String', 'Design']",Medium
lexicographically-smallest-string-after-operations-with-constraint,"['String', 'Greedy']",Medium
minimum-operations-to-maximize-last-elements-in-arrays,"['Array', 'Enumeration']",Medium
is-graph-bipartite,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
minimum-sum-of-squared-difference,"['Array', 'Math', 'Sorting', 'Heap (Priority Queue)']",Medium
minimum-absolute-difference-queries,"['Array', 'Hash Table']",Medium
1-bit-and-2-bit-characters,['Array'],Easy
number-of-adjacent-elements-with-the-same-color,['Array'],Medium
minimum-cost-to-change-the-final-value-of-expression,"['Math', 'String', 'Dynamic Programming', 'Stack']",Hard
meeting-scheduler,"['Array', 'Two Pointers', 'Sorting']",Medium
first-completely-painted-row-or-column,"['Array', 'Hash Table', 'Matrix']",Medium
binary-tree-pruning,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
counting-bits,"['Dynamic Programming', 'Bit Manipulation']",Easy
adding-spaces-to-a-string,"['Array', 'Two Pointers', 'String', 'Simulation']",Medium
number-of-good-leaf-nodes-pairs,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
maximum-gap,"['Array', 'Sorting', 'Bucket Sort', 'Radix Sort']",Medium
semi-ordered-permutation,"['Array', 'Simulation']",Easy
push-dominoes,"['Two Pointers', 'String', 'Dynamic Programming']",Medium
count-prefix-and-suffix-pairs-i,"['Array', 'String', 'Trie', 'Rolling Hash', 'String Matching', 'Hash Function']",Easy
remove-duplicates-from-sorted-array,"['Array', 'Two Pointers']",Easy
number-of-restricted-paths-from-first-to-last-node,"['Dynamic Programming', 'Graph', 'Topological Sort', 'Heap (Priority Queue)', 'Shortest Path']",Medium
form-array-by-concatenating-subarrays-of-another-array,"['Array', 'Two Pointers', 'Greedy', 'String Matching']",Medium
maximum-number-of-people-that-can-be-caught-in-tag,"['Array', 'Greedy']",Medium
confusing-number,['Math'],Easy
sum-of-even-numbers-after-queries,"['Array', 'Simulation']",Medium
partition-to-k-equal-sum-subsets,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",Medium
maximum-of-absolute-value-expression,"['Array', 'Math']",Medium
taking-maximum-energy-from-the-mystic-dungeon,"['Array', 'Prefix Sum']",Medium
closest-nodes-queries-in-a-binary-search-tree,"['Array', 'Binary Search', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
find-the-difference,"['Hash Table', 'String', 'Bit Manipulation', 'Sorting']",Easy
preimage-size-of-factorial-zeroes-function,"['Math', 'Binary Search']",Hard
maximize-win-from-two-segments,"['Array', 'Binary Search', 'Sliding Window']",Medium
largest-odd-number-in-string,"['Math', 'String', 'Greedy']",Easy
maximum-spending-after-buying-items,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",Hard
minimum-cost-to-make-all-characters-equal,"['String', 'Dynamic Programming', 'Greedy']",Medium
minimum-number-of-operations-to-make-all-array-elements-equal-to-1,"['Array', 'Math', 'Number Theory']",Medium
check-if-word-equals-summation-of-two-words,['String'],Easy
word-subsets,"['Array', 'Hash Table', 'String']",Medium
maximum-product-subarray,"['Array', 'Dynamic Programming']",Medium
binary-search-tree-to-greater-sum-tree,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
cells-in-a-range-on-an-excel-sheet,['String'],Easy
find-the-maximum-number-of-marked-indices,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",Medium
ip-to-cidr,"['String', 'Bit Manipulation']",Medium
maximum-value-of-k-coins-from-piles,"['Array', 'Dynamic Programming', 'Prefix Sum']",Hard
campus-bikes-ii,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
sort-the-people,"['Array', 'Hash Table', 'String', 'Sorting']",Easy
alien-dictionary,"['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Hard
battleships-in-a-board,"['Array', 'Depth-First Search', 'Matrix']",Medium
minimum-absolute-difference-in-bst,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",Easy
canCompleteCircuit,[],N/A
count-pairs-with-xor-in-a-range,"['Array', 'Bit Manipulation', 'Trie']",Hard
minimum-flips-in-binary-tree-to-get-result,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",Hard
magic-squares-in-grid,"['Array', 'Hash Table', 'Math', 'Matrix']",Medium
open-the-lock,"['Array', 'Hash Table', 'String', 'Breadth-First Search']",Medium
distribute-money-to-maximum-children,"['Math', 'Greedy']",Easy
number-of-distinct-substrings-in-a-string,"['String', 'Trie', 'Rolling Hash', 'Suffix Array', 'Hash Function']",Medium
find-minimum-time-to-finish-all-jobs,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Hard
find-the-width-of-columns-of-a-grid,"['Array', 'Matrix']",Easy
maximum-font-to-fit-a-sentence-in-a-screen,"['Array', 'String', 'Binary Search', 'Interactive']",Medium
implement-magic-dictionary,"['Hash Table', 'String', 'Depth-First Search', 'Design', 'Trie']",Medium
linked-list-cycle,"['Hash Table', 'Linked List', 'Two Pointers']",Easy
peak-index-in-a-mountain-array,"['Array', 'Binary Search']",Medium
modify-the-matrix,"['Array', 'Matrix']",Easy
count-good-meals,"['Array', 'Hash Table']",Medium
optimal-partition-of-string,"['Hash Table', 'String', 'Greedy']",Medium
put-marbles-in-bags,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Hard
maximum-of-minimum-values-in-all-subarrays,"['Array', 'Stack', 'Monotonic Stack']",Medium
cyclically-rotating-a-grid,"['Array', 'Matrix', 'Simulation']",Medium
task-scheduler-ii,"['Array', 'Hash Table', 'Simulation']",Medium
maximum-number-of-books-you-can-take,"['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",Hard
maximum-number-of-darts-inside-of-a-circular-dartboard,"['Array', 'Math', 'Geometry']",Hard
find-all-good-indices,"['Array', 'Dynamic Programming', 'Prefix Sum']",Medium
single-number,"['Array', 'Bit Manipulation']",Easy
minimum-operations-to-make-the-array-k-increasing,"['Array', 'Binary Search']",Hard
prefix-and-suffix-search,"['Array', 'Hash Table', 'String', 'Design', 'Trie']",Hard
remove-vowels-from-a-string,['String'],Easy
count-prefixes-of-a-given-string,"['Array', 'String']",Easy
flower-planting-with-no-adjacent,"['Depth-First Search', 'Breadth-First Search', 'Graph']",Medium
minimum-common-value,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search']",Easy
valid-word-abbreviation,"['Two Pointers', 'String']",Easy
design-a-text-editor,"['Linked List', 'String', 'Stack', 'Design', 'Simulation', 'Doubly-Linked List']",Hard
optimize-water-distribution-in-a-village,"['Union Find', 'Graph', 'Heap (Priority Queue)', 'Minimum Spanning Tree']",Hard
string-to-integer-atoi,['String'],Medium
minimum-path-cost-in-a-hidden-grid,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Interactive']",Medium
search-in-rotated-sorted-array-ii,"['Array', 'Binary Search']",Medium
water-bottles,"['Math', 'Simulation']",Easy
distribute-elements-into-two-arrays-i,"['Array', 'Simulation']",Easy
height-of-special-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
pseudo-palindromic-paths-in-a-binary-tree,"['Bit Manipulation', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
find-winner-on-a-tic-tac-toe-game,"['Array', 'Hash Table', 'Matrix', 'Simulation']",Easy
minimizing-array-after-replacing-pairs-with-their-product,"['Array', 'Dynamic Programming', 'Greedy']",Medium
binary-prefix-divisible-by-5,"['Array', 'Bit Manipulation']",Easy
form-largest-integer-with-digits-that-add-up-to-target,"['Array', 'Dynamic Programming']",Hard
shortest-path-to-get-food,"['Array', 'Breadth-First Search', 'Matrix']",Medium
minimum-levels-to-gain-more-points,"['Array', 'Prefix Sum']",Medium
smallest-range-i,"['Array', 'Math']",Easy
number-of-possible-sets-of-closing-branches,"['Bit Manipulation', 'Graph', 'Heap (Priority Queue)', 'Enumeration', 'Shortest Path']",Hard
find-the-prefix-common-array-of-two-arrays,"['Array', 'Hash Table', 'Bit Manipulation']",Medium
check-if-point-is-reachable,"['Math', 'Number Theory']",Hard
merge-intervals,"['Array', 'Sorting']",Medium
pancake-sorting,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Medium
find-the-number-of-ways-to-place-people-i,"['Array', 'Math', 'Geometry', 'Sorting', 'Enumeration']",Medium
maximum-element-after-decreasing-and-rearranging,"['Array', 'Greedy', 'Sorting']",Medium
valid-parenthesis-string,"['String', 'Dynamic Programming', 'Stack', 'Greedy']",Medium
make-the-xor-of-all-segments-equal-to-zero,"['Array', 'Dynamic Programming', 'Bit Manipulation']",Hard
minimum-time-visiting-all-points,"['Array', 'Math', 'Geometry']",Easy
plates-between-candles,"['Array', 'String', 'Binary Search', 'Prefix Sum']",Medium
koko-eating-bananas,"['Array', 'Binary Search']",Medium
maximize-the-profit-as-the-salesman,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",Medium
check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence,"['Two Pointers', 'String', 'String Matching']",Easy
minimum-number-of-operations-to-satisfy-conditions,"['Array', 'Dynamic Programming', 'Matrix']",Medium
maximum-increasing-triplet-value,"['Array', 'Ordered Set']",Medium
checking-existence-of-edge-length-limited-paths-ii,"['Union Find', 'Graph', 'Minimum Spanning Tree']",Hard
linked-list-components,"['Array', 'Hash Table', 'Linked List']",Medium
delete-tree-nodes,"['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Medium
minimum-time-to-complete-all-tasks,"['Array', 'Binary Search', 'Stack', 'Greedy', 'Sorting']",Hard
reverse-linked-list-ii,['Linked List'],Medium
find-beautiful-indices-in-the-given-array-ii,"['Two Pointers', 'String', 'Binary Search', 'Rolling Hash', 'String Matching', 'Hash Function']",Hard
maximum-sum-of-almost-unique-subarray,"['Array', 'Hash Table', 'Sliding Window']",Medium
maximum-candies-allocated-to-k-children,"['Array', 'Binary Search']",Medium
broken-calculator,"['Math', 'Greedy']",Medium
detect-squares,"['Array', 'Hash Table', 'Design', 'Counting']",Medium
maximum-coins-heroes-can-collect,"['Array', 'Two Pointers', 'Binary Search', 'Sorting', 'Prefix Sum']",Medium
largest-multiple-of-three,"['Array', 'Dynamic Programming', 'Greedy']",Hard
construct-binary-tree-from-string,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
traffic-light-controlled-intersection,['Concurrency'],Easy
remove-stones-to-minimize-the-total,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
find-anagram-mappings,"['Array', 'Hash Table']",Easy
find-triangular-sum-of-an-array,"['Array', 'Math', 'Simulation', 'Combinatorics']",Medium
minimum-falling-path-sum,"['Array', 'Dynamic Programming', 'Matrix']",Medium
time-needed-to-inform-all-employees,"['Tree', 'Depth-First Search', 'Breadth-First Search']",Medium
solveSudoku,[],N/A
find-maximum-number-of-string-pairs,"['Array', 'Hash Table', 'String', 'Simulation']",Easy
minimum-sideway-jumps,"['Array', 'Dynamic Programming', 'Greedy']",Medium
bold-words-in-string,"['Array', 'Hash Table', 'String', 'Trie', 'String Matching']",Medium
flip-game,['String'],Easy
find-array-given-subset-sums,"['Array', 'Divide and Conquer']",Hard
maximum-element-sum-of-a-complete-subset-of-indices,"['Array', 'Math', 'Number Theory']",Hard
check-if-an-original-string-exists-given-two-encoded-strings,"['String', 'Dynamic Programming']",Hard
construct-smallest-number-from-di-string,"['String', 'Backtracking', 'Stack', 'Greedy']",Medium
number-of-self-divisible-permutations,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Recursion', 'Bitmask']",Medium
sum-of-floored-pairs,"['Array', 'Math', 'Binary Search', 'Prefix Sum']",Hard
minimum-time-to-build-blocks,"['Array', 'Math', 'Greedy', 'Heap (Priority Queue)']",Hard
first-bad-version,"['Binary Search', 'Interactive']",Easy
calculate-digit-sum-of-a-string,"['String', 'Simulation']",Easy
check-if-number-is-a-sum-of-powers-of-three,['Math'],Medium
minimum-number-of-lines-to-cover-points,"['Array', 'Hash Table', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Geometry', 'Bitmask']",Medium
time-taken-to-cross-the-door,"['Array', 'Queue', 'Simulation']",Hard
furthest-building-you-can-reach,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
sqrtx,"['Math', 'Binary Search']",Easy
maximum-price-to-fill-a-bag,"['Array', 'Greedy', 'Sorting']",Medium
min-cost-to-connect-all-points,"['Array', 'Union Find', 'Graph', 'Minimum Spanning Tree']",Medium
minimized-maximum-of-products-distributed-to-any-store,"['Array', 'Binary Search']",Medium
longest-turbulent-subarray,"['Array', 'Dynamic Programming', 'Sliding Window']",Medium
getRow,[],N/A
same-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
min-cost-climbing-stairs,"['Array', 'Dynamic Programming']",Easy
reducing-dishes,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",Hard
minimize-the-maximum-difference-of-pairs,"['Array', 'Binary Search', 'Greedy']",Medium
minimize-string-length,"['Hash Table', 'String']",Easy
number-of-different-subsequences-gcds,"['Array', 'Math', 'Counting', 'Number Theory']",Hard
count-tested-devices-after-test-operations,"['Array', 'Simulation']",Easy
count-strictly-increasing-subarrays,"['Array', 'Math', 'Dynamic Programming']",Medium
maximum-points-in-an-archery-competition,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",Medium
count-subarrays-with-score-less-than-k,"['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",Hard
merge-sorted-array,"['Array', 'Two Pointers', 'Sorting']",Easy
numbers-with-repeated-digits,"['Math', 'Dynamic Programming']",Hard
number-of-divisible-triplet-sums,"['Array', 'Hash Table']",Medium
delete-node-in-a-linked-list,['Linked List'],Medium
jump,[],N/A
smallest-common-region,"['Array', 'Hash Table', 'String', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Medium
reverse-words-in-a-string-iii,"['Two Pointers', 'String']",Easy
minimum-cost-to-separate-sentence-into-rows,"['Array', 'Dynamic Programming']",Medium
kth-missing-positive-number,"['Array', 'Binary Search']",Easy
max-area-of-island,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
smallest-subsequence-of-distinct-characters,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",Medium
design-underground-system,"['Hash Table', 'String', 'Design']",Medium
minimum-elements-to-add-to-form-a-given-sum,"['Array', 'Greedy']",Medium
maximum-profit-from-trading-stocks,"['Array', 'Dynamic Programming']",Medium
number-of-subsequences-that-satisfy-the-given-sum-condition,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
print-words-vertically,"['Array', 'String', 'Simulation']",Medium
palindrome-permutation-ii,"['Hash Table', 'String', 'Backtracking']",Medium
palindromic-substrings,"['Two Pointers', 'String', 'Dynamic Programming']",Medium
find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k,"['Math', 'Greedy']",Medium
custom-sort-string,"['Hash Table', 'String', 'Sorting']",Medium
decode-string,"['String', 'Stack', 'Recursion']",Medium
bitwise-ors-of-subarrays,"['Array', 'Dynamic Programming', 'Bit Manipulation']",Medium
design-an-ordered-stream,"['Array', 'Hash Table', 'Design', 'Data Stream']",Easy
replace-elements-in-an-array,"['Array', 'Hash Table', 'Simulation']",Medium
check-if-it-is-possible-to-split-array,"['Array', 'Dynamic Programming', 'Greedy']",Medium
relative-sort-array,"['Array', 'Hash Table', 'Sorting', 'Counting Sort']",Easy
count-palindromic-subsequences,"['String', 'Dynamic Programming']",Hard
concatenated-words,"['Array', 'String', 'Dynamic Programming', 'Depth-First Search', 'Trie']",Hard
design-an-atm-machine,"['Array', 'Greedy', 'Design']",Medium
minimum-costs-using-the-train-line,"['Array', 'Dynamic Programming']",Hard
number-of-boomerangs,"['Array', 'Hash Table', 'Math']",Medium
hasPathSum,[],N/A
equal-row-and-column-pairs,"['Array', 'Hash Table', 'Matrix', 'Simulation']",Medium
minimize-product-sum-of-two-arrays,"['Array', 'Greedy', 'Sorting']",Medium
sum-in-a-matrix,"['Array', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Simulation']",Medium
score-of-parentheses,"['String', 'Stack']",Medium
maximum-score-of-a-good-subarray,"['Array', 'Two Pointers', 'Binary Search', 'Stack', 'Monotonic Stack']",Hard
sliding-window-maximum,"['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",Hard
max-points-on-a-line,"['Array', 'Hash Table', 'Math', 'Geometry']",Hard
longest-uncommon-subsequence-ii,"['Array', 'Hash Table', 'Two Pointers', 'String', 'Sorting']",Medium
max-pair-sum-in-an-array,"['Array', 'Hash Table']",Easy
number-of-dice-rolls-with-target-sum,['Dynamic Programming'],Medium
minimum-operations-to-halve-array-sum,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
subarray-product-less-than-k,"['Array', 'Sliding Window']",Medium
minimum-index-sum-of-two-lists,"['Array', 'Hash Table', 'String']",Easy
relocate-marbles,"['Array', 'Hash Table', 'Sorting', 'Simulation']",Medium
number-of-good-paths,"['Array', 'Hash Table', 'Tree', 'Union Find', 'Graph', 'Sorting']",Hard
closest-divisors,['Math'],Medium
lonely-pixel-ii,"['Array', 'Hash Table', 'Matrix']",Medium
minimum-cost-to-connect-sticks,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
triples-with-bitwise-and-equal-to-zero,"['Array', 'Hash Table', 'Bit Manipulation']",Hard
strong-password-checker-ii,['String'],Easy
minimum-number-of-keypresses,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",Medium
make-the-prefix-sum-non-negative,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
pascals-triangle-ii,"['Array', 'Dynamic Programming']",Easy
maximum-performance-of-a-team,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Hard
sum-of-k-mirror-numbers,"['Math', 'Enumeration']",Hard
minimum-time-to-complete-trips,"['Array', 'Binary Search']",Medium
reverse-pairs,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Hard
maximum-size-subarray-sum-equals-k,"['Array', 'Hash Table', 'Prefix Sum']",Medium
divide-array-in-sets-of-k-consecutive-numbers,"['Array', 'Hash Table', 'Greedy', 'Sorting']",Medium
minimum-limit-of-balls-in-a-bag,"['Array', 'Binary Search']",Medium
shift-2d-grid,"['Array', 'Matrix', 'Simulation']",Easy
the-score-of-students-solving-math-expression,"['Array', 'Math', 'String', 'Dynamic Programming', 'Stack', 'Memoization']",Hard
escape-a-large-maze,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search']",Hard
sum-of-special-evenly-spaced-elements-in-array,"['Array', 'Dynamic Programming']",Hard
random-pick-index,"['Hash Table', 'Math', 'Reservoir Sampling', 'Randomized']",Medium
maximum-points-you-can-obtain-from-cards,"['Array', 'Sliding Window', 'Prefix Sum']",Medium
distant-barcodes,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",Medium
make-lexicographically-smallest-array-by-swapping-elements,"['Array', 'Union Find', 'Sorting']",Medium
factor-combinations,['Backtracking'],Medium
orderly-queue,"['Math', 'String', 'Sorting']",Hard
two-best-non-overlapping-events,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting', 'Heap (Priority Queue)']",Medium
restore-the-array,"['String', 'Dynamic Programming']",Hard
sort-array-by-increasing-frequency,"['Array', 'Hash Table', 'Sorting']",Easy
minimum-time-to-visit-a-cell-in-a-grid,"['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",Hard
leftmost-column-with-at-least-a-one,"['Array', 'Binary Search', 'Matrix', 'Interactive']",Medium
stone-game-iii,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",Hard
largest-3-same-digit-number-in-string,['String'],Easy
maximum-69-number,"['Math', 'Greedy']",Easy
minimum-processing-time,"['Array', 'Greedy', 'Sorting']",Medium
minimum-time-to-revert-word-to-initial-state-i,"['String', 'Rolling Hash', 'String Matching', 'Hash Function']",Medium
count-hills-and-valleys-in-an-array,['Array'],Easy
number-of-equal-count-substrings,"['String', 'Counting', 'Prefix Sum']",Medium
expressive-words,"['Array', 'Two Pointers', 'String']",Medium
divide-array-into-arrays-with-max-difference,"['Array', 'Greedy', 'Sorting']",Medium
number-of-increasing-paths-in-a-grid,"['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort', 'Memoization', 'Matrix']",Hard
minimum-deletions-to-make-array-beautiful,"['Array', 'Stack', 'Greedy']",Medium
abbreviating-the-product-of-a-range,['Math'],Hard
course-schedule-ii,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Medium
longest-univalue-path,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
factorial-trailing-zeroes,['Math'],Medium
3sum,"['Array', 'Two Pointers', 'Sorting']",Medium
number-of-strings-that-appear-as-substrings-in-word,['String'],Easy
encode-and-decode-tinyurl,"['Hash Table', 'String', 'Design', 'Hash Function']",Medium
index-pairs-of-a-string,"['Array', 'String', 'Trie', 'Sorting']",Easy
reduce-array-size-to-the-half,"['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Medium
walking-robot-simulation-ii,"['Design', 'Simulation']",Medium
minimum-difference-between-largest-and-smallest-value-in-three-moves,"['Array', 'Greedy', 'Sorting']",Medium
reconstruct-itinerary,"['Depth-First Search', 'Graph', 'Eulerian Circuit']",Hard
stone-game-ii,"['Array', 'Math', 'Dynamic Programming', 'Prefix Sum', 'Game Theory']",Medium
disconnect-path-in-a-binary-matrix-by-at-most-one-flip,"['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Medium
range-sum-of-sorted-subarray-sums,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
logical-or-of-two-binary-grids-represented-as-quad-trees,"['Divide and Conquer', 'Tree']",Medium
find-all-people-with-secret,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Sorting']",Hard
number-of-great-partitions,"['Array', 'Dynamic Programming']",Hard
remove-letter-to-equalize-frequency,"['Hash Table', 'String', 'Counting']",Easy
maximum-number-of-fish-in-a-grid,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
odd-string-difference,"['Array', 'Hash Table', 'String']",Easy
minimum-moves-to-move-a-box-to-their-target-location,"['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",Hard
maximum-vacation-days,"['Array', 'Dynamic Programming', 'Matrix']",Hard
minimum-sum-of-values-by-dividing-array,"['Array', 'Binary Search', 'Dynamic Programming', 'Bit Manipulation', 'Segment Tree', 'Queue']",Hard
maximum-non-negative-product-in-a-matrix,"['Array', 'Dynamic Programming', 'Matrix']",Medium
intersection-of-two-linked-lists,"['Hash Table', 'Linked List', 'Two Pointers']",Easy
minimum-index-of-a-valid-split,"['Array', 'Hash Table', 'Sorting']",Medium
reverse-bits,"['Divide and Conquer', 'Bit Manipulation']",Easy
minimum-time-to-remove-all-cars-containing-illegal-goods,"['String', 'Dynamic Programming']",Hard
k-closest-points-to-origin,"['Array', 'Math', 'Divide and Conquer', 'Geometry', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",Medium
bitwise-xor-of-all-pairings,"['Array', 'Bit Manipulation', 'Brainteaser']",Medium
maximum-running-time-of-n-computers,"['Array', 'Binary Search', 'Greedy', 'Sorting']",Hard
ugly-number,['Math'],Easy
count-the-number-of-complete-components,"['Depth-First Search', 'Breadth-First Search', 'Graph']",Medium
spiral-matrix-iv,"['Array', 'Linked List', 'Matrix', 'Simulation']",Medium
apple-redistribution-into-boxes,"['Array', 'Greedy', 'Sorting']",Easy
number-of-different-integers-in-a-string,"['Hash Table', 'String']",Easy
find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
binary-search-tree-iterator,"['Stack', 'Tree', 'Design', 'Binary Search Tree', 'Binary Tree', 'Iterator']",Medium
number-of-ways-to-form-a-target-string-given-a-dictionary,"['Array', 'String', 'Dynamic Programming']",Hard
longest-duplicate-substring,"['String', 'Binary Search', 'Sliding Window', 'Rolling Hash', 'Suffix Array', 'Hash Function']",Hard
nim-game,"['Math', 'Brainteaser', 'Game Theory']",Easy
connecting-cities-with-minimum-cost,"['Union Find', 'Graph', 'Heap (Priority Queue)', 'Minimum Spanning Tree']",Medium
number-of-steps-to-reduce-a-number-to-zero,"['Math', 'Bit Manipulation']",Easy
find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance,"['Dynamic Programming', 'Graph', 'Shortest Path']",Medium
minimum-swaps-to-make-strings-equal,"['Math', 'String', 'Greedy']",Medium
sum-of-mutated-array-closest-to-target,"['Array', 'Binary Search', 'Sorting']",Medium
sort-linked-list-already-sorted-using-absolute-values,"['Linked List', 'Two Pointers', 'Sorting']",Medium
maximum-sum-of-distinct-subarrays-with-length-k,"['Array', 'Hash Table', 'Sliding Window']",Medium
collect-coins-in-a-tree,"['Array', 'Tree', 'Graph', 'Topological Sort']",Hard
insert-greatest-common-divisors-in-linked-list,"['Linked List', 'Math', 'Number Theory']",Medium
keyboard-row,"['Array', 'Hash Table', 'String']",Easy
find-the-celebrity,"['Two Pointers', 'Graph', 'Interactive']",Medium
check-if-all-characters-have-equal-number-of-occurrences,"['Hash Table', 'String', 'Counting']",Easy
reorder-log-files,[],N/A
jump-game-iii,"['Array', 'Depth-First Search', 'Breadth-First Search']",Medium
move-zeroes,"['Array', 'Two Pointers']",Easy
minimum-number-of-swaps-to-make-the-binary-string-alternating,"['String', 'Greedy']",Medium
minimum-number-of-removals-to-make-mountain-array,"['Array', 'Binary Search', 'Dynamic Programming', 'Greedy']",Hard
minimum-operations-to-make-the-integer-zero,"['Bit Manipulation', 'Brainteaser']",Medium
degree-of-an-array,"['Array', 'Hash Table']",Easy
sentence-similarity,"['Array', 'Hash Table', 'String']",Easy
longest-substring-with-at-most-k-distinct-characters,"['Hash Table', 'String', 'Sliding Window']",Medium
count-numbers-with-unique-digits,"['Math', 'Dynamic Programming', 'Backtracking']",Medium
kth-smallest-subarray-sum,"['Array', 'Binary Search', 'Sliding Window']",Medium
longest-increasing-path-in-a-matrix,"['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort', 'Memoization', 'Matrix']",Hard
defanging-an-ip-address,['String'],Easy
longest-palindromic-subsequence,"['String', 'Dynamic Programming']",Medium
convex-polygon,"['Math', 'Geometry']",Medium
handling-sum-queries-after-update,"['Array', 'Segment Tree']",Hard
reorganize-string,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",Medium
my-calendar-ii,"['Binary Search', 'Design', 'Segment Tree', 'Ordered Set']",Medium
sum-of-unique-elements,"['Array', 'Hash Table', 'Counting']",Easy
shortest-subarray-with-or-at-least-k-i,"['Array', 'Bit Manipulation', 'Sliding Window']",Easy
array-of-doubled-pairs,"['Array', 'Hash Table', 'Greedy', 'Sorting']",Medium
find-leaves-of-binary-tree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
max-consecutive-ones,['Array'],Easy
closest-leaf-in-a-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
maxProfitIII,[],N/A
maximize-the-minimum-powered-city,"['Array', 'Binary Search', 'Greedy', 'Queue', 'Sliding Window', 'Prefix Sum']",Hard
one-edit-distance,"['Two Pointers', 'String']",Medium
minimum-number-of-operations-to-make-arrays-similar,"['Array', 'Greedy', 'Sorting']",Hard
minimum-window-subsequence,"['String', 'Dynamic Programming', 'Sliding Window']",Hard
word-pattern-ii,"['Hash Table', 'String', 'Backtracking']",Medium
smallest-range-ii,"['Array', 'Math', 'Greedy', 'Sorting']",Medium
maximum-number-of-consecutive-values-you-can-make,"['Array', 'Greedy', 'Sorting']",Medium
minimum-absolute-sum-difference,"['Array', 'Binary Search', 'Sorting', 'Ordered Set']",Medium
minimum-consecutive-cards-to-pick-up,"['Array', 'Hash Table', 'Sliding Window']",Medium
squares-of-a-sorted-array,"['Array', 'Two Pointers', 'Sorting']",Easy
find-the-array-concatenation-value,"['Array', 'Two Pointers', 'Simulation']",Easy
strange-printer,"['String', 'Dynamic Programming']",Hard
all-oone-data-structure,"['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",Hard
find-shortest-path-with-k-hops,"['Graph', 'Heap (Priority Queue)', 'Shortest Path']",Hard
valid-word,['String'],Easy
filling-bookcase-shelves,"['Array', 'Dynamic Programming']",Medium
longest-repeating-substring,"['String', 'Binary Search', 'Dynamic Programming', 'Rolling Hash', 'Suffix Array', 'Hash Function']",Medium
longest-uploaded-prefix,"['Binary Search', 'Union Find', 'Design', 'Binary Indexed Tree', 'Segment Tree', 'Heap (Priority Queue)', 'Ordered Set']",Medium
add-two-integers,['Math'],Easy
rank-teams-by-votes,"['Array', 'Hash Table', 'String', 'Sorting', 'Counting']",Medium
distinct-subsequences-ii,"['String', 'Dynamic Programming']",Hard
paint-house,"['Array', 'Dynamic Programming']",Medium
count-of-interesting-subarrays,"['Array', 'Hash Table', 'Prefix Sum']",Medium
maximum-xor-product,"['Math', 'Greedy', 'Bit Manipulation']",Medium
number-of-steps-to-reduce-a-number-in-binary-representation-to-one,"['String', 'Bit Manipulation']",Medium
find-all-k-distant-indices-in-an-array,"['Array', 'Two Pointers']",Easy
maximum-number-of-jumps-to-reach-the-last-index,"['Array', 'Dynamic Programming']",Medium
find-the-most-competitive-subsequence,"['Array', 'Stack', 'Greedy', 'Monotonic Stack']",Medium
rotate-function,"['Array', 'Math', 'Dynamic Programming']",Medium
number-of-pairs-satisfying-inequality,"['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",Hard
implement-trie-ii-prefix-tree,"['Hash Table', 'String', 'Design', 'Trie']",Medium
merge-k-sorted-lists,"['Linked List', 'Divide and Conquer', 'Heap (Priority Queue)', 'Merge Sort']",Hard
reward-top-k-students,"['Array', 'Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)']",Medium
data-stream-as-disjoint-intervals,"['Binary Search', 'Design', 'Ordered Set']",Hard
number-of-orders-in-the-backlog,"['Array', 'Heap (Priority Queue)', 'Simulation']",Medium
take-gifts-from-the-richest-pile,"['Array', 'Heap (Priority Queue)', 'Simulation']",Easy
totalNQueens,[],N/A
maximum-square-area-by-removing-fences-from-a-field,"['Array', 'Hash Table', 'Enumeration']",Medium
valid-parentheses,"['String', 'Stack']",Easy
number-of-nodes-with-value-one,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
set-intersection-size-at-least-two,"['Array', 'Greedy', 'Sorting']",Hard
minimum-number-of-pushes-to-type-word-ii,"['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",Medium
find-the-shortest-superstring,"['Array', 'String', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
palindrome-removal,"['Array', 'Dynamic Programming']",Hard
repeated-string-match,"['String', 'String Matching']",Medium
smallest-missing-integer-greater-than-sequential-prefix-sum,"['Array', 'Hash Table', 'Sorting']",Easy
majority-element,"['Array', 'Hash Table', 'Divide and Conquer', 'Sorting', 'Counting']",Easy
maximum-number-of-groups-getting-fresh-donuts,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Bitmask']",Hard
patching-array,"['Array', 'Greedy']",Hard
missing-ranges,['Array'],Easy
maximum-number-of-groups-entering-a-competition,"['Array', 'Math', 'Binary Search', 'Greedy']",Medium
single-threaded-cpu,"['Array', 'Sorting', 'Heap (Priority Queue)']",Medium
find-minimum-time-to-finish-all-jobs-ii,"['Array', 'Greedy', 'Sorting']",Medium
find-root-of-n-ary-tree,"['Hash Table', 'Bit Manipulation', 'Tree', 'Depth-First Search']",Medium
shortest-subarray-with-or-at-least-k-ii,"['Array', 'Bit Manipulation', 'Sliding Window']",Medium
minimum-jumps-to-reach-home,"['Array', 'Dynamic Programming', 'Breadth-First Search']",Medium
the-earliest-and-latest-rounds-where-players-compete,"['Dynamic Programming', 'Memoization']",Hard
incremental-memory-leak,"['Math', 'Simulation']",Medium
longest-binary-subsequence-less-than-or-equal-to-k,"['String', 'Dynamic Programming', 'Greedy', 'Memoization']",Medium
find-pattern-in-infinite-stream-i,"['Array', 'Sliding Window', 'Rolling Hash', 'String Matching', 'Hash Function']",Medium
repeated-substring-pattern,"['String', 'String Matching']",Easy
count-submatrices-with-top-left-element-and-sum-less-than-k,"['Array', 'Matrix', 'Prefix Sum']",Medium
split-message-based-on-limit,"['String', 'Binary Search']",Hard
merge-in-between-linked-lists,['Linked List'],Medium
sum-of-subarray-ranges,"['Array', 'Stack', 'Monotonic Stack']",Medium
find-the-winner-of-the-circular-game,"['Array', 'Math', 'Recursion', 'Queue', 'Simulation']",Medium
construct-string-from-binary-tree,"['String', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
the-number-of-weak-characters-in-the-game,"['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",Medium
find-common-characters,"['Array', 'Hash Table', 'String']",Easy
number-of-ways-to-select-buildings,"['String', 'Dynamic Programming', 'Prefix Sum']",Medium
shuffle-the-array,['Array'],Easy
duplicate-zeros,"['Array', 'Two Pointers']",Easy
distribute-candies-to-people,"['Math', 'Simulation']",Easy
minimize-xor,"['Greedy', 'Bit Manipulation']",Medium
minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix,"['Array', 'Hash Table', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",Hard
count-the-number-of-infection-sequences,"['Array', 'Math', 'Combinatorics']",Hard
monotonic-array,['Array'],Easy
sum-of-all-subset-xor-totals,"['Array', 'Math', 'Backtracking', 'Bit Manipulation', 'Combinatorics', 'Enumeration']",Easy
read-n-characters-given-read4-ii-call-multiple-times,"['Array', 'Simulation', 'Interactive']",Hard
letter-case-permutation,"['String', 'Backtracking', 'Bit Manipulation']",Medium
count-unhappy-friends,"['Array', 'Simulation']",Medium
group-shifted-strings,"['Array', 'Hash Table', 'String']",Medium
di-string-match,"['Array', 'Two Pointers', 'String', 'Greedy']",Easy
decompress-run-length-encoded-list,['Array'],Easy
longer-contiguous-segments-of-ones-than-zeros,['String'],Easy
increasing-order-search-tree,"['Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Easy
video-stitching,"['Array', 'Dynamic Programming', 'Greedy']",Medium
maximum-prime-difference,"['Array', 'Math', 'Number Theory']",Medium
count-number-of-ways-to-place-houses,['Dynamic Programming'],Medium
two-sum-bsts,"['Two Pointers', 'Binary Search', 'Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
pascals-triangle,"['Array', 'Dynamic Programming']",Easy
maximum-segment-sum-after-removals,"['Array', 'Union Find', 'Prefix Sum', 'Ordered Set']",Hard
maximum-tastiness-of-candy-basket,"['Array', 'Binary Search', 'Greedy', 'Sorting']",Medium
make-costs-of-paths-equal-in-a-binary-tree,"['Array', 'Dynamic Programming', 'Greedy', 'Tree', 'Binary Tree']",Medium
swim-in-rising-water,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",Hard
convert-1d-array-into-2d-array,"['Array', 'Matrix', 'Simulation']",Easy
soup-servings,"['Math', 'Dynamic Programming', 'Probability and Statistics']",Medium
odd-even-linked-list,['Linked List'],Medium
can-convert-string-in-k-moves,"['Hash Table', 'String']",Medium
searchMatrix2,[],N/A
meeting-rooms-iii,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",Hard
finding-3-digit-even-numbers,"['Array', 'Hash Table', 'Sorting', 'Enumeration']",Easy
rearrange-spaces-between-words,['String'],Easy
shortest-distance-to-target-color,"['Array', 'Binary Search', 'Dynamic Programming']",Medium
numDistinct,[],N/A
check-if-n-and-its-double-exist,"['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",Easy
merge-two-2d-arrays-by-summing-values,"['Array', 'Hash Table', 'Two Pointers']",Easy
second-minimum-time-to-reach-destination,"['Breadth-First Search', 'Graph', 'Shortest Path']",Hard
first-unique-number,"['Array', 'Hash Table', 'Design', 'Queue', 'Data Stream']",Medium
average-height-of-buildings-in-each-segment,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Medium
number-of-ways-to-wear-different-hats-to-each-other,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
check-knight-tour-configuration,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Simulation']",Medium
remove-comments,"['Array', 'String']",Medium
coordinate-with-maximum-network-quality,"['Array', 'Enumeration']",Medium
find-xor-sum-of-all-pairs-bitwise-and,"['Array', 'Math', 'Bit Manipulation']",Hard
product-of-array-except-self,"['Array', 'Prefix Sum']",Medium
valid-palindrome-iv,"['Two Pointers', 'String']",Medium
maximal-square,"['Array', 'Dynamic Programming', 'Matrix']",Medium
add-and-search-word-data-structure-design,[],N/A
range-sum-query-2d-mutable,"['Array', 'Design', 'Binary Indexed Tree', 'Segment Tree', 'Matrix']",Hard
longest-zigzag-path-in-a-binary-tree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
maximum-score-from-performing-multiplication-operations,"['Array', 'Dynamic Programming']",Hard
number-of-flowers-in-full-bloom,"['Array', 'Hash Table', 'Binary Search', 'Sorting', 'Prefix Sum', 'Ordered Set']",Hard
find-the-longest-substring-containing-vowels-in-even-counts,"['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",Medium
excel-sheet-column-title,"['Math', 'String']",Easy
prime-subtraction-operation,"['Array', 'Math', 'Binary Search', 'Greedy', 'Number Theory']",Medium
number-of-students-doing-homework-at-a-given-time,['Array'],Easy
number-of-ways-to-earn-points,"['Array', 'Dynamic Programming']",Hard
count-days-spent-together,"['Math', 'String']",Easy
maximal-range-that-each-element-is-maximum-in-it,"['Array', 'Stack', 'Monotonic Stack']",Medium
minimum-skips-to-arrive-at-meeting-on-time,"['Array', 'Dynamic Programming']",Hard
largest-rectangle-in-histogram,"['Array', 'Stack', 'Monotonic Stack']",Hard
champagne-tower,['Dynamic Programming'],Medium
count-number-of-rectangles-containing-each-point,"['Array', 'Binary Search', 'Binary Indexed Tree', 'Sorting']",Medium
k-th-smallest-prime-fraction,"['Array', 'Two Pointers', 'Binary Search', 'Sorting', 'Heap (Priority Queue)']",Medium
number-of-ways-to-divide-a-long-corridor,"['Math', 'String', 'Dynamic Programming']",Hard
difference-of-number-of-distinct-values-on-diagonals,"['Array', 'Hash Table', 'Matrix']",Medium
maximize-grid-happiness,"['Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Bitmask']",Hard
letter-combinations-of-a-phone-number,"['Hash Table', 'String', 'Backtracking']",Medium
minimum-number-of-work-sessions-to-finish-the-tasks,"['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
strobogrammatic-number-iii,"['Array', 'String', 'Recursion']",Hard
maximum-binary-tree,"['Array', 'Divide and Conquer', 'Stack', 'Tree', 'Monotonic Stack', 'Binary Tree']",Medium
add-edges-to-make-degrees-of-all-nodes-even,"['Hash Table', 'Graph']",Hard
greatest-sum-divisible-by-three,"['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",Medium
minimum-operations-to-make-median-of-array-equal-to-k,"['Array', 'Greedy', 'Sorting']",Medium
minimum-factorization,"['Math', 'Greedy']",Medium
build-a-matrix-with-conditions,"['Array', 'Graph', 'Topological Sort', 'Matrix']",Hard
remove-duplicates-from-an-unsorted-linked-list,"['Hash Table', 'Linked List']",Medium
read-n-characters-given-read4,"['Array', 'Simulation', 'Interactive']",Easy
design-linked-list,"['Linked List', 'Design']",Medium
next-palindrome-using-same-digits,"['Two Pointers', 'String']",Hard
top-k-frequent-words,"['Hash Table', 'String', 'Trie', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting']",Medium
equal-sum-arrays-with-minimum-number-of-operations,"['Array', 'Hash Table', 'Greedy', 'Counting']",Medium
count-special-integers,"['Math', 'Dynamic Programming']",Hard
find-lucky-integer-in-an-array,"['Array', 'Hash Table', 'Counting']",Easy
design-an-expression-tree-with-evaluate-function,"['Math', 'Stack', 'Tree', 'Design', 'Binary Tree']",Medium
minimum-swaps-to-make-sequences-increasing,"['Array', 'Dynamic Programming']",Hard
path-with-minimum-effort,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",Medium
design-most-recently-used-queue,"['Array', 'Hash Table', 'Stack', 'Design', 'Binary Indexed Tree', 'Ordered Set']",Medium
minimum-score-after-removals-on-a-tree,"['Array', 'Bit Manipulation', 'Tree', 'Depth-First Search']",Hard
image-smoother,"['Array', 'Matrix']",Easy
maximum-frequency-score-of-a-subarray,"['Array', 'Hash Table', 'Math', 'Sliding Window']",Hard
find-if-path-exists-in-graph,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Easy
asteroid-collision,"['Array', 'Stack', 'Simulation']",Medium
determine-the-winner-of-a-bowling-game,"['Array', 'Simulation']",Easy
count-good-nodes-in-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
binary-tree-coloring-game,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
count-different-palindromic-subsequences,"['String', 'Dynamic Programming']",Hard
remove-sub-folders-from-the-filesystem,"['Array', 'String', 'Depth-First Search', 'Trie']",Medium
maximum-score-words-formed-by-letters,"['Array', 'String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Hard
shortest-subarray-with-sum-at-least-k,"['Array', 'Binary Search', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",Hard
painting-a-grid-with-three-different-colors,['Dynamic Programming'],Hard
most-frequent-number-following-key-in-an-array,"['Array', 'Hash Table', 'Counting']",Easy
frog-jump-ii,"['Array', 'Binary Search', 'Greedy']",Medium
count-sorted-vowel-strings,"['Math', 'Dynamic Programming', 'Combinatorics']",Medium
design-hit-counter,"['Array', 'Binary Search', 'Design', 'Queue', 'Data Stream']",Medium
maximum-number-of-occurrences-of-a-substring,"['Hash Table', 'String', 'Sliding Window']",Medium
remove-duplicates-from-sorted-list-ii,"['Linked List', 'Two Pointers']",Medium
longest-valid-parentheses,"['String', 'Dynamic Programming', 'Stack']",Hard
burst-balloons,"['Array', 'Dynamic Programming']",Hard
move-sub-tree-of-n-ary-tree,"['Tree', 'Depth-First Search']",Hard
maximum-matrix-sum,"['Array', 'Greedy', 'Matrix']",Medium
before-and-after-puzzle,"['Array', 'Hash Table', 'String', 'Sorting']",Medium
clone-binary-tree-with-random-pointer,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
uncommon-words-from-two-sentences,"['Hash Table', 'String']",Easy
number-of-even-and-odd-bits,['Bit Manipulation'],Easy
convert-sorted-array-to-binary-search-tree,"['Array', 'Divide and Conquer', 'Tree', 'Binary Search Tree', 'Binary Tree']",Easy
iterator-for-combination,"['String', 'Backtracking', 'Design', 'Iterator']",Medium
min-stack,"['Stack', 'Design']",Medium
subarrays-with-k-different-integers,"['Array', 'Hash Table', 'Sliding Window', 'Counting']",Hard
prime-palindrome,"['Math', 'Number Theory']",Medium
ambiguous-coordinates,"['String', 'Backtracking', 'Enumeration']",Medium
bulb-switcher-iii,[],N/A
count-integers-in-intervals,"['Design', 'Segment Tree', 'Ordered Set']",Hard
design-a-number-container-system,"['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",Medium
number-of-good-binary-strings,['Dynamic Programming'],Medium
minimum-number-of-operations-to-reinitialize-a-permutation,"['Array', 'Math', 'Simulation']",Medium
split-linked-list-in-parts,['Linked List'],Medium
regions-cut-by-slashes,"['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Medium
minimum-distance-to-type-a-word-using-two-fingers,"['String', 'Dynamic Programming']",Hard
largest-divisible-subset,"['Array', 'Math', 'Dynamic Programming', 'Sorting']",Medium
online-majority-element-in-subarray,"['Array', 'Binary Search', 'Design', 'Binary Indexed Tree', 'Segment Tree']",Hard
find-the-string-with-lcp,"['Array', 'String', 'Dynamic Programming', 'Greedy', 'Union Find', 'Matrix']",Hard
smallest-sufficient-team,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
destroying-asteroids,"['Array', 'Greedy', 'Sorting']",Medium
count-complete-substrings,"['Hash Table', 'String', 'Sliding Window']",Hard
combinationSum2,[],N/A
minimum-number-of-flips-to-make-the-binary-string-alternating,"['String', 'Dynamic Programming', 'Greedy', 'Sliding Window']",Medium
rotate-array,"['Array', 'Math', 'Two Pointers']",Medium
number-of-strings-which-can-be-rearranged-to-contain-substring,"['Math', 'Dynamic Programming', 'Combinatorics']",Medium
the-number-of-beautiful-subsets,"['Array', 'Dynamic Programming', 'Backtracking', 'Sorting']",Medium
24-game,"['Array', 'Math', 'Backtracking']",Hard
minimum-split-into-subarrays-with-gcd-greater-than-one,"['Array', 'Math', 'Dynamic Programming', 'Greedy', 'Number Theory']",Medium
trapping-rain-water-ii,"['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",Hard
all-ancestors-of-a-node-in-a-directed-acyclic-graph,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",Medium
minimum-flips-to-make-a-or-b-equal-to-c,['Bit Manipulation'],Medium
matrix-diagonal-sum,"['Array', 'Matrix']",Easy
find-kth-largest-xor-coordinate-value,"['Array', 'Divide and Conquer', 'Bit Manipulation', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Prefix Sum', 'Quickselect']",Medium
maximum-xor-of-two-numbers-in-an-array,"['Array', 'Hash Table', 'Bit Manipulation', 'Trie']",Medium
candy-crush,"['Array', 'Two Pointers', 'Matrix', 'Simulation']",Medium
match-alphanumerical-pattern-in-matrix-i,"['Array', 'Hash Table', 'String', 'Matrix']",Medium
find-subarrays-with-equal-sum,"['Array', 'Hash Table']",Easy
flip-equivalent-binary-trees,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
count-the-number-of-houses-at-a-certain-distance-i,"['Breadth-First Search', 'Graph', 'Prefix Sum']",Medium
number-of-senior-citizens,"['Array', 'String']",Easy
maximum-subarray-min-product,"['Array', 'Stack', 'Monotonic Stack', 'Prefix Sum']",Medium
find-the-winner-of-an-array-game,"['Array', 'Simulation']",Medium
number-of-ways-to-arrive-at-destination,"['Dynamic Programming', 'Graph', 'Topological Sort', 'Shortest Path']",Medium
apply-operations-to-maximize-frequency-score,"['Array', 'Binary Search', 'Sliding Window', 'Sorting', 'Prefix Sum']",Hard
number-of-matching-subsequences,"['Array', 'Hash Table', 'String', 'Binary Search', 'Dynamic Programming', 'Trie', 'Sorting']",Medium
distance-to-a-cycle-in-undirected-graph,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Hard
number-of-burgers-with-no-waste-of-ingredients,['Math'],Medium
maximum-star-sum-of-a-graph,"['Array', 'Greedy', 'Graph', 'Sorting', 'Heap (Priority Queue)']",Medium
house-robber-iv,"['Array', 'Binary Search']",Medium
knight-probability-in-chessboard,['Dynamic Programming'],Medium
increasing-decreasing-string,"['Hash Table', 'String', 'Counting']",Easy
shortest-distance-from-all-buildings,"['Array', 'Breadth-First Search', 'Matrix']",Hard
design-snake-game,"['Array', 'Hash Table', 'Design', 'Queue', 'Simulation']",Medium
find-bottom-left-tree-value,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
kth-smallest-element-in-a-bst,"['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
divide-a-string-into-groups-of-size-k,"['String', 'Simulation']",Easy
length-of-the-longest-subsequence-that-sums-to-target,"['Array', 'Dynamic Programming']",Medium
minimum-time-to-kill-all-monsters,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
next-closest-time,"['Hash Table', 'String', 'Backtracking', 'Enumeration']",Medium
number-of-longest-increasing-subsequence,"['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",Medium
find-longest-special-substring-that-occurs-thrice-ii,"['Hash Table', 'String', 'Binary Search', 'Sliding Window', 'Counting']",Medium
find-the-number-of-subarrays-where-boundary-elements-are-maximum,"['Array', 'Binary Search', 'Stack', 'Monotonic Stack']",Hard
clone-n-ary-tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Medium
minimum-number-of-k-consecutive-bit-flips,"['Array', 'Bit Manipulation', 'Queue', 'Sliding Window', 'Prefix Sum']",Hard
fibonacci-number,"['Math', 'Dynamic Programming', 'Recursion', 'Memoization']",Easy
latest-time-you-can-obtain-after-replacing-characters,"['String', 'Enumeration']",Easy
zuma-game,"['String', 'Dynamic Programming', 'Stack', 'Breadth-First Search', 'Memoization']",Hard
minimum-money-required-before-transactions,"['Array', 'Greedy', 'Sorting']",Hard
count-pairs-of-similar-strings,"['Array', 'Hash Table', 'String', 'Bit Manipulation']",Easy
number-of-lines-to-write-string,"['Array', 'String']",Easy
minimum-add-to-make-parentheses-valid,"['String', 'Stack', 'Greedy']",Medium
valid-tic-tac-toe-state,"['Array', 'Matrix']",Medium
minimum-moves-to-pick-k-ones,"['Array', 'Greedy', 'Sliding Window', 'Prefix Sum']",Hard
count-subtrees-with-max-distance-between-cities,"['Dynamic Programming', 'Bit Manipulation', 'Tree', 'Enumeration', 'Bitmask']",Hard
smallest-value-of-the-rearranged-number,"['Math', 'Sorting']",Medium
beautiful-arrangement-ii,"['Array', 'Math']",Medium
4-keys-keyboard,"['Math', 'Dynamic Programming']",Medium
first-day-where-you-have-been-in-all-the-rooms,"['Array', 'Dynamic Programming']",Medium
find-common-elements-between-two-arrays,"['Array', 'Hash Table']",Easy
count-all-possible-routes,"['Array', 'Dynamic Programming', 'Memoization']",Hard
maximize-consecutive-elements-in-an-array-after-modification,"['Array', 'Dynamic Programming', 'Sorting']",Hard
teemo-attacking,"['Array', 'Simulation']",Easy
maximum-area-of-longest-diagonal-rectangle,['Array'],Easy
avoid-flood-in-the-city,"['Array', 'Hash Table', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",Medium
remove-all-adjacent-duplicates-in-string,"['String', 'Stack']",Easy
super-ugly-number,"['Array', 'Math', 'Dynamic Programming']",Medium
russian-doll-envelopes,"['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",Hard
find-the-grid-of-region-average,"['Array', 'Matrix']",Medium
minimum-cost-to-make-array-equalindromic,"['Array', 'Math', 'Greedy', 'Sorting']",Medium
maximum-number-of-accepted-invitations,"['Array', 'Backtracking', 'Matrix']",Medium
array-nesting,"['Array', 'Depth-First Search']",Medium
minimum-number-of-moves-to-seat-everyone,"['Array', 'Greedy', 'Sorting']",Easy
rectangle-overlap,"['Math', 'Geometry']",Easy
execution-of-all-suffix-instructions-staying-in-a-grid,"['String', 'Simulation']",Medium
maximum-sum-queries,"['Array', 'Binary Search', 'Stack', 'Binary Indexed Tree', 'Segment Tree', 'Sorting', 'Monotonic Stack']",Hard
longest-palindrome-by-concatenating-two-letter-words,"['Array', 'Hash Table', 'String', 'Greedy', 'Counting']",Medium
sequence-reconstruction,"['Array', 'Graph', 'Topological Sort']",Medium
maxPathSum,[],N/A
minimum-operations-to-make-array-equal,['Math'],Medium
minimum-adjacent-swaps-to-make-a-valid-array,"['Array', 'Greedy']",Medium
stone-game-ix,"['Array', 'Math', 'Greedy', 'Counting', 'Game Theory']",Medium
number-of-laser-beams-in-a-bank,"['Array', 'Math', 'String', 'Matrix']",Medium
sort-array-by-parity,"['Array', 'Two Pointers', 'Sorting']",Easy
maximum-level-sum-of-a-binary-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
max-sum-of-sub-matrix-no-larger-than-k,[],N/A
find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree,"['Union Find', 'Graph', 'Sorting', 'Minimum Spanning Tree', 'Strongly Connected Component']",Hard
minimum-operations-to-make-the-array-increasing,"['Array', 'Greedy']",Easy
minimum-incompatibility,"['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",Hard
check-if-strings-can-be-made-equal-with-operations-i,['String'],Easy
winner-of-the-linked-list-game,['Linked List'],Easy
minimum-number-of-swaps-to-make-the-string-balanced,"['Two Pointers', 'String', 'Stack', 'Greedy']",Medium
separate-black-and-white-balls,"['Two Pointers', 'String', 'Greedy']",Medium
count-equal-and-divisible-pairs-in-an-array,['Array'],Easy
isScramble,[],N/A
minimum-hours-of-training-to-win-a-competition,"['Array', 'Greedy']",Easy
find-median-from-data-stream,"['Two Pointers', 'Design', 'Sorting', 'Heap (Priority Queue)', 'Data Stream']",Hard
find-two-non-overlapping-sub-arrays-each-with-target-sum,"['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sliding Window']",Medium
smallest-even-multiple,"['Math', 'Number Theory']",Easy
minimum-rectangles-to-cover-points,"['Array', 'Greedy', 'Sorting']",Medium
count-square-submatrices-with-all-ones,"['Array', 'Dynamic Programming', 'Matrix']",Medium
distance-between-bus-stops,['Array'],Easy
lexicographically-smallest-string-after-applying-operations,"['String', 'Breadth-First Search']",Medium
number-of-ways-to-reorder-array-to-get-same-bst,"['Array', 'Math', 'Divide and Conquer', 'Dynamic Programming', 'Tree', 'Union Find', 'Binary Search Tree', 'Memoization', 'Combinatorics', 'Binary Tree']",Hard
binary-trees-with-factors,"['Array', 'Hash Table', 'Dynamic Programming', 'Sorting']",Medium
longest-subsequence-with-limited-sum,"['Array', 'Binary Search', 'Greedy', 'Sorting', 'Prefix Sum']",Easy
the-dining-philosophers,['Concurrency'],Medium
maximum-good-people-based-on-statements,"['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",Hard
smallest-rotation-with-highest-score,"['Array', 'Prefix Sum']",Hard
remove-k-digits,"['String', 'Stack', 'Greedy', 'Monotonic Stack']",Medium
nested-list-weight-sum,"['Depth-First Search', 'Breadth-First Search']",Medium
maximum-number-of-intersections-on-the-chart,"['Array', 'Math', 'Binary Indexed Tree', 'Geometry']",Hard
is-array-a-preorder-of-some-binary-tree,"['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
where-will-the-ball-fall,"['Array', 'Matrix', 'Simulation']",Medium
count-array-pairs-divisible-by-k,"['Array', 'Math', 'Number Theory']",Hard
count-the-repetitions,"['String', 'Dynamic Programming']",Hard
count-pairs-whose-sum-is-less-than-target,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Easy
group-anagrams,"['Array', 'Hash Table', 'String', 'Sorting']",Medium
maximum-average-subtree,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
max-sum-of-a-pair-with-equal-sum-of-digits,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",Medium
search-in-a-binary-search-tree,"['Tree', 'Binary Search Tree', 'Binary Tree']",Easy
furthest-point-from-origin,"['String', 'Counting']",Easy
largest-substring-between-two-equal-characters,"['Hash Table', 'String']",Easy
sum-of-matrix-after-queries,"['Array', 'Hash Table']",Medium
sum-of-imbalance-numbers-of-all-subarrays,"['Array', 'Hash Table', 'Ordered Set']",Hard
check-if-a-string-is-an-acronym-of-words,"['Array', 'String']",Easy
count-pairs-of-points-with-distance-k,"['Array', 'Hash Table', 'Bit Manipulation']",Medium
the-knights-tour,"['Array', 'Backtracking', 'Matrix']",Medium
sign-of-the-product-of-an-array,"['Array', 'Math']",Easy
minimum-operations-to-remove-adjacent-ones-in-matrix,"['Array', 'Graph', 'Matrix']",Hard
max-consecutive-ones-ii,"['Array', 'Dynamic Programming', 'Sliding Window']",Medium
lexicographically-smallest-equivalent-string,"['String', 'Union Find']",Medium
middle-of-the-linked-list,"['Linked List', 'Two Pointers']",Easy
smallest-rectangle-enclosing-black-pixels,"['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",Hard
minimum-moves-to-convert-string,"['String', 'Greedy']",Easy
count-number-of-teams,"['Array', 'Dynamic Programming', 'Binary Indexed Tree']",Medium
closest-dessert-cost,"['Array', 'Dynamic Programming', 'Backtracking']",Medium
number-of-students-unable-to-eat-lunch,"['Array', 'Stack', 'Queue', 'Simulation']",Easy
count-ways-to-group-overlapping-ranges,"['Array', 'Sorting']",Medium
minimum-right-shifts-to-sort-the-array,['Array'],Easy
count-the-number-of-houses-at-a-certain-distance-ii,"['Graph', 'Prefix Sum']",Hard
flipping-an-image,"['Array', 'Two Pointers', 'Bit Manipulation', 'Matrix', 'Simulation']",Easy
minimum-seconds-to-equalize-a-circular-array,"['Array', 'Hash Table']",Medium
distribute-elements-into-two-arrays-ii,"['Array', 'Binary Indexed Tree', 'Segment Tree', 'Simulation']",Hard
fizz-buzz,"['Math', 'String', 'Simulation']",Easy
minimum-cost-walk-in-weighted-graph,"['Array', 'Bit Manipulation', 'Union Find', 'Graph']",Hard
smallest-index-with-equal-value,['Array'],Easy
distinct-numbers-in-each-subarray,"['Array', 'Hash Table', 'Sliding Window']",Medium
maximum-rows-covered-by-columns,"['Array', 'Backtracking', 'Bit Manipulation', 'Matrix', 'Enumeration']",Medium
binary-tree-level-order-traversal,"['Tree', 'Breadth-First Search', 'Binary Tree']",Medium
redistribute-characters-to-make-all-strings-equal,"['Hash Table', 'String', 'Counting']",Easy
find-the-largest-area-of-square-inside-two-rectangles,"['Array', 'Math', 'Geometry']",Medium
find-servers-that-handled-most-number-of-requests,"['Array', 'Greedy', 'Heap (Priority Queue)', 'Ordered Set']",Hard
minimum-impossible-or,"['Array', 'Bit Manipulation', 'Brainteaser']",Medium
baseball-game,"['Array', 'Stack', 'Simulation']",Easy
ugly-number-ii,"['Hash Table', 'Math', 'Dynamic Programming', 'Heap (Priority Queue)']",Medium
stream-of-characters2,[],N/A
number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers,"['Array', 'Hash Table', 'Math', 'Two Pointers']",Medium
most-profit-assigning-work,"['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",Medium
convert-to-base-2,['Math'],Medium
count-positions-on-street-with-required-brightness,"['Array', 'Prefix Sum']",Medium
number-of-people-that-can-be-seen-in-a-grid,"['Array', 'Stack', 'Matrix', 'Monotonic Stack']",Medium
maximum-length-of-a-concatenated-string-with-unique-characters,"['Array', 'String', 'Backtracking', 'Bit Manipulation']",Medium
integer-break,"['Math', 'Dynamic Programming']",Medium
maximum-length-of-semi-decreasing-subarrays,"['Array', 'Hash Table', 'Sorting']",Medium
find-the-derangement-of-an-array,"['Math', 'Dynamic Programming']",Medium
minimum-equal-sum-of-two-arrays-after-replacing-zeros,"['Array', 'Greedy']",Medium
kth-smallest-instructions,"['Array', 'Math', 'Dynamic Programming', 'Combinatorics']",Hard
display-table-of-food-orders-in-a-restaurant,"['Array', 'Hash Table', 'String', 'Sorting', 'Ordered Set']",Medium
count-number-of-texts,"['Hash Table', 'Math', 'String', 'Dynamic Programming']",Medium
delete-nodes-and-return-forest,"['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",Medium
minimum-swaps-to-group-all-1s-together-ii,"['Array', 'Sliding Window']",Medium
critical-connections-in-a-network,"['Depth-First Search', 'Graph', 'Biconnected Component']",Hard
dot-product-of-two-sparse-vectors,"['Array', 'Hash Table', 'Two Pointers', 'Design']",Medium
design-parking-system,"['Design', 'Simulation', 'Counting']",Easy
make-sum-divisible-by-p,"['Array', 'Hash Table', 'Prefix Sum']",Medium
smallest-string-with-a-given-numeric-value,"['String', 'Greedy']",Medium
number-of-operations-to-make-network-connected,"['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",Medium
design-front-middle-back-queue,"['Array', 'Linked List', 'Design', 'Queue', 'Data Stream']",Medium
maximum-average-pass-ratio,"['Array', 'Greedy', 'Heap (Priority Queue)']",Medium
convert-binary-search-tree-to-sorted-doubly-linked-list,"['Linked List', 'Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree', 'Doubly-Linked List']",Medium
base-7,['Math'],Easy
jump-game-vii,"['String', 'Dynamic Programming', 'Sliding Window', 'Prefix Sum']",Medium
find-k-closest-elements,"['Array', 'Two Pointers', 'Binary Search', 'Sliding Window', 'Sorting', 'Heap (Priority Queue)']",Medium
maximize-the-beauty-of-the-garden,"['Array', 'Greedy', 'Prefix Sum']",Hard
mice-and-cheese,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Medium
separate-the-digits-in-an-array,"['Array', 'Simulation']",Easy
maximum-product-of-the-length-of-two-palindromic-subsequences,"['String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",Medium
solveNQueens,[],N/A
greatest-english-letter-in-upper-and-lower-case,"['Hash Table', 'String', 'Enumeration']",Easy
wordBreakII,[],N/A
boats-to-save-people,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Medium
backspace-string-compare,"['Two Pointers', 'String', 'Stack', 'Simulation']",Easy
calculate-delayed-arrival-time,['Math'],Easy
candy,"['Array', 'Greedy']",Hard
map-of-highest-peak,"['Array', 'Breadth-First Search', 'Matrix']",Medium
check-if-one-string-swap-can-make-strings-equal,"['Hash Table', 'String', 'Counting']",Easy
construct-string-with-repeat-limit,"['Hash Table', 'String', 'Greedy', 'Heap (Priority Queue)', 'Counting']",Medium
minimum-number-of-operations-to-move-all-balls-to-each-box,"['Array', 'String']",Medium
number-of-pairs-of-strings-with-concatenation-equal-to-target,"['Array', 'Hash Table', 'String', 'Counting']",Medium
moving-stones-until-consecutive,"['Math', 'Brainteaser']",Medium
count-the-number-of-consistent-strings,"['Array', 'Hash Table', 'String', 'Bit Manipulation']",Easy
convert-integer-to-the-sum-of-two-no-zero-integers,['Math'],Easy
most-visited-sector-in-a-circular-track,"['Array', 'Simulation']",Easy
ipo,"['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",Hard
shortest-subarray-to-be-removed-to-make-array-sorted,"['Array', 'Two Pointers', 'Binary Search', 'Stack', 'Monotonic Stack']",Medium
reorder-routes-to-make-all-paths-lead-to-the-city-zero,"['Depth-First Search', 'Breadth-First Search', 'Graph']",Medium
find-subsequence-of-length-k-with-the-largest-sum,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",Easy
all-nodes-distance-k-in-binary-tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Medium
lexicographically-smallest-string-after-substring-operation,"['String', 'Greedy']",Medium
maximum-difference-by-remapping-a-digit,"['Math', 'Greedy']",Easy
maximize-sum-of-array-after-k-negations,"['Array', 'Greedy', 'Sorting']",Easy
find-all-good-strings,"['String', 'Dynamic Programming', 'String Matching']",Hard
sum-of-absolute-differences-in-a-sorted-array,"['Array', 'Math', 'Prefix Sum']",Medium
minimum-time-to-collect-all-apples-in-a-tree,"['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",Medium
range-sum-query-mutable,"['Array', 'Design', 'Binary Indexed Tree', 'Segment Tree']",Medium
prime-pairs-with-target-sum,"['Array', 'Math', 'Enumeration', 'Number Theory']",Medium
find-number-of-coins-to-place-in-tree-nodes,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Sorting', 'Heap (Priority Queue)']",Hard
minimum-adjacent-swaps-for-k-consecutive-ones,"['Array', 'Greedy', 'Sliding Window', 'Prefix Sum']",Hard
find-the-integer-added-to-array-ii,"['Array', 'Two Pointers', 'Sorting', 'Enumeration']",Medium
longest-word-in-dictionary,"['Array', 'Hash Table', 'String', 'Trie', 'Sorting']",Medium
longest-consecutive-sequence,"['Array', 'Hash Table', 'Union Find']",Medium
sum-of-two-integers,"['Math', 'Bit Manipulation']",Medium
ways-to-split-array-into-three-subarrays,"['Array', 'Two Pointers', 'Binary Search', 'Prefix Sum']",Medium
symmetric-tree,"['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",Easy
product-of-two-run-length-encoded-arrays,"['Array', 'Two Pointers']",Medium
earliest-second-to-mark-indices-i,"['Array', 'Binary Search']",Medium
find-the-maximum-divisibility-score,['Array'],Easy
search-a-2d-matrix-ii,"['Array', 'Binary Search', 'Divide and Conquer', 'Matrix']",Medium
number-of-substrings-containing-all-three-characters,"['Hash Table', 'String', 'Sliding Window']",Medium
insert-interval,['Array'],Medium
largest-bst-subtree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",Medium
minimum-moves-to-reach-target-with-rotations,"['Array', 'Breadth-First Search', 'Matrix']",Hard
moving-stones-until-consecutive-ii,"['Array', 'Math', 'Two Pointers', 'Sorting']",Medium
subsets-ii,"['Array', 'Backtracking', 'Bit Manipulation']",Medium
successful-pairs-of-spells-and-potions,"['Array', 'Two Pointers', 'Binary Search', 'Sorting']",Medium
network-delay-time,"['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
merge-nodes-in-between-zeros,"['Linked List', 'Simulation']",Medium
mark-elements-on-array-by-performing-queries,"['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",Medium
maximum-cost-of-trip-with-k-highways,"['Dynamic Programming', 'Bit Manipulation', 'Graph', 'Bitmask']",Hard
making-a-large-island,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",Hard
print-zero-even-odd,['Concurrency'],Medium
minimum-domino-rotations-for-equal-row,"['Array', 'Greedy']",Medium
shortest-and-lexicographically-smallest-beautiful-string,"['String', 'Sliding Window']",Medium
minimum-reverse-operations,"['Array', 'Breadth-First Search', 'Ordered Set']",Hard
maximum-product-of-three-numbers,"['Array', 'Math', 'Sorting']",Easy
number-of-excellent-pairs,"['Array', 'Hash Table', 'Binary Search', 'Bit Manipulation']",Hard
contain-virus,"['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Simulation']",Hard
largest-perimeter-triangle,"['Array', 'Math', 'Greedy', 'Sorting']",Easy
unique-email-addresses,"['Array', 'Hash Table', 'String']",Easy
maximum-product-difference-between-two-pairs,"['Array', 'Sorting']",Easy
verify-preorder-serialization-of-a-binary-tree,"['String', 'Stack', 'Tree', 'Binary Tree']",Medium
number-of-atoms,"['Hash Table', 'String', 'Stack', 'Sorting']",Hard
delete-columns-to-make-sorted-ii,"['Array', 'String', 'Greedy']",Medium
find-the-closest-marked-node,"['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",Medium
random-flip-matrix,"['Hash Table', 'Math', 'Reservoir Sampling', 'Randomized']",Medium
spiral-matrix-iii,"['Array', 'Matrix', 'Simulation']",Medium
palindrome-partitioning-iii,"['String', 'Dynamic Programming']",Hard
next-greater-element-iv,"['Array', 'Binary Search', 'Stack', 'Sorting', 'Heap (Priority Queue)', 'Monotonic Stack']",Hard
count-unique-characters-of-all-substrings-of-a-given-string,"['Hash Table', 'String', 'Dynamic Programming']",Hard
reverse-string-ii,"['Two Pointers', 'String']",Easy
maximize-greatness-of-an-array,"['Array', 'Two Pointers', 'Greedy', 'Sorting']",Medium
find-maximum-non-decreasing-array-length,"['Array', 'Binary Search', 'Dynamic Programming', 'Stack', 'Queue', 'Monotonic Stack', 'Monotonic Queue']",Hard
sum-of-squares-of-special-elements,"['Array', 'Enumeration']",Easy
maximum-subarray-sum-with-one-deletion,"['Array', 'Dynamic Programming']",Medium
smallest-missing-genetic-value-in-each-subtree,"['Dynamic Programming', 'Tree', 'Depth-First Search', 'Union Find']",Hard
dice-roll-simulation,"['Array', 'Dynamic Programming']",Hard
best-time-to-buy-and-sell-stock,"['Array', 'Dynamic Programming']",Easy
minimum-number-of-operations-to-sort-a-binary-tree-by-level,"['Tree', 'Breadth-First Search', 'Binary Tree']",Medium
minimum-subarrays-in-a-valid-split,"['Array', 'Math', 'Dynamic Programming', 'Number Theory']",Medium
plus-one,"['Array', 'Math']",Easy
matrix-similarity-after-cyclic-shifts,"['Array', 'Math', 'Matrix', 'Simulation']",Easy
escape-the-ghosts,"['Array', 'Math']",Medium
number-of-valid-clock-times,"['String', 'Enumeration']",Easy
arithmetic-subarrays,"['Array', 'Hash Table', 'Sorting']",Medium
check-if-a-number-is-majority-element-in-a-sorted-array,"['Array', 'Binary Search']",Easy
number-of-distinct-islands,"['Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Hash Function']",Medium
find-the-distinct-difference-array,"['Array', 'Hash Table']",Easy
valid-anagram,"['Hash Table', 'String', 'Sorting']",Easy
palindrome-permutation,"['Hash Table', 'String', 'Bit Manipulation']",Easy
maximum-length-of-subarray-with-positive-product,"['Array', 'Dynamic Programming', 'Greedy']",Medium
concatenation-of-array,"['Array', 'Simulation']",Easy
path-sum-iii,"['Tree', 'Depth-First Search', 'Binary Tree']",Medium
minimum-moves-to-make-array-complementary,"['Array', 'Hash Table', 'Prefix Sum']",Medium
minimum-sum-of-mountain-triplets-i,['Array'],Easy
product-of-the-last-k-numbers,"['Array', 'Math', 'Design', 'Queue', 'Data Stream']",Medium
sort-vowels-in-a-string,"['String', 'Sorting']",Medium
maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts,"['Array', 'Greedy', 'Sorting']",Medium
maximum-profitable-triplets-with-increasing-prices-ii,"['Array', 'Binary Indexed Tree', 'Segment Tree']",Hard
game-of-nim,"['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Brainteaser', 'Game Theory']",Medium
find-the-kth-largest-integer-in-the-array,"['Array', 'String', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",Medium
design-hashset,"['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']",Easy
find-the-sum-of-the-power-of-all-subsequences,"['Array', 'Dynamic Programming']",Hard
single-row-keyboard,"['Hash Table', 'String']",Easy
html-entity-parser,"['Hash Table', 'String']",Medium
destination-city,"['Array', 'Hash Table', 'String']",Easy
subtract-the-product-and-sum-of-digits-of-an-integer,['Math'],Easy
min-max-game,"['Array', 'Simulation']",Easy
maximum-number-of-integers-to-choose-from-a-range-i,"['Array', 'Hash Table', 'Binary Search', 'Greedy', 'Sorting']",Medium
combinationSum,[],N/A
toss-strange-coins,"['Array', 'Math', 'Dynamic Programming', 'Probability and Statistics']",Medium
check-if-string-is-transformable-with-substring-sort-operations,"['String', 'Greedy', 'Sorting']",Hard
decode-the-slanted-ciphertext,"['String', 'Simulation']",Medium
poor-pigs,"['Math', 'Dynamic Programming', 'Combinatorics']",Hard
rotating-the-box,"['Array', 'Two Pointers', 'Matrix']",Medium
find-longest-awesome-substring,"['Hash Table', 'String', 'Bit Manipulation']",Hard
zigzagLevelOrder,[],N/A
largest-component-size-by-common-factor,"['Array', 'Hash Table', 'Math', 'Union Find', 'Number Theory']",Hard
sort-the-jumbled-numbers,"['Array', 'Sorting']",Medium
snapshot-array,"['Array', 'Hash Table', 'Binary Search', 'Design']",Medium
find-all-lonely-numbers-in-the-array,"['Array', 'Hash Table', 'Counting']",Medium
stone-game-vii,"['Array', 'Math', 'Dynamic Programming', 'Game Theory']",Medium
n-ary-tree-postorder-traversal,"['Stack', 'Tree', 'Depth-First Search']",Easy
